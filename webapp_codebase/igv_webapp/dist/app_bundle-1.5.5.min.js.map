{"version":3,"file":"app_bundle-1.5.5.min.js","sources":["../node_modules/igv-utils/src/vendor/zlib_and_gzip.js","../node_modules/igv-utils/src/stringUtils.js","../node_modules/igv-utils/src/google/googleUtils.js","../node_modules/igv-utils/src/google/googleAuth.js","../node_modules/igv-utils/src/uriUtils.js","../node_modules/igv-utils/src/bgzf.js","../node_modules/igv-utils/src/oauth.js","../node_modules/igv-utils/src/igvxhr.js","../node_modules/igv-utils/src/throttle.js","../node_modules/igv-utils/src/google/googleDrive.js","../node_modules/igv-utils/src/fileUtils.js","../node_modules/igv-utils/src/intervalTree.js","../node_modules/igv-widgets/dist/igv-widgets.js","../js/globals.js","../js/genomeWidgets.js","../js/shareHelper.js","../js/urlShortener.js","../js/app.js","../js/svgWidget.js","../js/shareWidgets.js"],"sourcesContent":["/**\n * @fileoverview Zlib namespace. Zlib の仕様に準拠した圧縮は Zlib.Deflate で実装\n * されている. これは Inflate との共存を考慮している為.\n */\n\nvar USE_TYPEDARRAY = true;\nconst ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE = 65000;\n\nvar Zlib = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  var filename = '' || opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if (USE_TYPEDARRAY && input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n        (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n        (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      if (USE_TYPEDARRAY) {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      } else {\n        buffer.unshift(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n            key,\n            i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n        // local file header\n        30 + filenameLength +\n        // file data\n        file.buffer.length;\n\n    centralDirectorySize +=\n        // file header\n        46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new (USE_TYPEDARRAY ? Uint8Array : Array)(\n      localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n        file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n        /** @type {Zlib.Zip.OperatingSystem} */\n        (file.option['os']) ||\n        Zlib.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n        /** @type {Zlib.Zip.CompressionMethod} */\n        (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n        ((date.getMinutes() & 0x7) << 5) |\n        (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n        (date.getHours()   << 3) |\n        (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n        ((date.getMonth() + 1 & 0x7) << 5) |\n        (date.getDate());\n    output[op1++] = output[op2++] =\n        ((date.getFullYear() - 1980 & 0x7f) << 1) |\n        (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      if (USE_TYPEDARRAY) {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      } else {\n        for (j = 0; j < filenameLength; ++j) {\n          output[op1++] = output[op2++] = filename[j];\n        }\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      if (USE_TYPEDARRAY) {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      } else {\n        for (j = 0; j < commentLength; ++j) {\n          output[op1++] = output[op2++] = extraField[j];\n        }\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      if (USE_TYPEDARRAY) {\n        output.set(comment, op2);\n        op2 += commentLength;\n      } else {\n        for (j = 0; j < commentLength; ++j) {\n          output[op2++] = comment[j];\n        }\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    if (USE_TYPEDARRAY) {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    } else {\n      for (j = 0, jl = file.buffer.length; j < jl; ++j) {\n        output[op1++] = file.buffer[j];\n      }\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    if (USE_TYPEDARRAY) {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    } else {\n      for (j = 0, jl = commentLength; j < jl; ++j) {\n        output[op3++] = this.comment[j];\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib.CRC32.single(key[0], n);\n  key[1] =\n      (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (USE_TYPEDARRAY) {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new (USE_TYPEDARRAY ? Uint32Array : Array)(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.op = Zlib.RawInflate.MaxBackwardLength;\n      this.output =\n          new (USE_TYPEDARRAY ? Uint8Array : Array)(\n              Zlib.RawInflate.MaxBackwardLength +\n              this.bufferSize +\n              Zlib.RawInflate.MaxCopyLength\n          );\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.Order = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.LengthExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.DistCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.DistExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n      // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n      // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n      // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n      // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        if (USE_TYPEDARRAY) {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        } else {\n          while (preCopy--) {\n            output[op++] = input[ip++];\n          }\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  if (USE_TYPEDARRAY) {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  } else {\n    while (len--) {\n      output[op++] = input[ip++];\n    }\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n          Zlib.RawInflate.FixedLiteralLengthTable,\n          Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n          Zlib.RawInflate.FixedLiteralLengthTable,\n          Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n  }\n  if (!USE_TYPEDARRAY) {\n    for (i = hclen, hclen = codeLengths.length; i < hclen; ++i) {\n      codeLengths[Zlib.RawInflate.Order[i]] = 0;\n    }\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable(codeLengths);\n  lengthTable = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable = USE_TYPEDARRAY\n      ? buildHuffmanTable(lengthTable.subarray(0, hlit))\n      : buildHuffmanTable(lengthTable.slice(0, hlit));\n  distTable = USE_TYPEDARRAY\n      ? buildHuffmanTable(lengthTable.subarray(hlit))\n      : buildHuffmanTable(lengthTable.slice(hlit));\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(\n          this.op - Zlib.RawInflate.MaxBackwardLength\n      );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n  /** @type {number} copy index. */\n  var i;\n  /** @type {number} copy limit */\n  var il;\n\n  var output = this.output;\n\n  // copy to output buffer\n  if (USE_TYPEDARRAY) {\n    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n  } else {\n    for (i = 0, il = buffer.length; i < il; ++i) {\n      buffer[i] = output[i + Zlib.RawInflate.MaxBackwardLength];\n    }\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  if (USE_TYPEDARRAY) {\n    output.set(\n        output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength)\n    );\n  } else {\n    for (i = 0; i < Zlib.RawInflate.MaxBackwardLength; ++i) {\n      output[i] = output[backward + i];\n    }\n  }\n\n  this.op = Zlib.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  } else {\n    buffer = output;\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return USE_TYPEDARRAY ?\n        this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) :\n        this.output.slice(Zlib.RawInflate.MaxBackwardLength, this.op);\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  if (USE_TYPEDARRAY) {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  } else {\n    if (this.output.length > op) {\n      this.output.length = op;\n    }\n    buffer = this.output;\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n      opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n        // block header\n      case Zlib.RawInflateStream.Status.INITIALIZED:\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n        // block body\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n        // decode data\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.Order = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.LengthExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.DistCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.DistExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint32Array|Array)} literal and length code lengths. */\n  var litlenLengths;\n  /** @type {!(Uint32Array|Array)} distance code lengths. */\n  var distLengths;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable(codeLengths);\n    lengthTable = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    // literal and length code\n    litlenLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit);\n\n    // distance code\n    distLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hdist);\n\n    this.litlenTable = USE_TYPEDARRAY\n        ? buildHuffmanTable(lengthTable.subarray(0, hlit))\n        : buildHuffmanTable(lengthTable.slice(0, hlit));\n    this.distTable = USE_TYPEDARRAY\n        ? buildHuffmanTable(lengthTable.subarray(hlit))\n        : buildHuffmanTable(lengthTable.slice(hlit));\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  } else {\n    buffer = output;\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    if (USE_TYPEDARRAY) {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    } else {\n      buffer = this.output.slice(this.sp, op);\n    }\n  } else {\n    buffer =\n        USE_TYPEDARRAY ? this.output.subarray(this.sp, op) : this.output.slice(this.sp, op);\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n    if (USE_TYPEDARRAY) {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n    } else {\n      this.output = this.output.slice(op - Zlib.RawInflateStream.MaxBackwardLength);\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var bufferSize;\n  /** @type {Zlib.Inflate.BufferType} */\n  var bufferType;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n}\n\n/**\n * @enum {number}\n */\nZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n        input[this.ip++] << 24 | input[this.ip++] << 16 |\n        input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new (USE_TYPEDARRAY ? Uint8Array : Array)() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    if (USE_TYPEDARRAY) {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    } else {\n      this.input = this.input.concat(input);\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new (USE_TYPEDARRAY ? Uint8Array : Array)();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = USE_TYPEDARRAY ?\n        this.input.subarray(this.rawinflate.ip) :\n        this.input.slice(this.rawinflate.ip);\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n      (input[ip++] << 8)  |\n      (input[ip++] << 16) |\n      (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n      (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  } else {\n    buffer = [];\n    for (i = 0; i < il; ++i) {\n      buffer[i] = member[i].data;\n    }\n    buffer = Array.prototype.concat.apply([], buffer);\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n}\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  if (USE_TYPEDARRAY) {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if (USE_TYPEDARRAY && op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib.Heap = function(length) {\n  this.buffer = new (USE_TYPEDARRAY ? Uint16Array : Array)(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n      // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      (USE_TYPEDARRAY && input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n          (USE_TYPEDARRAY && opt_params['outputBuffer'] instanceof Array) ?\n              new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = USE_TYPEDARRAY ?\n            input.subarray(position, position + 0xffff) :\n            input.slice(position, position + 0xffff);\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeNocompressBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {number} */\n      var len;\n      /** @type {number} */\n      var nlen;\n      /** @type {number} */\n      var i;\n      /** @type {number} */\n      var il;\n\n      var output = this.output;\n      var op = this.op;\n\n      // expand buffer\n      if (USE_TYPEDARRAY) {\n        output = new Uint8Array(this.output.buffer);\n        while (output.length <= op + blockArray.length + 5) {\n          output = new Uint8Array(output.length << 1);\n        }\n        output.set(this.output);\n      }\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.NONE;\n      output[op++] = (bfinal) | (btype << 1);\n\n      // length\n      len = blockArray.length;\n      nlen = (~len + 0x10000) & 0xffff;\n      output[op++] =          len & 0xff;\n      output[op++] =  (len >>> 8) & 0xff;\n      output[op++] =         nlen & 0xff;\n      output[op++] = (nlen >>> 8) & 0xff;\n\n      // copy buffer\n      if (USE_TYPEDARRAY) {\n        output.set(blockArray, op);\n        op += blockArray.length;\n        output = output.subarray(0, op);\n      } else {\n        for (i = 0, il = blockArray.length; i < il; ++i) {\n          output[op++] = blockArray[i];\n        }\n        output.length = op;\n      }\n\n      this.op = op;\n      this.output = output;\n\n      return output;\n    };\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeFixedHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib.BitStream(USE_TYPEDARRAY ?\n          new Uint8Array(this.output.buffer) : this.output, this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.FIXED;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n      this.fixedHuffman(data, stream);\n\n      return stream.finish();\n    };\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeDynamicHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib.BitStream(USE_TYPEDARRAY ?\n          new Uint8Array(this.output.buffer) : this.output, this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n      /** @type {number} */\n      var hlit;\n      /** @type {number} */\n      var hdist;\n      /** @type {number} */\n      var hclen;\n      /** @const @type {Array.<number>} */\n      var hclenOrder =\n          [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var litLenLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var litLenCodes;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var distLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var distCodes;\n      /** @type {{\n       *   codes: !(Array.<number>|Uint32Array),\n       *   freqs: !(Array.<number>|Uint8Array)\n       * }} */\n      var treeSymbols;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var treeLengths;\n      /** @type {Array} */\n      var transLengths = new Array(19);\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var treeCodes;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var bitlen;\n      /** @type {number} */\n      var i;\n      /** @type {number} */\n      var il;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n\n      // リテラル・長さ, 距離のハフマン符号と符号長の算出\n      litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n      litLenCodes = this.getCodesFromLengths_(litLenLengths);\n      distLengths = this.getLengths_(this.freqsDist, 7);\n      distCodes = this.getCodesFromLengths_(distLengths);\n\n      // HLIT, HDIST の決定\n      for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n      for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n      // HCLEN\n      treeSymbols =\n          this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n      treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n      for (i = 0; i < 19; i++) {\n        transLengths[i] = treeLengths[hclenOrder[i]];\n      }\n      for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n      treeCodes = this.getCodesFromLengths_(treeLengths);\n\n      // 出力\n      stream.writeBits(hlit - 257, 5, true);\n      stream.writeBits(hdist - 1, 5, true);\n      stream.writeBits(hclen - 4, 4, true);\n      for (i = 0; i < hclen; i++) {\n        stream.writeBits(transLengths[i], 3, true);\n      }\n\n      // ツリーの出力\n      for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n        code = treeSymbols.codes[i];\n\n        stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n        // extra bits\n        if (code >= 16) {\n          i++;\n          switch (code) {\n            case 16: bitlen = 2; break;\n            case 17: bitlen = 3; break;\n            case 18: bitlen = 7; break;\n            default:\n              throw 'invalid code: ' + code;\n          }\n\n          stream.writeBits(treeSymbols.codes[i], bitlen, true);\n        }\n      }\n\n      this.dynamicHuffman(\n          data,\n          [litLenCodes, litLenLengths],\n          [distCodes, distLengths],\n          stream\n      );\n\n      return stream.finish();\n    };\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.dynamicHuffman =\n    function(dataArray, litLen, dist, stream) {\n      /** @type {number} */\n      var index;\n      /** @type {number} */\n      var length;\n      /** @type {number} */\n      var literal;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var litLenCodes;\n      /** @type {number} */\n      var litLenLengths;\n      /** @type {number} */\n      var distCodes;\n      /** @type {number} */\n      var distLengths;\n\n      litLenCodes = litLen[0];\n      litLenLengths = litLen[1];\n      distCodes = dist[0];\n      distLengths = dist[1];\n\n      // 符号を BitStream に書き込んでいく\n      for (index = 0, length = dataArray.length; index < length; ++index) {\n        literal = dataArray[index];\n\n        // literal or length\n        stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n        // 長さ・距離符号\n        if (literal > 256) {\n          // length extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // distance\n          code = dataArray[++index];\n          stream.writeBits(distCodes[code], distLengths[code], true);\n          // distance extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // 終端\n        } else if (literal === 256) {\n          break;\n        }\n      }\n\n      return stream;\n    };\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib.BitStream.prototype.writeBits.apply(\n        stream,\n        Zlib.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint32Array(table) : table;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0]; break;\n      case (length === 4): return [258, length - 4, 0]; break;\n      case (length === 5): return [259, length - 5, 0]; break;\n      case (length === 6): return [260, length - 6, 0]; break;\n      case (length === 7): return [261, length - 7, 0]; break;\n      case (length === 8): return [262, length - 8, 0]; break;\n      case (length === 9): return [263, length - 9, 0]; break;\n      case (length === 10): return [264, length - 10, 0]; break;\n      case (length <= 12): return [265, length - 11, 1]; break;\n      case (length <= 14): return [266, length - 13, 1]; break;\n      case (length <= 16): return [267, length - 15, 1]; break;\n      case (length <= 18): return [268, length - 17, 1]; break;\n      case (length <= 22): return [269, length - 19, 2]; break;\n      case (length <= 26): return [270, length - 23, 2]; break;\n      case (length <= 30): return [271, length - 27, 2]; break;\n      case (length <= 34): return [272, length - 31, 2]; break;\n      case (length <= 42): return [273, length - 35, 3]; break;\n      case (length <= 50): return [274, length - 43, 3]; break;\n      case (length <= 58): return [275, length - 51, 3]; break;\n      case (length <= 66): return [276, length - 59, 3]; break;\n      case (length <= 82): return [277, length - 67, 4]; break;\n      case (length <= 98): return [278, length - 83, 4]; break;\n      case (length <= 114): return [279, length - 99, 4]; break;\n      case (length <= 130): return [280, length - 115, 4]; break;\n      case (length <= 162): return [281, length - 131, 5]; break;\n      case (length <= 194): return [282, length - 163, 5]; break;\n      case (length <= 226): return [283, length - 195, 5]; break;\n      case (length <= 257): return [284, length - 227, 5]; break;\n      case (length === 258): return [285, length - 258, 0]; break;\n      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = USE_TYPEDARRAY ?\n      new Uint16Array(dataArray.length * 2) : [];\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new (USE_TYPEDARRAY ? Uint32Array : Array)(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new (USE_TYPEDARRAY ? Uint32Array : Array)(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n\n  // 初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0; i <= 285;) { freqsLitLen[i++] = 0; }\n    for (i = 0; i <= 29;) { freqsDist[i++] = 0; }\n  }\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n      // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n      USE_TYPEDARRAY ?  lz77buf.subarray(0, pos) : lz77buf\n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib.RawDeflate.prototype.searchLongestMatch_ =\n    function(data, position, matchList) {\n      var match,\n          currentMatch,\n          matchMax = 0, matchLength,\n          i, j, l, dl = data.length;\n\n      // 候補を後ろから 1 つずつ絞り込んでゆく\n      permatch:\n          for (i = 0, l = matchList.length; i < l; i++) {\n            match = matchList[l - i - 1];\n            matchLength = Zlib.RawDeflate.Lz77MinLength;\n\n            // 前回までの最長一致を末尾から一致検索する\n            if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n              for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n                if (data[match + j - 1] !== data[position + j - 1]) {\n                  continue permatch;\n                }\n              }\n              matchLength = matchMax;\n            }\n\n            // 最長一致探索\n            while (matchLength < Zlib.RawDeflate.Lz77MaxLength &&\n            position + matchLength < dl &&\n            data[match + matchLength] === data[position + matchLength]) {\n              ++matchLength;\n            }\n\n            // マッチ長が同じ場合は後方を優先\n            if (matchLength > matchMax) {\n              currentMatch = match;\n              matchMax = matchLength;\n            }\n\n            // 最長が確定したら後の処理は省略\n            if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n              break;\n            }\n          }\n\n      return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n    };\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib.RawDeflate.prototype.getTreeSymbols_ =\n    function(hlit, litlenLengths, hdist, distLengths) {\n      var src = new (USE_TYPEDARRAY ? Uint32Array : Array)(hlit + hdist),\n          i, j, runLength, l,\n          result = new (USE_TYPEDARRAY ? Uint32Array : Array)(286 + 30),\n          nResult,\n          rpt,\n          freqs = new (USE_TYPEDARRAY ? Uint8Array : Array)(19);\n\n      j = 0;\n      for (i = 0; i < hlit; i++) {\n        src[j++] = litlenLengths[i];\n      }\n      for (i = 0; i < hdist; i++) {\n        src[j++] = distLengths[i];\n      }\n\n      // 初期化\n      if (!USE_TYPEDARRAY) {\n        for (i = 0, l = freqs.length; i < l; ++i) {\n          freqs[i] = 0;\n        }\n      }\n\n      // 符号化\n      nResult = 0;\n      for (i = 0, l = src.length; i < l; i += j) {\n        // Run Length Encoding\n        for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n        runLength = j;\n\n        if (src[i] === 0) {\n          // 0 の繰り返しが 3 回未満ならばそのまま\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = 0;\n              freqs[0]++;\n            }\n          } else {\n            while (runLength > 0) {\n              // 繰り返しは最大 138 までなので切り詰める\n              rpt = (runLength < 138 ? runLength : 138);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              // 3-10 回 -> 17\n              if (rpt <= 10) {\n                result[nResult++] = 17;\n                result[nResult++] = rpt - 3;\n                freqs[17]++;\n                // 11-138 回 -> 18\n              } else {\n                result[nResult++] = 18;\n                result[nResult++] = rpt - 11;\n                freqs[18]++;\n              }\n\n              runLength -= rpt;\n            }\n          }\n        } else {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n          runLength--;\n\n          // 繰り返し回数が3回未満ならばランレングス符号は要らない\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = src[i];\n              freqs[src[i]]++;\n            }\n            // 3 回以上ならばランレングス符号化\n          } else {\n            while (runLength > 0) {\n              // runLengthを 3-6 で分割\n              rpt = (runLength < 6 ? runLength : 6);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              result[nResult++] = 16;\n              result[nResult++] = rpt - 3;\n              freqs[16]++;\n\n              runLength -= rpt;\n            }\n          }\n        }\n      }\n\n      return {\n        codes:\n            USE_TYPEDARRAY ? result.subarray(0, nResult) : result.slice(0, nResult),\n        freqs: freqs\n      };\n    };\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new (USE_TYPEDARRAY ? Uint8Array : Array)(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // 配列の初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0; i < nSymbols; i++) {\n      length[i] = 0;\n    }\n  }\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new (USE_TYPEDARRAY ? Uint32Array : Array)(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new (USE_TYPEDARRAY ? Uint16Array : Array)(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new (USE_TYPEDARRAY ? Uint8Array : Array)(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new (USE_TYPEDARRAY ? Uint16Array : Array)(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      (USE_TYPEDARRAY && (input instanceof Array)) ?\n          new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.fileNameLength) :\n      input.slice(ip, ip += this.fileNameLength)\n  );\n\n  // extra field\n  this.extraField = USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.extraFieldLength) :\n      input.slice(ip, ip += this.extraFieldLength);\n\n  // file comment\n  this.comment = USE_TYPEDARRAY ?\n      input.subarray(ip, ip + this.fileCommentLength) :\n      input.slice(ip, ip + this.fileCommentLength);\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\nZlib.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.fileNameLength) :\n      input.slice(ip, ip += this.fileNameLength)\n  );\n\n  // extra field\n  this.extraField = USE_TYPEDARRAY ?\n      input.subarray(ip, ip += this.extraFieldLength) :\n      input.slice(ip, ip += this.extraFieldLength);\n\n  this.length = ip - this.offset;\n};\n\n\nZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = USE_TYPEDARRAY ?\n      input.subarray(ip, ip + this.commentLength) :\n      input.slice(ip, ip + this.commentLength);\n};\n\nZlib.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib.Unzip.CompressionMethod.STORE:\n      buffer = USE_TYPEDARRAY ?\n          this.input.subarray(offset, offset + length) :\n          this.input.slice(offset, offset + length);\n      break;\n    case Zlib.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n          'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n          ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\nZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\nZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib.Util.stringToByteArray(array);\n  }\n  return Zlib.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib.Adler32.OptimizationParameter ?\n        Zlib.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof (USE_TYPEDARRAY ? Uint8Array : Array) ?\n      buffer :\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(il << 1);\n\n  // copy buffer\n  if (USE_TYPEDARRAY) {\n    buffer.set(oldbuf);\n  } else {\n    // XXX: loop unrolling\n    for (i = 0; i < il; ++i) {\n      buffer[i] = oldbuf[i];\n    }\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |\n        (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n        (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n        Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n        rev32_(number) >> (32 - n) :\n        Zlib.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n    // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  if (USE_TYPEDARRAY) {\n    output = buffer.subarray(0, index);\n  } else {\n    buffer.length = index;\n    output = buffer;\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new (USE_TYPEDARRAY ? Uint8Array : Array)(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n\n/**\n * @fileoverview CRC32 実装.\n */\n\n\n/** @define {boolean} */\nvar ZLIB_CRC32_COMPACT = false;\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.calc = function(data, pos, length) {\n  return Zlib.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib.CRC32.single = function(num, crc) {\n  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib.CRC32.Table = ZLIB_CRC32_COMPACT ? (function() {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var table = new (USE_TYPEDARRAY ? Uint32Array : Array)(256);\n  /** @type {number} */\n  var c;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n\n  for (i = 0; i < 256; ++i) {\n    c = i;\n    for (j = 0; j < 8; ++j) {\n      c = (c & 1) ? (0xedB88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n    table[i] = c >>> 0;\n  }\n\n  return table;\n})() : USE_TYPEDARRAY ? new Uint32Array(Zlib.CRC32.Table_) : Zlib.CRC32.Table_;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n      new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.compress = function(input, opt_params) {\n  return (new Zlib.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var clevel;\n  /** @type {number} */\n  var adler;\n  /** @type {boolean} */\n  var error = false;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  if (USE_TYPEDARRAY) {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\n\nexport default Zlib;\n\n","import Zlib from \"./vendor/zlib_and_gzip.js\";\n\n/**\n * Covers string literals and String objects\n * @param x\n * @returns {boolean}\n */\nfunction isString(x) {\n    return typeof x === \"string\" || x instanceof String\n}\n\n\n// StackOverflow: http://stackoverflow.com/a/10810674/116169\nfunction numberFormatter(rawNumber) {\n\n    var dec = String(rawNumber).split(/[.,]/),\n        sep = ',',\n        decsep = '.';\n\n    return dec[0].split('').reverse().reduce(function (prev, now, i) {\n        return i % 3 === 0 ? prev + sep + now : prev + now;\n    }).split('').reverse().join('') + (dec[1] ? decsep + dec[1] : '');\n}\n\nconst numberUnFormatter = formatedNumber => formatedNumber.split(\",\").join().replace(\",\", \"\", \"g\");\n\nconst splitLines = function (string) {\n    return string.split(/\\n|\\r\\n|\\r/g);\n}\n\n\nfunction splitStringRespectingQuotes(string, delim) {\n\n    var tokens = [],\n        len = string.length,\n        i,\n        n = 0,\n        quote = false,\n        c;\n\n    if (len > 0) {\n\n        tokens[n] = string.charAt(0);\n        for (i = 1; i < len; i++) {\n            c = string.charAt(i);\n            if (c === '\"') {\n                quote = !quote;\n            } else if (!quote && c === delim) {\n                n++;\n                tokens[n] = \"\";\n            } else {\n                tokens[n] += c;\n            }\n        }\n    }\n    return tokens;\n}\n\nfunction stripQuotes(str) {\n    if(str === undefined) {\n        return str;\n    }\n    if(str.startsWith(\"'\") || str.startsWith('\"')) {\n        str = str.substring(1);\n    }\n    if (str.endsWith(\"'\") || str.endsWith('\"')) {\n        str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\n\nfunction hashCode(s) {\n    return s.split(\"\").reduce(function (a, b) {\n        a = ((a << 5) - a) + b.charCodeAt(0);\n        return a & a\n    }, 0);\n}\n\n/**\n * Compress string and encode in a url safe form\n * @param s\n */\nfunction compressString(str) {\n\n    const bytes = [];\n    for (var i = 0; i < str.length; i++) {\n        bytes.push(str.charCodeAt(i));\n    }\n    const compressedBytes = new Zlib.RawDeflate(bytes).compress();            // UInt8Arry\n    const compressedString = String.fromCharCode.apply(null, compressedBytes);      // Convert to string\n    let enc = btoa(compressedString);\n    return enc.replace(/\\+/g, '.').replace(/\\//g, '_').replace(/=/g, '-');   // URL safe\n}\n\n/**\n * Uncompress the url-safe encoded compressed string, presumably created by compressString above\n *\n * @param enc\n * @returns {string}\n */\nfunction uncompressString(enc) {\n\n    enc = enc.replace(/\\./g, '+').replace(/_/g, '/').replace(/-/g, '=')\n\n    const compressedString = atob(enc);\n    const compressedBytes = [];\n    for (let i = 0; i < compressedString.length; i++) {\n        compressedBytes.push(compressedString.charCodeAt(i));\n    }\n    const bytes = new Zlib.RawInflate(compressedBytes).decompress();\n\n    let str = ''\n    for (let b of bytes) {\n        str += String.fromCharCode(b)\n    }\n    return str;\n}\n\nfunction capitalize(str) {\n    return str.length > 0 ? str.charAt(0).toUpperCase() + str.slice(1) : str;\n}\n\n\n/**\n * Parse a locus string and return a range object.  Locus string is of the form chr:start-end.  End is optional\n *\n */\nfunction parseLocusString(string) {\n\n    const t1 = string.split(\":\");\n    const t2 = t1[1].split(\"-\");\n\n    const range = {\n        chr: t1[0],\n        start: Number.parseInt(t2[0].replace(/,/g, '')) - 1\n    };\n\n    if (t2.length > 1) {\n        range.end = Number.parseInt(t2[1].replace(/,/g, ''));\n    } else {\n        range.end = range.start + 1;\n    }\n\n    return range;\n}\n\nexport {\n    isString, numberFormatter, numberUnFormatter, splitLines, splitStringRespectingQuotes, stripQuotes,\n    hashCode, compressString, uncompressString, capitalize, parseLocusString\n};","function isGoogleURL(url) {\n    return (url.includes(\"googleapis\") && !url.includes(\"urlshortener\")) ||\n        isGoogleStorageURL(url) ||\n        isGoogleDriveURL(url)\n}\n\nfunction isGoogleStorageURL(url) {\n    return url.startsWith(\"gs://\") ||\n        url.startsWith(\"https://www.googleapis.com/storage\") ||\n        url.startsWith(\"https://storage.cloud.google.com\") ||\n        url.startsWith(\"https://storage.googleapis.com\");\n}\n\nfunction isGoogleDriveURL(url) {\n    return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n}\n\n/**\n * Translate gs:// urls to https\n * See https://cloud.google.com/storage/docs/json_api/v1\n * @param gsUrl\n * @returns {string|*}\n */\nfunction translateGoogleCloudURL(gsUrl) {\n\n    let {bucket, object} = parseBucketName(gsUrl);\n    object = encode(object);\n\n    const qIdx = gsUrl.indexOf('?');\n    const paramString = (qIdx > 0) ? gsUrl.substring(qIdx) + \"&alt=media\" : \"?alt=media\";\n\n    return `https://storage.googleapis.com/storage/v1/b/${bucket}/o/${object}${paramString}`\n}\n\n/**\n * Parse a google bucket and object name from a google storage URL.  Known forms include\n *\n * gs://BUCKET_NAME/OBJECT_NAME\n * https://storage.googleapis.com/BUCKET_NAME/OBJECT_NAME\n * https://storage.googleapis.com/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\n * https://www.googleapis.com/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\"\n * https://storage.googleapis.com/download/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\n *\n * @param url\n */\nfunction parseBucketName(url) {\n\n    let bucket;\n    let object;\n\n    if (url.startsWith(\"gs://\")) {\n        const i = url.indexOf('/', 5);\n        if (i >= 0) {\n            bucket = url.substring(5, i);\n            const qIdx = url.indexOf('?');\n            object = (qIdx < 0) ? url.substring(i + 1) : url.substring(i + 1, qIdx);\n        }\n\n    } else if (url.startsWith(\"https://storage.googleapis.com\") || url.startsWith(\"https://storage.cloud.google.com\")) {\n        const bucketIdx = url.indexOf(\"/v1/b/\", 8)\n        if (bucketIdx > 0) {\n            const objIdx = url.indexOf(\"/o/\", bucketIdx);\n            if (objIdx > 0) {\n                const queryIdx = url.indexOf(\"?\", objIdx);\n                bucket = url.substring(bucketIdx + 6, objIdx);\n                object = queryIdx > 0 ? url.substring(objIdx + 3, queryIdx) : url.substring(objIdx + 3);\n            }\n\n        } else {\n            const idx1 = url.indexOf(\"/\", 8);\n            const idx2 = url.indexOf(\"/\", idx1+1);\n            const idx3 = url.indexOf(\"?\", idx2);\n            if (idx2 > 0) {\n                bucket = url.substring(idx1+1, idx2);\n                object = idx3 < 0 ? url.substring(idx2+1) : url.substring(idx2+1, idx3);\n            }\n        }\n\n    } else if (url.startsWith(\"https://www.googleapis.com/storage/v1/b\")) {\n        const bucketIdx = url.indexOf(\"/v1/b/\", 8);\n        const objIdx = url.indexOf(\"/o/\", bucketIdx);\n        if (objIdx > 0) {\n            const queryIdx = url.indexOf(\"?\", objIdx);\n            bucket = url.substring(bucketIdx + 6, objIdx);\n            object = queryIdx > 0 ? url.substring(objIdx + 3, queryIdx) : url.substring(objIdx + 3);\n        }\n    }\n\n    if (bucket && object) {\n        return {\n            bucket, object\n        }\n    } else {\n        throw Error(`Unrecognized Google Storage URI: ${url}`)\n    }\n\n}\n\nfunction driveDownloadURL(link) {\n    // Return a google drive download url for the sharable link\n    //https://drive.google.com/open?id=0B-lleX9c2pZFbDJ4VVRxakJzVGM\n    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n    var id = getGoogleDriveFileID(link);\n    return id ? \"https://www.googleapis.com/drive/v3/files/\" + id + \"?alt=media&supportsTeamDrives=true\" : link;\n}\n\nfunction getGoogleDriveFileID(link) {\n\n    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n    //https://www.googleapis.com/drive/v3/files/1w-tvo6p1SH4p1OaQSVxpkV_EJgGIstWF?alt=media&supportsTeamDrives=true\"\n\n    if (link.includes(\"/open?id=\")) {\n        const i1 = link.indexOf(\"/open?id=\") + 9;\n        const i2 = link.indexOf(\"&\");\n        if (i1 > 0 && i2 > i1) {\n            return link.substring(i1, i2)\n        } else if (i1 > 0) {\n            return link.substring(i1);\n        }\n\n    } else if (link.includes(\"/file/d/\")) {\n        const i1 = link.indexOf(\"/file/d/\") + 8;\n        const i2 = link.lastIndexOf(\"/\");\n        return link.substring(i1, i2);\n\n    } else if (link.startsWith(\"https://www.googleapis.com/drive\")) {\n        let i1 = link.indexOf(\"/files/\")\n        const i2 = link.indexOf(\"?\")\n        if (i1 > 0) {\n            i1 += 7;\n            return i2 > 0 ?\n                link.substring(i1, i2) :\n                link.substring(i1)\n        }\n    }\n\n    throw Error(\"Unknown Google Drive url format: \" + link);\n\n\n}\n\n\n/**\n * Percent a GCS object name.  See https://cloud.google.com/storage/docs/request-endpoints\n * Specific characters to encode:\n *   !, #, $, &, ', (, ), *, +, ,, /, :, ;, =, ?, @, [, ], and space characters.\n * @param obj\n */\n\nfunction encode(objectName) {\n\n    let result = '';\n    objectName.split('').forEach(function(letter) {\n        if(encodings.has(letter)) {\n            result += encodings.get(letter);\n        } else {\n            result += letter;\n        }\n    })\n    return result;\n}\n\n//\t%23\t%24\t%25\t%26\t%27\t%28\t%29\t%2A\t%2B\t%2C\t%2F\t%3A\t%3B\t%3D\t%3F\t%40\t%5B\t%5D\nconst encodings = new Map();\nencodings.set(\"!\", \"%21\");\nencodings.set(\"#\", \"%23\");\nencodings.set(\"$\", \"%24\");\nencodings.set(\"%\", \"%25\");\nencodings.set(\"&\", \"%26\");\nencodings.set(\"'\", \"%27\");\nencodings.set(\"(\", \"%28\");\nencodings.set(\")\", \"%29\");\nencodings.set(\"*\", \"%2A\");\nencodings.set(\"+\", \"%2B\");\nencodings.set(\",\", \"%2C\");\nencodings.set(\"/\", \"%2F\");\nencodings.set(\":\", \"%3A\");\nencodings.set(\";\", \"%3B\");\nencodings.set(\"=\", \"%3D\");\nencodings.set(\"?\", \"%3F\");\nencodings.set(\"@\", \"%40\");\nencodings.set(\"[\", \"%5B\");\nencodings.set(\"]\", \"%5D\");\nencodings.set(\" \", \"%20\");\n\n// For testing\n//for(let [key, value] of encodings) {\n//    const v2 = encodeURIComponent(key);\n//    console.log(value + \"  \" + v2);\n//}\n\nexport {\n    isGoogleURL, driveDownloadURL, getGoogleDriveFileID,\n    isGoogleDriveURL, isGoogleStorageURL, translateGoogleCloudURL, parseBucketName\n}\n\n\n\n","// Convenience functions for the gapi oAuth library.\n// This wrapper is stateless -- this is important as multiple copies of igv-utils might be present\n// in an application.  All state is held in the gapi library itself.\n\nimport {isGoogleDriveURL, isGoogleStorageURL} from \"./googleUtils.js\"\n\nconst FIVE_MINUTES = 5 * 60 * 1000;\n\nasync function load(library) {\n    return new Promise(function (resolve, reject) {\n        gapi.load(library, {\n            callback: resolve,\n            onerror: reject\n        });\n    })\n}\n\nasync function init(config) {\n\n    if (isInitialized()) {\n        console.warn(\"oAuth has already been initialized\");\n        return;\n    }\n\n    gapi.apiKey = config.apiKey;\n\n    // copy config, gapi will modify it\n    const configCopy = Object.assign({}, config);\n    if (!configCopy.scope) {\n        configCopy.scope = 'profile'\n    }\n    if (!config.client_id) {\n        config.client_id = config.clientId;\n    }\n\n    await load(\"auth2\");\n    return new Promise(function (resolve, reject) {\n        gapi.auth2.init(configCopy).then(resolve, reject)\n    })\n}\n\nfunction isInitialized() {\n    return typeof gapi !== \"undefined\" && gapi.auth2 && gapi.auth2.getAuthInstance();\n}\n\nlet inProgress = false;\n\nasync function getAccessToken(scope) {\n\n    if (typeof gapi === \"undefined\") {\n        throw Error(\"Google authentication requires the 'gapi' library\")\n    }\n    if (!gapi.auth2) {\n        throw Error(\"Google 'auth2' has not been initialized\")\n    }\n\n    if (inProgress) {\n        return new Promise(function (resolve, reject) {\n            let intervalID;\n            const checkForToken = () => {    // Wait for inProgress to equal \"false\"\n                try {\n                    if (inProgress === false) {\n                        //console.log(\"Delayed resolution for \" + scope);\n                        resolve(getAccessToken(scope));\n                        clearInterval(intervalID);\n                    }\n                } catch (e) {\n                    clearInterval(intervalID);\n                    reject(e);\n                }\n            }\n            intervalID = setInterval(checkForToken, 100);\n        })\n    } else {\n        inProgress = true;\n        try {\n            let currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n            let token;\n            if (currentUser.isSignedIn()) {\n                if (!currentUser.hasGrantedScopes(scope)) {\n                    await currentUser.grant({scope})\n                }\n                const {access_token, expires_at} = currentUser.getAuthResponse();\n                if (Date.now() < (expires_at - FIVE_MINUTES)) {\n                    token = {access_token, expires_at};\n                } else {\n                    const {access_token, expires_at} = currentUser.reloadAuthResponse();\n                    token = {access_token, expires_at};\n                }\n            } else {\n                currentUser = await signIn(scope);\n                const {access_token, expires_at} = currentUser.getAuthResponse();\n                token = {access_token, expires_at};\n            }\n            return token;\n        } finally {\n            inProgress = false;\n        }\n    }\n}\n\n/**\n * Return the current access token if the user is signed in, or undefined otherwise.  This function does not\n * attempt a signIn or request any specfic scopes.\n *\n * @returns access_token || undefined\n */\nfunction getCurrentAccessToken() {\n\n    let currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n    if (currentUser && currentUser.isSignedIn()) {\n        const {access_token, expires_at} = currentUser.getAuthResponse();\n        return {access_token, expires_at};\n    } else {\n        return undefined;\n    }\n\n}\n\nasync function signIn(scope) {\n\n    const options = new gapi.auth2.SigninOptionsBuilder();\n    options.setPrompt('select_account');\n    options.setScope(scope);\n    return gapi.auth2.getAuthInstance().signIn(options)\n}\n\nasync function signOut() {\n    return gapi.auth2.getAuthInstance().signOut();\n}\n\nfunction getScopeForURL(url) {\n    if (isGoogleDriveURL(url)) {\n        return \"https://www.googleapis.com/auth/drive.file\";\n    } else if (isGoogleStorageURL(url)) {\n        return \"https://www.googleapis.com/auth/devstorage.read_only\";\n    } else {\n        return 'https://www.googleapis.com/auth/userinfo.profile';\n    }\n}\n\nfunction getApiKey() {\n    return gapi.apiKey;\n}\n\n\nexport {init, getAccessToken, getCurrentAccessToken, getScopeForURL, getApiKey, isInitialized, signIn, signOut}\n\n","import Zlib from \"./vendor/zlib_and_gzip.js\";\n\nif (typeof process === 'object' && typeof window === 'undefined') {\n    global.atob = function (str) {\n        return Buffer.from(str, 'base64').toString('binary');\n    }\n}\n\n/**\n * @param dataURI\n * @returns {Array<number>|Uint8Array}\n */\nfunction decodeDataURI(dataURI) {\n\n    const split = dataURI.split(',');\n    const info = split[0].split(':')[1];\n    let dataString = split[1];\n\n    if (info.indexOf('base64') >= 0) {\n        dataString = atob(dataString);\n    } else {\n        dataString = decodeURI(dataString);      // URL encoded string -- not currently used of tested\n    }\n    const bytes = new Uint8Array(dataString.length);\n    for (let i = 0; i < dataString.length; i++) {\n        bytes[i] = dataString.charCodeAt(i);\n    }\n\n    let plain\n    if (info.indexOf('gzip') > 0) {\n        const inflate = new Zlib.Gunzip(bytes)\n        plain = inflate.decompress()\n    } else {\n        plain = bytes\n    }\n    return plain\n}\n\nfunction parseUri(str) {\n\n    var o = options,\n        m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n        uri = {},\n        i = 14;\n\n    while (i--) uri[o.key[i]] = m[i] || \"\";\n\n    uri[o.q.name] = {};\n    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n        if ($1) uri[o.q.name][$1] = $2;\n    });\n\n    return uri;\n}\n\nconst options = {\n    strictMode: false,\n    key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n    q: {\n        name: \"queryKey\",\n        parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n        strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n        loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n};\n\nfunction addExtension(url, extension) {\n\n    const idx = url.indexOf(\"?\");\n    if (idx < 0) {\n        return url + extension;\n    } else {\n        return url.substring(0, idx) + extension + url.substring(idx);\n    }\n}\n\n/**\n * Resolve a url, which might be a string, function (that returns a string or Promse), or Promise (that resolves to a string)\n *\n * @param url\n * @returns {Promise<*>}\n */\nasync function resolveURL(url) {\n    return (typeof url === 'function')  ?  url() :  url;\n}\n\nexport {parseUri, decodeDataURI, addExtension, resolveURL};\n\n","import Zlib from \"./vendor/zlib_and_gzip.js\";\n\nconst BLOCK_HEADER_LENGTH = 18;\nconst BLOCK_LENGTH_OFFSET = 16;  // Location in the gzip block of the total block size (actually total block size - 1)\nconst BLOCK_FOOTER_LENGTH = 8; // Number of bytes that follow the deflated data\nconst MAX_COMPRESSED_BLOCK_SIZE = 64 * 1024; // We require that a compressed block (including header and footer, be <= this)\nconst GZIP_OVERHEAD = BLOCK_HEADER_LENGTH + BLOCK_FOOTER_LENGTH + 2; // Gzip overhead is the header, the footer, and the block size (encoded as a short).\nconst GZIP_ID1 = 31;   // Magic number\nconst GZIP_ID2 = 139;  // Magic number\nconst GZIP_FLG = 4; // FEXTRA flag means there are optional fields\n\n// Uncompress data,  assumed to be series of bgzipped blocks\nfunction unbgzf(data, lim) {\n\n    const oBlockList = [];\n    let ptr = 0;\n    let totalSize = 0;\n\n    lim = lim || data.byteLength - 18;\n\n    while (ptr < lim) {\n        try {\n            const ba = new Uint8Array(data, ptr, 18);\n            const xlen = (ba[11] << 8) | (ba[10]);\n            const si1 = ba[12];\n            const si2 = ba[13];\n            const slen = (ba[15] << 8) | (ba[14]);\n            const bsize = ((ba[17] << 8) | (ba[16])) + 1;\n            const start = 12 + xlen + ptr;    // Start of CDATA\n            const bytesLeft = data.byteLength - start;\n            const cDataSize = bsize - xlen - 19;\n            if (bytesLeft < cDataSize || cDataSize <= 0) break;\n\n            const a = new Uint8Array(data, start, cDataSize);\n            const inflate = new Zlib.RawInflate(a);\n            const unc = inflate.decompress();\n\n            ptr += inflate.ip + 26\n            totalSize += unc.byteLength;\n            oBlockList.push(unc);\n        } catch (e) {\n            console.error(e)\n            break;\n        }\n    }\n\n    // Concatenate decompressed blocks\n    if (oBlockList.length === 1) {\n        return oBlockList[0];\n    } else {\n        const out = new Uint8Array(totalSize);\n        let cursor = 0;\n        for (let i = 0; i < oBlockList.length; ++i) {\n            var b = new Uint8Array(oBlockList[i]);\n            arrayCopy(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out;\n    }\n}\n\nfunction bgzBlockSize(data) {\n    const ba = new Uint8Array(data);\n    const bsize = (ba[17] << 8 | ba[16]) + 1;\n    return bsize;\n}\n\n// From Thomas Down's zlib implementation\n\nconst testArray = new Uint8Array(1);\nconst hasSubarray = (typeof testArray.subarray === 'function');\nconst hasSlice = false; /* (typeof testArray.slice === 'function'); */ // Chrome slice performance is so dire that we're currently not using it...\n\nfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count === 0) {\n        return;\n    }\n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n    if (srcOffset === 0 && count === src.length) {\n        arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n        arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n    } else if (src.BYTES_PER_ELEMENT === 1 && count > 100) {\n        arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else {\n        arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n}\n\nfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n    for (let i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\nexport {unbgzf, bgzBlockSize};\n\n","// Support for oauth token based authorization\n// This class supports explicit setting of an oauth token either globally or for specific hosts.\n//\n// The variable oauth.google.access_token, which becomes igv.oauth.google.access_token on ES5 conversion is\n// supported for backward compatibility\n\nconst DEFAULT_HOST = \"googleapis\"\n\nconst oauth = {\n\n    oauthTokens: {},\n\n    setToken: function (token, host) {\n        host = host || DEFAULT_HOST;\n        this.oauthTokens[host] = token;\n        if(host === DEFAULT_HOST) {\n            this.google.access_token = token;    // legacy support\n        }\n    },\n\n    getToken: function (host) {\n        host = host || DEFAULT_HOST;\n        let token;\n        for (let key of Object.keys(this.oauthTokens)) {\n            const regex = wildcardToRegExp(key);\n            if (regex.test(host)) {\n                token = this.oauthTokens[key];\n                break;\n            }\n        }\n        return token;\n    },\n\n    removeToken: function (host) {\n        host = host || DEFAULT_HOST;\n        for (let key of Object.keys(this.oauthTokens)) {\n            const regex = wildcardToRegExp(key);\n            if (regex.test(host)) {\n                this.oauthTokens[key] = undefined;\n            }\n        }\n        if(host === DEFAULT_HOST) {\n            this.google.access_token = undefined;    // legacy support\n        }\n    },\n\n    // Special object for google -- legacy support\n    google: {\n        setToken: function (token) {\n            oauth.setToken(token);\n        }\n    }\n}\n\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n *\n * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n */\nfunction wildcardToRegExp(s) {\n    return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n *\n * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n */\nfunction regExpEscape(s) {\n    return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n\nexport default oauth;\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport oauth from \"./oauth.js\";\nimport {unbgzf} from './bgzf.js';\nimport * as StringUtils from './stringUtils.js'\nimport * as FileUtils from './fileUtils.js'\nimport * as URIUtils from './uriUtils.js'\nimport * as GoogleUtils from './google/googleUtils.js'\nimport * as GoogleAuth from './google/googleAuth.js'\nimport * as GoogleDrive from './google/googleDrive.js';\nimport Zlib from \"./vendor/zlib_and_gzip.js\"\nimport Throttle from \"./throttle.js\"\n\nvar NONE = 0;\nvar GZIP = 1;\nvar BGZF = 2;\nvar UNKNOWN = 3;\nlet RANGE_WARNING_GIVEN = false;\n\nconst googleThrottle = new Throttle({\n    requestsPerSecond: 8\n})\n\nconst igvxhr = {\n\n    apiKey: undefined,\n\n    setApiKey: function (key) {\n        this.apiKey = key;\n    },\n\n    load: load,\n\n    loadArrayBuffer: async function (url, options) {\n        options = options || {};\n        if (!options.responseType) {\n            options.responseType = \"arraybuffer\";\n        }\n        if (url instanceof File) {\n            return loadFileSlice(url, options);\n        } else {\n            return load(url, options);\n        }\n    },\n\n    loadJson: async function (url, options) {\n        options = options || {};\n        const method = options.method || (options.sendData ? \"POST\" : \"GET\");\n        if (method === \"POST\") {\n            options.contentType = \"application/json\";\n        }\n        const result = await this.loadString(url, options)\n        if (result) {\n            return JSON.parse(result);\n        } else {\n            return result;\n        }\n    },\n\n    loadString: async function (path, options) {\n        options = options || {};\n        if (path instanceof File) {\n            return loadStringFromFile(path, options);\n        } else {\n            return loadStringFromUrl(path, options);\n        }\n    }\n}\n\nasync function load(url, options) {\n\n    options = options || {};\n    const urlType = typeof url;\n\n    // Resolve functions, promises, and functions that return promises\n    url = await (typeof url === 'function' ? url() : url);\n\n    if (url instanceof File) {\n        return loadFileSlice(url, options);\n    } else if (typeof url.startsWith === 'function') {   // Test for string\n        if (url.startsWith(\"data:\")) {\n            return URIUtils.decodeDataURI(url)\n        } else {\n            if (url.startsWith(\"https://drive.google.com\")) {\n                url = GoogleUtils.driveDownloadURL(url);\n            }\n            if (GoogleUtils.isGoogleDriveURL(url) || url.startsWith(\"https://www.dropbox.com\")) {\n                return googleThrottle.add(async function () {\n                    return loadURL(url, options)\n                })\n            } else {\n                return loadURL(url, options);\n            }\n        }\n    } else {\n        throw Error(`url must be either a 'File', 'string', 'function', or 'Promise'.  Actual type: ${urlType}`);\n    }\n}\n\nasync function loadURL(url, options) {\n\n    //console.log(`${Date.now()}   ${url}`)\n    url = mapUrl(url);\n\n    options = options || {};\n\n    let oauthToken = options.oauthToken || getOauthToken(url);\n    if (oauthToken) {\n        oauthToken = await (typeof oauthToken === 'function' ? oauthToken() : oauthToken);\n    }\n\n    return new Promise(function (resolve, reject) {\n\n        // Various Google tansformations\n        if (GoogleUtils.isGoogleURL(url)) {\n            if (GoogleUtils.isGoogleStorageURL(url)) {\n                url = GoogleUtils.translateGoogleCloudURL(url);\n            }\n            url = addApiKey(url);\n\n            if (GoogleUtils.isGoogleDriveURL(url)) {\n                addTeamDrive(url);\n            }\n\n            // If we have an access token try it, but don't force a signIn or request for scopes yet\n            if (!oauthToken) {\n                oauthToken = getCurrentGoogleAccessToken();\n            }\n        }\n\n        const headers = options.headers || {};\n        if (oauthToken) {\n            addOauthHeaders(headers, oauthToken);\n        }\n        const range = options.range;\n        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n        const isSafari = navigator.vendor.indexOf(\"Apple\") === 0 && /\\sSafari\\//.test(navigator.userAgent);\n\n        if (range && isChrome && !isAmazonV4Signed(url)) {\n            // Hack to prevent caching for byte-ranges. Attempt to fix net:err-cache errors in Chrome\n            url += url.includes(\"?\") ? \"&\" : \"?\";\n            url += \"someRandomSeed=\" + Math.random().toString(36);\n        }\n\n        const xhr = new XMLHttpRequest();\n        const sendData = options.sendData || options.body;\n        const method = options.method || (sendData ? \"POST\" : \"GET\");\n        const responseType = options.responseType;\n        const contentType = options.contentType;\n        const mimeType = options.mimeType;\n\n        xhr.open(method, url);\n\n        if(options.timeout) {\n            xhr.timeout = options.timeout;\n        }\n\n        if (range) {\n            var rangeEnd = range.size ? range.start + range.size - 1 : \"\";\n            xhr.setRequestHeader(\"Range\", \"bytes=\" + range.start + \"-\" + rangeEnd);\n            //      xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");    <= This can cause CORS issues, disabled for now\n        }\n        if (contentType) {\n            xhr.setRequestHeader(\"Content-Type\", contentType);\n        }\n        if (mimeType) {\n            xhr.overrideMimeType(mimeType);\n        }\n        if (responseType) {\n            xhr.responseType = responseType;\n        }\n        if (headers) {\n            for (let key of Object.keys(headers)) {\n                const value = headers[key];\n                xhr.setRequestHeader(key, value);\n            }\n        }\n\n        // NOTE: using withCredentials with servers that return \"*\" for access-allowed-origin will fail\n        if (options.withCredentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.onload = async function (event) {\n            // when the url points to a local file, the status is 0 but that is not an error\n            if (xhr.status === 0 || (xhr.status >= 200 && xhr.status <= 300)) {\n                if (range && xhr.status !== 206 && range.start !== 0) {\n                    // For small files a range starting at 0 can return the whole file => 200\n                    // Provide just the slice we asked for, throw out the rest quietly\n                    // If file is large warn user\n                    if (xhr.response.length > 100000 && !RANGE_WARNING_GIVEN) {\n                        alert(`Warning: Range header ignored for URL: ${url}.  This can have performance impacts.`);\n                    }\n                    resolve(xhr.response.slice(range.start, range.start + range.size));\n\n                } else {\n                    resolve(xhr.response);\n                }\n            } else if ((typeof gapi !== \"undefined\") &&\n                ((xhr.status === 404 || xhr.status === 401 || xhr.status === 403) &&\n                    GoogleUtils.isGoogleURL(url)) &&\n                !options.retries) {\n                tryGoogleAuth();\n\n            } else {\n                if (xhr.status === 403) {\n                    handleError(\"Access forbidden: \" + url)\n                } else if (xhr.status === 416) {\n                    //  Tried to read off the end of the file.   This shouldn't happen, but if it does return an\n                    handleError(\"Unsatisfiable range\");\n                } else {\n                    handleError(xhr.status);\n                }\n            }\n        };\n\n        xhr.onerror = function (event) {\n            if (GoogleUtils.isGoogleURL(url) && !options.retries) {\n                tryGoogleAuth();\n            }\n            handleError(\"Error accessing resource: \" + url + \" Status: \" + xhr.status);\n        }\n\n        xhr.ontimeout = function (event) {\n            handleError(\"Timed out\");\n        };\n\n        xhr.onabort = function (event) {\n            console.log(\"Aborted\");\n            reject(event);\n        };\n\n        try {\n            xhr.send(sendData);\n        } catch (e) {\n            reject(e);\n        }\n\n\n        function handleError(error) {\n            if (reject) {\n                reject(error);\n            } else {\n                throw error;\n            }\n        }\n\n        async function tryGoogleAuth() {\n            try {\n                const accessToken = await fetchGoogleAccessToken(url);\n                options.retries = 1;\n                options.oauthToken = accessToken;\n                const response = await load(url, options);\n                resolve(response);\n            } catch (e) {\n                if (e.error) {\n                    const msg = e.error.startsWith(\"popup_blocked\") ?\n                        \"Google login popup blocked by browser.\" :\n                        e.error;\n                    alert(msg);\n                } else {\n                    handleError(e);\n                }\n            }\n        }\n    })\n\n}\n\nasync function loadFileSlice(localfile, options) {\n\n    let blob = (options && options.range) ?\n        localfile.slice(options.range.start, options.range.start + options.range.size) :\n        localfile;\n\n    if (\"arraybuffer\" === options.responseType) {\n        return blobToArrayBuffer(blob);\n    } else {\n        // binary string format, shouldn't be used anymore\n        return new Promise(function (resolve, reject) {\n            const fileReader = new FileReader();\n            fileReader.onload = function (e) {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = function (e) {\n                console.error(\"reject uploading local file \" + localfile.name);\n                reject(null, fileReader);\n            };\n            fileReader.readAsBinaryString(blob)\n            console.warn(\"Deprecated method used: readAsBinaryString\")\n        })\n    }\n}\n\nasync function loadStringFromFile(localfile, options) {\n\n    const blob = options.range ? localfile.slice(options.range.start, options.range.start + options.range.size) : localfile;\n    let compression = NONE;\n    if (options && options.bgz || localfile.name.endsWith(\".bgz\")) {\n        compression = BGZF;\n    } else if (localfile.name.endsWith(\".gz\")) {\n        compression = GZIP;\n    }\n\n    if (compression === NONE) {\n        return blobToText(blob);\n    } else {\n        const arrayBuffer = await blobToArrayBuffer(blob);\n        return arrayBufferToString(arrayBuffer, compression);\n    }\n}\n\nasync function blobToArrayBuffer(blob) {\n    if (typeof blob.arrayBuffer === 'function') {\n        return blob.arrayBuffer();\n    }\n    return new Promise(function (resolve, reject) {\n        const fileReader = new FileReader();\n        fileReader.onload = function (e) {\n            resolve(fileReader.result);\n        };\n        fileReader.onerror = function (e) {\n            console.error(\"reject uploading local file \" + localfile.name);\n            reject(null, fileReader);\n        };\n        fileReader.readAsArrayBuffer(blob);\n    })\n}\n\nasync function blobToText(blob) {\n    if (typeof blob.text === 'function') {\n        return blob.text();\n    }\n    return new Promise(function (resolve, reject) {\n        const fileReader = new FileReader();\n        fileReader.onload = function (e) {\n            resolve(fileReader.result);\n        };\n        fileReader.onerror = function (e) {\n            console.error(\"reject uploading local file \" + localfile.name);\n            reject(null, fileReader);\n        };\n        fileReader.readAsText(blob);\n    })\n}\n\nasync function loadStringFromUrl(url, options) {\n\n    options = options || {};\n\n    const fn = options.filename || await getFilename(url);\n    let compression = UNKNOWN;\n    if (options.bgz) {\n        compression = BGZF;\n    } else if (fn.endsWith(\".gz\")) {\n        compression = GZIP;\n    }\n\n    options.responseType = \"arraybuffer\";\n    const data = await igvxhr.load(url, options);\n    return arrayBufferToString(data, compression);\n}\n\n\nfunction isAmazonV4Signed(url) {\n    return url.indexOf(\"X-Amz-Signature\") > -1;\n}\n\nfunction getOauthToken(url) {\n\n    // Google is the default provider, don't try to parse host for google URLs\n    const host = GoogleUtils.isGoogleURL(url) ?\n        undefined :\n        URIUtils.parseUri(url).host;\n    let token = oauth.getToken(host);\n    if (token) {\n        return token;\n    } else if (host === undefined) {\n        const googleToken = getCurrentGoogleAccessToken();\n        if (googleToken && googleToken.expires_at > Date.now()) {\n            return googleToken.access_token;\n        }\n    }\n}\n\n/**\n * Return a Google oAuth token, triggering a sign in if required.   This method should not be called until we know\n * a token is required, that is until we've tried the url and received a 401, 403, or 404.\n *\n * @param url\n * @returns the oauth token\n */\nasync function fetchGoogleAccessToken(url) {\n    console.log(\"Fetch token for \" + url);\n    if (GoogleAuth.isInitialized()) {\n        const scope = GoogleAuth.getScopeForURL(url);\n        const googleToken = await GoogleAuth.getAccessToken(scope);\n        return googleToken ? googleToken.access_token : undefined;\n    } else {\n        throw Error(\n            `Authorization is required, but Google oAuth has not been initalized. Contact your site administrator for assistance.`)\n    }\n}\n\n/**\n * Return the current google access token, if one exists.  Do not triger signOn or request additional scopes.\n * @returns {undefined|access_token}\n */\nfunction getCurrentGoogleAccessToken() {\n    if (GoogleAuth.isInitialized()) {\n        const googleToken = GoogleAuth.getCurrentAccessToken();\n        return googleToken ? googleToken.access_token : undefined;\n    } else {\n        return undefined;\n    }\n}\n\nfunction addOauthHeaders(headers, acToken) {\n    if (acToken) {\n        headers[\"Cache-Control\"] = \"no-cache\";\n        headers[\"Authorization\"] = \"Bearer \" + acToken;\n    }\n    return headers;\n}\n\n\nfunction addApiKey(url) {\n    let apiKey = igvxhr.apiKey;\n    if (!apiKey && typeof gapi !== \"undefined\") {\n        apiKey = gapi.apiKey;\n    }\n    if (apiKey !== undefined && !url.includes(\"key=\")) {\n        const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\"\n        url = url + paramSeparator + \"key=\" + apiKey;\n    }\n    return url;\n}\n\nfunction addTeamDrive(url) {\n    if (url.includes(\"supportsTeamDrive\")) {\n        return url;\n    } else {\n        const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\"\n        url = url + paramSeparator + \"supportsTeamDrive=true\";\n    }\n}\n\n/**\n * Perform some well-known url mappings.\n * @param url\n */\nfunction mapUrl(url) {\n\n    if (url.includes(\"//www.dropbox.com\")) {\n        return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n    } else if (url.includes(\"//drive.google.com\")) {\n        return GoogleUtils.driveDownloadURL(url);\n    } else if (url.includes(\"//www.broadinstitute.org/igvdata\")) {\n        return url.replace(\"//www.broadinstitute.org/igvdata\", \"//data.broadinstitute.org/igvdata\");\n    } else if (url.includes(\"//igvdata.broadinstitute.org\")) {\n        return url.replace(\"//igvdata.broadinstitute.org\", \"https://dn7ywbm9isq8j.cloudfront.net\")\n    } else if (url.startsWith(\"ftp://ftp.ncbi.nlm.nih.gov/geo\")) {\n        return url.replace(\"ftp://\", \"https://\")\n    } else {\n        return url;\n    }\n}\n\n\nfunction arrayBufferToString(arraybuffer, compression) {\n\n    if (compression === UNKNOWN && arraybuffer.byteLength > 2) {\n        const m = new Uint8Array(arraybuffer, 0, 2);\n        if (m[0] === 31 && m[1] === 139) {\n            compression = GZIP;\n        }\n    }\n\n    let plain;\n    if (compression === GZIP) {\n        const inflate = new Zlib.Gunzip(new Uint8Array(arraybuffer));\n        plain = inflate.decompress();\n    } else if (compression === BGZF) {\n        plain = unbgzf(arraybuffer);\n    } else {\n        plain = new Uint8Array(arraybuffer);\n    }\n\n    if ('TextDecoder' in getGlobalObject()) {\n        return new TextDecoder().decode(plain);\n    } else {\n        return decodeUTF8(plain);\n    }\n}\n\n/**\n * Use when TextDecoder is not available (primarily IE).\n *\n * From: https://gist.github.com/Yaffle/5458286\n *\n * @param octets\n * @returns {string}\n */\nfunction decodeUTF8(octets) {\n    var string = \"\";\n    var i = 0;\n    while (i < octets.length) {\n        var octet = octets[i];\n        var bytesNeeded = 0;\n        var codePoint = 0;\n        if (octet <= 0x7F) {\n            bytesNeeded = 0;\n            codePoint = octet & 0xFF;\n        } else if (octet <= 0xDF) {\n            bytesNeeded = 1;\n            codePoint = octet & 0x1F;\n        } else if (octet <= 0xEF) {\n            bytesNeeded = 2;\n            codePoint = octet & 0x0F;\n        } else if (octet <= 0xF4) {\n            bytesNeeded = 3;\n            codePoint = octet & 0x07;\n        }\n        if (octets.length - i - bytesNeeded > 0) {\n            var k = 0;\n            while (k < bytesNeeded) {\n                octet = octets[i + k + 1];\n                codePoint = (codePoint << 6) | (octet & 0x3F);\n                k += 1;\n            }\n        } else {\n            codePoint = 0xFFFD;\n            bytesNeeded = octets.length - i;\n        }\n        string += String.fromCodePoint(codePoint);\n        i += bytesNeeded + 1;\n    }\n    return string\n}\n\n\nfunction getGlobalObject() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    } else {\n        return window;\n    }\n}\n\nasync function getFilename(url) {\n    if (StringUtils.isString(url) && url.startsWith(\"https://drive.google.com\")) {\n        // This will fail if Google API key is not defined\n        if (GoogleAuth.getApiKey() === undefined) {\n            throw Error(\"Google drive is referenced, but API key is not defined.  An API key is required for Google Drive access\");\n        }\n        const json = await GoogleDrive.getDriveFileInfo(url)\n        return json.originalFileName || json.name;\n    } else {\n        return FileUtils.getFilename(url);\n    }\n}\n\nexport default igvxhr\nexport {arrayBufferToString}\n","// The MIT License (MIT)\n// Adapted from https://github.com/JMPerez/promise-throttle\n//\n// Copyright (c) 2015 José M. Pérez\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\n\n'use strict';\n\n/**\n * @constructor\n * @param {Object} options A set op options to pass to the throttle function\n *        @param {number} requestsPerSecond The amount of requests per second\n *                                          the library will limit to\n */\nclass Throttle {\n    constructor(options) {\n        this.requestsPerSecond = options.requestsPerSecond || 10;\n        this.lastStartTime = 0;\n        this.queued = [];\n    }\n\n    /**\n     * Adds a promise\n     * @param {Function} async function to be executed\n     * @param {Object} options A set of options.\n     * @return {Promise} A promise\n     */\n    add(asyncFunction, options) {\n\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            self.queued.push({\n                resolve: resolve,\n                reject: reject,\n                asyncFunction: asyncFunction,\n            });\n            self.dequeue();\n        });\n    }\n\n    /**\n     * Adds all the promises passed as parameters\n     * @param {Function} promises An array of functions that return a promise\n     * @param {Object} options A set of options.\n     * @param {number} options.signal An AbortSignal object that can be used to abort the returned promise\n     * @param {number} options.weight A \"weight\" of each operation resolving by array of promises\n     * @return {Promise} A promise that succeeds when all the promises passed as options do\n     */\n    addAll(promises, options) {\n        var addedPromises = promises.map(function (promise) {\n            return this.add(promise, options);\n        }.bind(this));\n\n        return Promise.all(addedPromises);\n    };\n\n    /**\n     * Dequeues a promise\n     * @return {void}\n     */\n    dequeue() {\n        if (this.queued.length > 0) {\n            var now = new Date(),\n                inc = (1000 / this.requestsPerSecond) + 1,\n                elapsed = now - this.lastStartTime;\n\n            if (elapsed >= inc) {\n                this._execute();\n            } else {\n                // we have reached the limit, schedule a dequeue operation\n                setTimeout(function () {\n                    this.dequeue();\n                }.bind(this), inc - elapsed);\n            }\n        }\n    }\n\n    /**\n     * Executes the promise\n     * @private\n     * @return {void}\n     */\n    async _execute() {\n        this.lastStartTime = new Date();\n        var candidate = this.queued.shift();\n        const f = candidate.asyncFunction;\n        try {\n            const r = await f();\n            candidate.resolve(r);\n        } catch (e) {\n            candidate.reject(e);\n        }\n\n    }\n\n\n}\n\nexport default Throttle;\n","import {getAccessToken, getApiKey} from \"./googleAuth.js\"\nimport {getGoogleDriveFileID} from \"./googleUtils.js\"\n\nasync function getDriveFileInfo(googleDriveURL) {\n\n    const id = getGoogleDriveFileID(googleDriveURL);\n    let endPoint = \"https://www.googleapis.com/drive/v3/files/\" + id + \"?supportsTeamDrives=true\";\n    const apiKey = getApiKey();\n    if (apiKey) {\n        endPoint += \"&key=\" + apiKey;\n    }\n    const response = await fetch(endPoint);\n    let json = await response.json();\n    if (json.error && json.error.code === 404) {\n        const {access_token} = await getAccessToken(\"https://www.googleapis.com/auth/drive.readonly\");\n        if (access_token) {\n            const response = await fetch(endPoint, {\n                headers: {\n                    'Authorization': `Bearer ${access_token}`\n                }\n            })\n            json = await response.json();\n            if (json.error) {\n                throw Error(json.error);\n            }\n        } else {\n            throw Error(json.error);\n        }\n    }\n    return json;\n}\n\nexport {getDriveFileInfo}","import {isString} from \"./stringUtils.js\";\nimport {isGoogleDriveURL} from \"./google/googleUtils.js\";\nimport {getDriveFileInfo} from \"./google/googleDrive.js\";\nimport {parseUri} from \"./uriUtils.js\";\n\nfunction getExtension(url) {\n\n    if (undefined === url) {\n        return undefined;\n    }\n\n    let path = (isFilePath(url) || url.google_url) ? url.name : url;\n    let filename = path.toLowerCase();\n\n    //Strip parameters -- handle local files later\n    let index = filename.indexOf(\"?\");\n    if (index > 0) {\n        filename = filename.substr(0, index);\n    }\n\n    //Strip aux extensions .gz, .tab, and .txt\n    if (filename.endsWith(\".gz\")) {\n        filename = filename.substr(0, filename.length - 3);\n    } else if (filename.endsWith(\".txt\") || filename.endsWith(\".tab\") || filename.endsWith(\".bgz\")) {\n        filename = filename.substr(0, filename.length - 4);\n    }\n\n    index = filename.lastIndexOf(\".\");\n\n    return index < 0 ? filename : filename.substr(1 + index);\n}\n\n/**\n * Return the filename from the path.   Example\n *   https://foo.com/bar.bed?param=2   => bar.bed\n * @param urlOrFile\n */\n\nfunction getFilename (urlOrFile) {\n\n    if (urlOrFile instanceof File) {\n        return urlOrFile.name;\n    } else if (isString(urlOrFile)){\n\n        let index = urlOrFile.lastIndexOf(\"/\");\n        let filename = index < 0 ? urlOrFile : urlOrFile.substr(index + 1);\n\n        //Strip parameters -- handle local files later\n        index = filename.indexOf(\"?\");\n        if (index > 0) {\n            filename = filename.substr(0, index);\n        }\n        return filename;\n    } else {\n        throw Error(`Expected File or string, got ${typeof urlOrFile}`);\n    }\n}\n\nasync function getFilenameExtended (path) {\n\n    if (path instanceof File) {\n        return path.name\n    } else if (isGoogleDriveURL(path)) {\n        if(typeof gapi === \"undefined\") {\n            throw Error(`Google initialization with API key is required to load Google urls (${path})`)\n        }\n        const info = await getDriveFileInfo(path)\n        return info.name || info.originalFileName\n    } else {\n        const result = parseUri(path)\n        return result.file;\n    }\n\n}\n\nfunction isFilePath (path) {\n    return (path instanceof File);\n}\n\n\nfunction download  (filename, data) {\n\n    const element = document.createElement('a');\n    element.setAttribute('href', data);\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n\nexport {getExtension, getFilename, getFilenameExtended, isFilePath, download}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** An implementation of an interval tree, following the explanation.\n * from CLR.\n *\n * Public interface:\n *   Constructor  IntervalTree\n *   Insertion    insert\n *   Search       findOverlapping\n */\n\nvar BLACK = 1;\nvar RED = 2;\n\nvar NIL = {}\nNIL.color = BLACK;\nNIL.parent = NIL;\nNIL.left = NIL;\nNIL.right = NIL;\n\n\nclass IntervalTree {\n\n    constructor() {\n        this.root = NIL;\n    }\n\n    insert(start, end, value) {\n\n        var interval = new Interval(start, end, value);\n        var x = new Node(interval);\n        this.treeInsert(x);\n        x.color = RED;\n        while (x !== this.root && x.parent.color === RED) {\n            if (x.parent === x.parent.parent.left) {\n                let y = x.parent.parent.right;\n                if (y.color === RED) {\n                    x.parent.color = BLACK;\n                    y.color = BLACK;\n                    x.parent.parent.color = RED;\n                    x = x.parent.parent;\n                } else {\n                    if (x === x.parent.right) {\n                        x = x.parent;\n                        leftRotate.call(this, x);\n                    }\n                    x.parent.color = BLACK;\n                    x.parent.parent.color = RED;\n                    rightRotate.call(this, x.parent.parent);\n                }\n            } else {\n                let y = x.parent.parent.left;\n                if (y.color === RED) {\n                    x.parent.color = BLACK;\n                    y.color = BLACK;\n                    x.parent.parent.color = RED;\n                    x = x.parent.parent;\n                } else {\n                    if (x === x.parent.left) {\n                        x = x.parent;\n                        rightRotate.call(this, x);\n                    }\n                    x.parent.color = BLACK;\n                    x.parent.parent.color = RED;\n                    leftRotate.call(this, x.parent.parent);\n                }\n            }\n        }\n        this.root.color = BLACK;\n    }\n\n    /**\n     *\n     * @param start - query interval\n     * @param end - query interval\n     * @returns Array of all intervals overlapping the query region\n     */\n    findOverlapping(start, end) {\n\n\n        var searchInterval = new Interval(start, end, 0);\n\n        if (this.root === NIL) return [];\n\n        var intervals = searchAll.call(this, searchInterval, this.root, []);\n\n        if (intervals.length > 1) {\n            intervals.sort(function (i1, i2) {\n                return i1.low - i2.low;\n            });\n        }\n\n        return intervals;\n    }\n\n    /**\n     * Dump info on intervals to console.  For debugging.\n     */\n    logIntervals() {\n\n        logNode(this.root, 0);\n\n        function logNode(node, indent) {\n\n            var space = \"\";\n            for (var i = 0; i < indent; i++) space += \" \";\n            console.log(space + node.interval.low + \" \" + node.interval.high); // + \" \" + (node.interval.value ? node.interval.value : \" null\"));\n\n            indent += 5;\n\n            if (node.left !== NIL) logNode(node.left, indent);\n            if (node.right !== NIL) logNode(node.right, indent);\n        }\n\n    }\n\n    mapIntervals(func) {\n\n        applyInterval(this.root);\n\n        function applyInterval(node) {\n\n            func(node.interval);\n\n            if (node.left !== NIL) applyInterval(node.left);\n            if (node.right !== NIL) applyInterval(node.right);\n        }\n    }\n\n\n    /**\n     * Note:  Does not maintain RB constraints,  this is done post insert\n     *\n     * @param x  a Node\n     */\n    treeInsert(x) {\n        var node = this.root;\n        var y = NIL;\n        while (node !== NIL) {\n            y = node;\n            if (x.interval.low <= node.interval.low) {\n                node = node.left;\n            } else {\n                node = node.right;\n            }\n        }\n        x.parent = y;\n\n        if (y === NIL) {\n            this.root = x;\n            x.left = x.right = NIL;\n        } else {\n            if (x.interval.low <= y.interval.low) {\n                y.left = x;\n            } else {\n                y.right = x;\n            }\n        }\n\n        applyUpdate.call(this, x);\n    }\n}\n\nfunction searchAll(interval, node, results) {\n\n    if (node.interval.overlaps(interval)) {\n        results.push(node.interval);\n    }\n\n    if (node.left !== NIL && node.left.max >= interval.low) {\n        searchAll.call(this, interval, node.left, results);\n    }\n\n    if (node.right !== NIL && node.right.min <= interval.high) {\n        searchAll.call(this, interval, node.right, results);\n    }\n\n    return results;\n}\n\nfunction leftRotate(x) {\n    var y = x.right;\n    x.right = y.left;\n    if (y.left !== NIL) {\n        y.left.parent = x;\n    }\n    y.parent = x.parent;\n    if (x.parent === NIL) {\n        this.root = y;\n    } else {\n        if (x.parent.left === x) {\n            x.parent.left = y;\n        } else {\n            x.parent.right = y;\n        }\n    }\n    y.left = x;\n    x.parent = y;\n\n    applyUpdate.call(this, x);\n    // no need to apply update on y, since it'll y is an ancestor\n    // of x, and will be touched by applyUpdate().\n}\n\n\nfunction rightRotate(x) {\n    var y = x.left;\n    x.left = y.right;\n    if (y.right !== NIL) {\n        y.right.parent = x;\n    }\n    y.parent = x.parent;\n    if (x.parent === NIL) {\n        this.root = y;\n    } else {\n        if (x.parent.right === x) {\n            x.parent.right = y;\n        } else {\n            x.parent.left = y;\n        }\n    }\n    y.right = x;\n    x.parent = y;\n\n\n    applyUpdate.call(this, x);\n    // no need to apply update on y, since it'll y is an ancestor\n    // of x, and will be touched by applyUpdate().\n}\n\n\n// Applies the statistic update on the node and its ancestors.\nfunction applyUpdate(node) {\n    while (node !== NIL) {\n        var nodeMax = node.left.max > node.right.max ? node.left.max : node.right.max;\n        var intervalHigh = node.interval.high;\n        node.max = nodeMax > intervalHigh ? nodeMax : intervalHigh;\n\n        var nodeMin = node.left.min < node.right.min ? node.left.min : node.right.min;\n        var intervalLow = node.interval.low;\n        node.min = nodeMin < intervalLow ? nodeMin : intervalLow;\n\n        node = node.parent;\n    }\n}\n\n\nclass Interval {\n    constructor(low, high, value) {\n        this.low = low;\n        this.high = high;\n        this.value = value;\n    }\n\n    equals(other) {\n        if (!other) {\n            return false;\n        }\n        if (this === other) {\n            return true;\n        }\n        return (this.low === other.low &&\n            this.high === other.high);\n\n    }\n\n    compareTo(other) {\n        if (this.low < other.low)\n            return -1;\n        if (this.low > other.low)\n            return 1;\n\n        if (this.high < other.high)\n            return -1;\n        if (this.high > other.high)\n            return 1;\n\n        return 0;\n    }\n\n    /**\n     * Returns true if this interval overlaps the other.\n     */\n    overlaps(other) {\n            return (this.low <= other.high && other.low <= this.high);\n    }\n}\n\nfunction Node(interval) {\n    this.parent = NIL;\n    this.left = NIL;\n    this.right = NIL;\n    this.interval = interval;\n    this.color = RED;\n}\n\n\n//\n//\n//    function minimum(node) {\n//        while (node.left != NIL) {\n//            node = node.left;\n//        }\n//        return node;\n//    }\n//\n//\n//    function maximum(node) {\n//\n//        while (node.right != NIL) {\n//            node = node.right;\n//        }\n//        return node;\n//    }\n//\n//\n//    function successor(x) {\n//\n//        if (x.right != NIL) {\n//            return minimum(x.right);\n//        }\n//        var y = x.parent;\n//        while (y != NIL && x == y.right) {\n//            x = y;\n//            y = y.parent;\n//        }\n//        return y;\n//    }\n//\n//\n//    function predecessor(x) {\n//        if (x.left != NIL) {\n//            return maximum(x.left);\n//        }\n//        var y = x.parent;\n//        while (y != NIL && x == y.left) {\n//            x = y;\n//            y = y.parent;\n//        }\n//        return y;\n//    }\n//\n//\n//\n//    allRedNodesFollowConstraints = function (node) {\n//        if (node == NIL)\n//            return true;\n//\n//        if (node.color == BLACK) {\n//            return (this.allRedNodesFollowConstraints(node.left) &&\n//                this.allRedNodesFollowConstraints(node.right));\n//        }\n//\n//        // At this point, we know we're on a RED node.\n//        return (node.left.color == BLACK &&\n//            node.right.color == BLACK &&\n//            this.allRedNodesFollowConstraints(node.left) &&\n//            this.allRedNodesFollowConstraints(node.right));\n//    }\n//\n//\n//    // Check that both ends are equally balanced in terms of black height.\n//    isBalancedBlackHeight = function (node) {\n//        if (node == NIL)\n//            return true;\n//        return (blackHeight(node.left) == blackHeight(node.right) &&\n//            this.isBalancedBlackHeight(node.left) &&\n//            this.isBalancedBlackHeight(node.right));\n//    }\n//\n//\n//    // The black height of a node should be left/right equal.\n//    blackHeight = function (node) {\n//        if (node == NIL)\n//            return 0;\n//        var leftBlackHeight = blackHeight(node.left);\n//        if (node.color == BLACK) {\n//            return leftBlackHeight + 1;\n//        } else {\n//            return leftBlackHeight;\n//        }\n//    }\n\n\n/**\n * Test code: make sure that the tree has all the properties\n * defined by Red Black trees and interval trees\n * <p/>\n * o.  Root is black.\n * <p/>\n * o.  NIL is black.\n * <p/>\n * o.  Red nodes have black children.\n * <p/>\n * o.  Every path from root to leaves contains the same number of\n * black nodes.\n * <p/>\n * o.  getMax(node) is the maximum of any interval rooted at that node..\n * <p/>\n * This code is expensive, and only meant to be used for\n * assertions and testing.\n */\n//\n//    isValid = function () {\n//        if (this.root.color != BLACK) {\n//            logger.warn(\"root color is wrong\");\n//            return false;\n//        }\n//        if (NIL.color != BLACK) {\n//            logger.warn(\"NIL color is wrong\");\n//            return false;\n//        }\n//        if (allRedNodesFollowConstraints(this.root) == false) {\n//            logger.warn(\"red node doesn't follow constraints\");\n//            return false;\n//        }\n//        if (isBalancedBlackHeight(this.root) == false) {\n//            logger.warn(\"black height unbalanced\");\n//            return false;\n//        }\n//\n//        return hasCorrectMaxFields(this.root) &&\n//            hasCorrectMinFields(this.root);\n//    }\n//\n//\n//    hasCorrectMaxFields = function (node) {\n//        if (node == NIL)\n//            return true;\n//        return (getRealMax(node) == (node.max) &&\n//            this.hasCorrectMaxFields(node.left) &&\n//            this.hasCorrectMaxFields(node.right));\n//    }\n//\n//\n//    hasCorrectMinFields = function (node) {\n//        if (node == NIL)\n//            return true;\n//        return (getRealMin(node) == (node.min) &&\n//            this.hasCorrectMinFields(node.left) &&\n//            this.hasCorrectMinFields(node.right));\n//    }\n\nexport default IntervalTree;\n","let subscribers = {};\n\nclass EventBus {\n    constructor() {\n\n    }\n\n    subscribe (eventType, object) {\n\n        let subscriberList = subscribers[ eventType ];\n        if (undefined === subscriberList) {\n            subscriberList = [];\n            subscribers[ eventType ] = subscriberList;\n        }\n        subscriberList.push(object);\n    }\n\n    post (event) {\n\n        const subscriberList = subscribers[ event.type ];\n        if (subscriberList) {\n\n            for (let subscriber of subscriberList) {\n\n                if (\"function\" === typeof subscriber.receiveEvent) {\n                    subscriber.receiveEvent(event);\n                } else if (\"function\" === typeof subscriber) {\n                    subscriber(event);\n                }\n            }\n        }\n    }\n\n    static createEvent (type, data, propogate) {\n        return { type: type, data: data || {}, propogate: propogate !== undefined ? propogate : true }\n    }\n\n}\n\n// Global event bus\nEventBus.globalBus = new EventBus();\n\n/**\n * @fileoverview\n * - Using the 'QRCode for Javascript library'\n * - Fixed dataset of 'QRCode for Javascript library' for support full-spec.\n * - this library has no dependencies.\n *\n * @author davidshimjs\n * @see <a href=\"http://www.d-project.com/\" target=\"_blank\">http://www.d-project.com/</a>\n * @see <a href=\"http://jeromeetienne.github.com/jquery-qrcode/\" target=\"_blank\">http://jeromeetienne.github.com/jquery-qrcode/</a>\n */\n\n\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\nfunction QR8bitByte(data) {\n    this.mode = QRMode.MODE_8BIT_BYTE;\n    this.data = data;\n    this.parsedData = [];\n\n    // Added to support UTF-8 Characters\n    for (var i = 0, l = this.data.length; i < l; i++) {\n        var byteArray = [];\n        var code = this.data.charCodeAt(i);\n\n        if (code > 0x10000) {\n            byteArray[0] = 0xF0 | ((code & 0x1C0000) >>> 18);\n            byteArray[1] = 0x80 | ((code & 0x3F000) >>> 12);\n            byteArray[2] = 0x80 | ((code & 0xFC0) >>> 6);\n            byteArray[3] = 0x80 | (code & 0x3F);\n        } else if (code > 0x800) {\n            byteArray[0] = 0xE0 | ((code & 0xF000) >>> 12);\n            byteArray[1] = 0x80 | ((code & 0xFC0) >>> 6);\n            byteArray[2] = 0x80 | (code & 0x3F);\n        } else if (code > 0x80) {\n            byteArray[0] = 0xC0 | ((code & 0x7C0) >>> 6);\n            byteArray[1] = 0x80 | (code & 0x3F);\n        } else {\n            byteArray[0] = code;\n        }\n\n        this.parsedData.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n    if (this.parsedData.length != this.data.length) {\n        this.parsedData.unshift(191);\n        this.parsedData.unshift(187);\n        this.parsedData.unshift(239);\n    }\n}\n\nQR8bitByte.prototype = {\n    getLength: function (buffer) {\n        return this.parsedData.length;\n    },\n    write: function (buffer) {\n        for (var i = 0, l = this.parsedData.length; i < l; i++) {\n            buffer.put(this.parsedData[i], 8);\n        }\n    }\n};\n\nfunction QRCodeModel(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.modules = null;\n    this.moduleCount = 0;\n    this.dataCache = null;\n    this.dataList = [];\n}\n\nQRCodeModel.prototype = {\n    addData: function (data) {\n        var newData = new QR8bitByte(data);\n        this.dataList.push(newData);\n        this.dataCache = null;\n    }, isDark: function (row, col) {\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n            throw new Error(row + \",\" + col);\n        }\n        return this.modules[row][col];\n    }, getModuleCount: function () {\n        return this.moduleCount;\n    }, make: function () {\n        this.makeImpl(false, this.getBestMaskPattern());\n    }, makeImpl: function (test, maskPattern) {\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = new Array(this.moduleCount);\n        for (var row = 0; row < this.moduleCount; row++) {\n            this.modules[row] = new Array(this.moduleCount);\n            for (var col = 0; col < this.moduleCount; col++) {\n                this.modules[row][col] = null;\n            }\n        }\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n        if (this.typeNumber >= 7) {\n            this.setupTypeNumber(test);\n        }\n        if (this.dataCache == null) {\n            this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n        this.mapData(this.dataCache, maskPattern);\n    }, setupPositionProbePattern: function (row, col) {\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || this.moduleCount <= row + r) continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || this.moduleCount <= col + c) continue;\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                    this.modules[row + r][col + c] = true;\n                } else {\n                    this.modules[row + r][col + c] = false;\n                }\n            }\n        }\n    }, getBestMaskPattern: function () {\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i = 0; i < 8; i++) {\n            this.makeImpl(true, i);\n            var lostPoint = QRUtil.getLostPoint(this);\n            if (i == 0 || minLostPoint > lostPoint) {\n                minLostPoint = lostPoint;\n                pattern = i;\n            }\n        }\n        return pattern;\n    }, createMovieClip: function (target_mc, instance_name, depth) {\n        var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n        var cs = 1;\n        this.make();\n        for (var row = 0; row < this.modules.length; row++) {\n            var y = row * cs;\n            for (var col = 0; col < this.modules[row].length; col++) {\n                var x = col * cs;\n                var dark = this.modules[row][col];\n                if (dark) {\n                    qr_mc.beginFill(0, 100);\n                    qr_mc.moveTo(x, y);\n                    qr_mc.lineTo(x + cs, y);\n                    qr_mc.lineTo(x + cs, y + cs);\n                    qr_mc.lineTo(x, y + cs);\n                    qr_mc.endFill();\n                }\n            }\n        }\n        return qr_mc;\n    }, setupTimingPattern: function () {\n        for (var r = 8; r < this.moduleCount - 8; r++) {\n            if (this.modules[r][6] != null) {\n                continue;\n            }\n            this.modules[r][6] = (r % 2 == 0);\n        }\n        for (var c = 8; c < this.moduleCount - 8; c++) {\n            if (this.modules[6][c] != null) {\n                continue;\n            }\n            this.modules[6][c] = (c % 2 == 0);\n        }\n    }, setupPositionAdjustPattern: function () {\n        var pos = QRUtil.getPatternPosition(this.typeNumber);\n        for (var i = 0; i < pos.length; i++) {\n            for (var j = 0; j < pos.length; j++) {\n                var row = pos[i];\n                var col = pos[j];\n                if (this.modules[row][col] != null) {\n                    continue;\n                }\n                for (var r = -2; r <= 2; r++) {\n                    for (var c = -2; c <= 2; c++) {\n                        if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n                            this.modules[row + r][col + c] = true;\n                        } else {\n                            this.modules[row + r][col + c] = false;\n                        }\n                    }\n                }\n            }\n        }\n    }, setupTypeNumber: function (test) {\n        var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        for (var i = 0; i < 18; i++) {\n            var mod = (!test && ((bits >> i) & 1) == 1);\n            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n        }\n        for (var i = 0; i < 18; i++) {\n            var mod = (!test && ((bits >> i) & 1) == 1);\n            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n        }\n    }, setupTypeInfo: function (test, maskPattern) {\n        var data = (this.errorCorrectLevel << 3) | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i = 0; i < 15; i++) {\n            var mod = (!test && ((bits >> i) & 1) == 1);\n            if (i < 6) {\n                this.modules[i][8] = mod;\n            } else if (i < 8) {\n                this.modules[i + 1][8] = mod;\n            } else {\n                this.modules[this.moduleCount - 15 + i][8] = mod;\n            }\n        }\n        for (var i = 0; i < 15; i++) {\n            var mod = (!test && ((bits >> i) & 1) == 1);\n            if (i < 8) {\n                this.modules[8][this.moduleCount - i - 1] = mod;\n            } else if (i < 9) {\n                this.modules[8][15 - i - 1 + 1] = mod;\n            } else {\n                this.modules[8][15 - i - 1] = mod;\n            }\n        }\n        this.modules[this.moduleCount - 8][8] = (!test);\n    }, mapData: function (data, maskPattern) {\n        var inc = -1;\n        var row = this.moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n            if (col == 6) col--;\n            while (true) {\n                for (var c = 0; c < 2; c++) {\n                    if (this.modules[row][col - c] == null) {\n                        var dark = false;\n                        if (byteIndex < data.length) {\n                            dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\n                        }\n                        var mask = QRUtil.getMask(maskPattern, row, col - c);\n                        if (mask) {\n                            dark = !dark;\n                        }\n                        this.modules[row][col - c] = dark;\n                        bitIndex--;\n                        if (bitIndex == -1) {\n                            byteIndex++;\n                            bitIndex = 7;\n                        }\n                    }\n                }\n                row += inc;\n                if (row < 0 || this.moduleCount <= row) {\n                    row -= inc;\n                    inc = -inc;\n                    break;\n                }\n            }\n        }\n    }\n};\nQRCodeModel.PAD0 = 0xEC;\nQRCodeModel.PAD1 = 0x11;\nQRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    var buffer = new QRBitBuffer();\n    for (var i = 0; i < dataList.length; i++) {\n        var data = dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n    }\n    var totalDataCount = 0;\n    for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw new Error(\"code length overflow. (\"\n            + buffer.getLengthInBits()\n            + \">\"\n            + totalDataCount * 8\n            + \")\");\n    }\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n    }\n    while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n    }\n    while (true) {\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n        }\n        buffer.put(QRCodeModel.PAD0, 8);\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n        }\n        buffer.put(QRCodeModel.PAD1, 8);\n    }\n    return QRCodeModel.createBytes(buffer, rsBlocks);\n};\nQRCodeModel.createBytes = function (buffer, rsBlocks) {\n    var offset = 0;\n    var maxDcCount = 0;\n    var maxEcCount = 0;\n    var dcdata = new Array(rsBlocks.length);\n    var ecdata = new Array(rsBlocks.length);\n    for (var r = 0; r < rsBlocks.length; r++) {\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n        dcdata[r] = new Array(dcCount);\n        for (var i = 0; i < dcdata[r].length; i++) {\n            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n        }\n        offset += dcCount;\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n        }\n    }\n    var totalCodeCount = 0;\n    for (var i = 0; i < rsBlocks.length; i++) {\n        totalCodeCount += rsBlocks[i].totalCount;\n    }\n    var data = new Array(totalCodeCount);\n    var index = 0;\n    for (var i = 0; i < maxDcCount; i++) {\n        for (var r = 0; r < rsBlocks.length; r++) {\n            if (i < dcdata[r].length) {\n                data[index++] = dcdata[r][i];\n            }\n        }\n    }\n    for (var i = 0; i < maxEcCount; i++) {\n        for (var r = 0; r < rsBlocks.length; r++) {\n            if (i < ecdata[r].length) {\n                data[index++] = ecdata[r][i];\n            }\n        }\n    }\n    return data;\n};\nvar QRMode = {MODE_NUMBER: 1 << 0, MODE_ALPHA_NUM: 1 << 1, MODE_8BIT_BYTE: 1 << 2, MODE_KANJI: 1 << 3};\nvar QRErrorCorrectLevel = {L: 1, M: 0, Q: 3, H: 2};\nvar QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n};\nvar QRUtil = {\n    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n    G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n    getBCHTypeInfo: function (data) {\n        var d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\n        }\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n    getBCHTypeNumber: function (data) {\n        var d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\n        }\n        return (data << 12) | d;\n    },\n    getBCHDigit: function (data) {\n        var digit = 0;\n        while (data != 0) {\n            digit++;\n            data >>>= 1;\n        }\n        return digit;\n    },\n    getPatternPosition: function (typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n    getMask: function (maskPattern, i, j) {\n        switch (maskPattern) {\n            case QRMaskPattern.PATTERN000:\n                return (i + j) % 2 == 0;\n            case QRMaskPattern.PATTERN001:\n                return i % 2 == 0;\n            case QRMaskPattern.PATTERN010:\n                return j % 3 == 0;\n            case QRMaskPattern.PATTERN011:\n                return (i + j) % 3 == 0;\n            case QRMaskPattern.PATTERN100:\n                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n            case QRMaskPattern.PATTERN101:\n                return (i * j) % 2 + (i * j) % 3 == 0;\n            case QRMaskPattern.PATTERN110:\n                return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\n            case QRMaskPattern.PATTERN111:\n                return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\n            default:\n                throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    },\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\n        var a = new QRPolynomial([1], 0);\n        for (var i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n        }\n        return a;\n    },\n    getLengthInBits: function (mode, type) {\n        if (1 <= type && type < 10) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 10;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 9;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 8;\n                case QRMode.MODE_KANJI:\n                    return 8;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        } else if (type < 27) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 12;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 11;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 10;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        } else if (type < 41) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 14;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 13;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 12;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        } else {\n            throw new Error(\"type:\" + type);\n        }\n    },\n    getLostPoint: function (qrCode) {\n        var moduleCount = qrCode.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount; col++) {\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n                for (var r = -1; r <= 1; r++) {\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n                    for (var c = -1; c <= 1; c++) {\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n                if (sameCount > 5) {\n                    lostPoint += (3 + sameCount - 5);\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount - 1; row++) {\n            for (var col = 0; col < moduleCount - 1; col++) {\n                var count = 0;\n                if (qrCode.isDark(row, col)) count++;\n                if (qrCode.isDark(row + 1, col)) count++;\n                if (qrCode.isDark(row, col + 1)) count++;\n                if (qrCode.isDark(row + 1, col + 1)) count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n    }\n};\nvar QRMath = {\n    glog: function (n) {\n        if (n < 1) {\n            throw new Error(\"glog(\" + n + \")\");\n        }\n        return QRMath.LOG_TABLE[n];\n    }, gexp: function (n) {\n        while (n < 0) {\n            n += 255;\n        }\n        while (n >= 256) {\n            n -= 255;\n        }\n        return QRMath.EXP_TABLE[n];\n    }, EXP_TABLE: new Array(256), LOG_TABLE: new Array(256)\n};\nfor (var i = 0; i < 8; i++) {\n    QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\nfunction QRPolynomial(num, shift) {\n    if (num.length == undefined) {\n        throw new Error(num.length + \"/\" + shift);\n    }\n    var offset = 0;\n    while (offset < num.length && num[offset] == 0) {\n        offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for (var i = 0; i < num.length - offset; i++) {\n        this.num[i] = num[i + offset];\n    }\n}\n\nQRPolynomial.prototype = {\n    get: function (index) {\n        return this.num[index];\n    }, getLength: function () {\n        return this.num.length;\n    }, multiply: function (e) {\n        var num = new Array(this.getLength() + e.getLength() - 1);\n        for (var i = 0; i < this.getLength(); i++) {\n            for (var j = 0; j < e.getLength(); j++) {\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n            }\n        }\n        return new QRPolynomial(num, 0);\n    }, mod: function (e) {\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n        var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n        var num = new Array(this.getLength());\n        for (var i = 0; i < this.getLength(); i++) {\n            num[i] = this.get(i);\n        }\n        for (var i = 0; i < e.getLength(); i++) {\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n        return new QRPolynomial(num, 0).mod(e);\n    }\n};\n\nfunction QRRSBlock(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    if (rsBlock == undefined) {\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n    }\n    var length = rsBlock.length / 3;\n    var list = [];\n    for (var i = 0; i < length; i++) {\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n        for (var j = 0; j < count; j++) {\n            list.push(new QRRSBlock(totalCount, dataCount));\n        }\n    }\n    return list;\n};\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n        case QRErrorCorrectLevel.L:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n        case QRErrorCorrectLevel.M:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n        case QRErrorCorrectLevel.Q:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n        case QRErrorCorrectLevel.H:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n\nfunction QRBitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\n\nQRBitBuffer.prototype = {\n    get: function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\n    }, put: function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n        }\n    }, getLengthInBits: function () {\n        return this.length;\n    }, putBit: function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n        }\n        this.length++;\n    }\n};\nvar QRCodeLimitLength = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]];\n\nvar useSVG = document.documentElement.tagName.toLowerCase() === \"svg\";\n\nlet Drawing;\n\nif (useSVG) {\n\n    Drawing = function (el, htOption) {\n        this._el = el;\n        this._htOption = htOption;\n    };\n\n    Drawing.prototype.draw = function (oQRCode) {\n        var _htOption = this._htOption;\n        var _el = this._el;\n        var nCount = oQRCode.getModuleCount();\n        Math.floor(_htOption.width / nCount);\n        Math.floor(_htOption.height / nCount);\n\n        this.clear();\n\n        function makeSVG(tag, attrs) {\n            var el = document.createElementNS('http://www.w3.org/2000/svg', tag);\n            for (var k in attrs)\n                if (attrs.hasOwnProperty(k)) el.setAttribute(k, attrs[k]);\n            return el;\n        }\n\n        var svg = makeSVG(\"svg\", {\n            'viewBox': '0 0 ' + String(nCount) + \" \" + String(nCount),\n            'width': '100%',\n            'height': '100%',\n            'fill': _htOption.colorLight\n        });\n        svg.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n        _el.appendChild(svg);\n\n        svg.appendChild(makeSVG(\"rect\", {\"fill\": _htOption.colorLight, \"width\": \"100%\", \"height\": \"100%\"}));\n        svg.appendChild(makeSVG(\"rect\", {\n            \"fill\": _htOption.colorDark,\n            \"width\": \"1\",\n            \"height\": \"1\",\n            \"id\": \"template\"\n        }));\n\n        for (var row = 0; row < nCount; row++) {\n            for (var col = 0; col < nCount; col++) {\n                if (oQRCode.isDark(row, col)) {\n                    var child = makeSVG(\"use\", {\"x\": String(col), \"y\": String(row)});\n                    child.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", \"#template\");\n                    svg.appendChild(child);\n                }\n            }\n        }\n    };\n    Drawing.prototype.clear = function () {\n        while (this._el.hasChildNodes())\n            this._el.removeChild(this._el.lastChild);\n    };\n}\nelse {\n\n    /**\n     * Drawing QRCode by using canvas\n     *\n     * @constructor\n     * @param {HTMLElement} el\n     * @param {Object} htOption QRCode Options\n     */\n     Drawing = function (el, htOption) {\n        this._bIsPainted = false;\n        this._htOption = htOption;\n        this._elCanvas = document.createElement(\"canvas\");\n        this._elCanvas.width = htOption.width;\n        this._elCanvas.height = htOption.height;\n        el.appendChild(this._elCanvas);\n        this._el = el;\n        this._oContext = this._elCanvas.getContext(\"2d\");\n        this._bIsPainted = false;\n        this._elImage = document.createElement(\"img\");\n        this._elImage.alt = \"Scan me!\";\n        this._elImage.style.display = \"none\";\n        this._el.appendChild(this._elImage);\n        this._bSupportDataURI = null;\n    };\n\n    /**\n     * Draw the QRCode\n     *\n     * @param {QRCode} oQRCode\n     */\n    Drawing.prototype.draw = function (oQRCode) {\n        var _elImage = this._elImage;\n        var _oContext = this._oContext;\n        var _htOption = this._htOption;\n\n        var nCount = oQRCode.getModuleCount();\n        var nWidth = _htOption.width / nCount;\n        var nHeight = _htOption.height / nCount;\n        var nRoundedWidth = Math.round(nWidth);\n        var nRoundedHeight = Math.round(nHeight);\n\n        _elImage.style.display = \"none\";\n        this.clear();\n\n        for (var row = 0; row < nCount; row++) {\n            for (var col = 0; col < nCount; col++) {\n                var bIsDark = oQRCode.isDark(row, col);\n                var nLeft = col * nWidth;\n                var nTop = row * nHeight;\n                _oContext.strokeStyle = bIsDark ? _htOption.colorDark : _htOption.colorLight;\n                _oContext.lineWidth = 1;\n                _oContext.fillStyle = bIsDark ? _htOption.colorDark : _htOption.colorLight;\n                _oContext.fillRect(nLeft, nTop, nWidth, nHeight);\n\n                // 안티 앨리어싱 방지 처리\n                _oContext.strokeRect(\n                    Math.floor(nLeft) + 0.5,\n                    Math.floor(nTop) + 0.5,\n                    nRoundedWidth,\n                    nRoundedHeight\n                );\n\n                _oContext.strokeRect(\n                    Math.ceil(nLeft) - 0.5,\n                    Math.ceil(nTop) - 0.5,\n                    nRoundedWidth,\n                    nRoundedHeight\n                );\n            }\n        }\n\n        this._bIsPainted = true;\n    };\n\n    /**\n     * Make the image from Canvas if the browser supports Data URI.\n     */\n    Drawing.prototype.makeImage = function () {\n        if (this._bIsPainted) {\n            this._elImage.src = this._elCanvas.toDataURL(\"image/png\");\n            this._elImage.style.display = \"block\";\n            this._elCanvas.style.display = \"none\";\n        }\n    };\n\n    /**\n     * Return whether the QRCode is painted or not\n     *\n     * @return {Boolean}\n     */\n    Drawing.prototype.isPainted = function () {\n        return this._bIsPainted;\n    };\n\n    /**\n     * Clear the QRCode\n     */\n    Drawing.prototype.clear = function () {\n        this._oContext.clearRect(0, 0, this._elCanvas.width, this._elCanvas.height);\n        this._bIsPainted = false;\n    };\n\n    /**\n     * @private\n     * @param {Number} nNumber\n     */\n    Drawing.prototype.round = function (nNumber) {\n        if (!nNumber) {\n            return nNumber;\n        }\n\n        return Math.floor(nNumber * 1000) / 1000;\n    };\n}\n\n/**\n * Get the type by string length\n *\n * @private\n * @param {String} sText\n * @param {Number} nCorrectLevel\n * @return {Number} type\n */\nfunction _getTypeNumber(sText, nCorrectLevel) {\n    var nType = 1;\n    var length = _getUTF8Length(sText);\n\n    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {\n        var nLimit = 0;\n\n        switch (nCorrectLevel) {\n            case QRErrorCorrectLevel.L :\n                nLimit = QRCodeLimitLength[i][0];\n                break;\n            case QRErrorCorrectLevel.M :\n                nLimit = QRCodeLimitLength[i][1];\n                break;\n            case QRErrorCorrectLevel.Q :\n                nLimit = QRCodeLimitLength[i][2];\n                break;\n            case QRErrorCorrectLevel.H :\n                nLimit = QRCodeLimitLength[i][3];\n                break;\n        }\n\n        if (length <= nLimit) {\n            break;\n        } else {\n            nType++;\n        }\n    }\n\n    if (nType > QRCodeLimitLength.length) {\n        throw new Error(\"Too long data\");\n    }\n\n    return nType;\n}\n\nfunction _getUTF8Length(sText) {\n    var replacedText = encodeURI(sText).toString().replace(/\\%[0-9a-fA-F]{2}/g, 'a');\n    return replacedText.length + (replacedText.length != sText ? 3 : 0);\n}\n\n/**\n * @class QRCode\n * @constructor\n * @example\n * new QRCode(document.getElementById(\"test\"), \"http://jindo.dev.naver.com/collie\");\n *\n * @example\n * var oQRCode = new QRCode(\"test\", {\n *    text : \"http://naver.com\",\n *    width : 128,\n *    height : 128\n * });\n *\n * oQRCode.clear(); // Clear the QRCode.\n * oQRCode.makeCode(\"http://map.naver.com\"); // Re-create the QRCode.\n *\n * @param {HTMLElement|String} el target element or 'id' attribute of element.\n * @param {Object|String} vOption\n * @param {String} vOption.text QRCode link data\n * @param {Number} [vOption.width=256]\n * @param {Number} [vOption.height=256]\n * @param {String} [vOption.colorDark=\"#000000\"]\n * @param {String} [vOption.colorLight=\"#ffffff\"]\n * @param {QRCode.CorrectLevel} [vOption.correctLevel=QRCode.CorrectLevel.H] [L|M|Q|H]\n */\nconst QRCode = function (el, vOption) {\n    this._htOption = {\n        width: 256,\n        height: 256,\n        typeNumber: 4,\n        colorDark: \"#000000\",\n        colorLight: \"#ffffff\",\n        correctLevel: QRErrorCorrectLevel.H\n    };\n\n    if (typeof vOption === 'string') {\n        vOption = {\n            text: vOption\n        };\n    }\n\n    // Overwrites options\n    if (vOption) {\n        for (var i in vOption) {\n            this._htOption[i] = vOption[i];\n        }\n    }\n\n    if (typeof el == \"string\") {\n        el = document.getElementById(el);\n    }\n\n    if (this._htOption.useSVG) {\n        Drawing = svgDrawer;\n    }\n\n    this._el = el;\n    this._oQRCode = null;\n    this._oDrawing = new Drawing(this._el, this._htOption);\n\n    if (this._htOption.text) {\n        this.makeCode(this._htOption.text);\n    }\n};\n\n/**\n * Make the QRCode\n *\n * @param {String} sText link data\n */\nQRCode.prototype.makeCode = function (sText) {\n    this._oQRCode = new QRCodeModel(_getTypeNumber(sText, this._htOption.correctLevel), this._htOption.correctLevel);\n    this._oQRCode.addData(sText);\n    this._oQRCode.make();\n    this._el.title = sText;\n    this._oDrawing.draw(this._oQRCode);\n    this.makeImage();\n};\n\n/**\n * Make the Image from Canvas element\n * - It occurs automatically\n * - Android below 3 doesn't support Data-URI spec.\n *\n * @private\n */\nQRCode.prototype.makeImage = function () {\n    if (typeof this._oDrawing.makeImage == \"function\") {\n        this._oDrawing.makeImage();\n    }\n};\n\n/**\n * Clear the QRCode\n */\nQRCode.prototype.clear = function () {\n    this._oDrawing.clear();\n};\n\n/**\n * @name QRCode.CorrectLevel\n */\nQRCode.CorrectLevel = QRErrorCorrectLevel;\n\nfunction div(options) {\n    return create(\"div\", options);\n}\n\nfunction create(tag, options) {\n    const elem = document.createElement(tag);\n    if (options) {\n        if (options.class) {\n            elem.classList.add(options.class);\n        }\n        if (options.id) {\n            elem.id = options.id;\n        }\n        if(options.style) {\n            applyStyle(elem, options.style);\n        }\n    }\n    return elem;\n}\n\nfunction hide(elem) {\n    const cssStyle = getComputedStyle(elem);\n    if(cssStyle.display !== \"none\") {\n        elem._initialDisplay = cssStyle.display;\n    }\n    elem.style.display = \"none\";\n}\n\nfunction show(elem) {\n    const currentDisplay = getComputedStyle(elem).display;\n    if (currentDisplay === \"none\") {\n        const d = elem._initialDisplay || \"block\";\n        elem.style.display = d;\n    }\n}\n\nfunction offset(elem) {\n    // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n    // Support: IE <=11 only\n    // Running getBoundingClientRect on a\n    // disconnected node in IE throws an error\n    if (!elem.getClientRects().length) {\n        return {top: 0, left: 0};\n    }\n\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = elem.getBoundingClientRect();\n    const win = elem.ownerDocument.defaultView;\n    return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n    };\n}\n\nfunction applyStyle(elem, style) {\n    for (let key of Object.keys(style)) {\n        elem.style[key] = style[key];\n    }\n}\n\nfunction guid  () {\n    return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n}\n\nfunction createIcon(name, color) {\n    return iconMarkup(name, color);\n}\n\nfunction iconMarkup(name, color) {\n    color = color || \"currentColor\";\n    let icon = icons[name];\n    if (!icon) {\n        console.error(`No icon named: ${name}`);\n        icon = icons[\"question\"];\n    }\n\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttributeNS(null,'viewBox', '0 0 ' + icon[0] + ' ' + icon[1]);\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttributeNS(null,'fill',  color );\n    path.setAttributeNS(null,'d', icon[4]);\n    svg.appendChild(path);\n    return svg;\n}\n\nconst icons = {\n    \"check\": [512, 512, [], \"f00c\", \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"],\n    \"cog\": [512, 512, [], \"f013\", \"M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z\"],\n    \"exclamation\": [192, 512, [], \"f12a\", \"M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z\"],\n    \"exclamation-circle\": [512, 512, [], \"f06a\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n    \"exclamation-triangle\": [576, 512, [], \"f071\", \"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n    \"minus\": [448, 512, [], \"f068\", \"M424 318.2c13.3 0 24-10.7 24-24v-76.4c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h400z\"],\n    \"minus-circle\": [512, 512, [], \"f056\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z\"],\n    \"minus-square\": [448, 512, [], \"f146\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z\"],\n    \"plus\": [448, 512, [], \"f067\", \"M448 294.2v-76.4c0-13.3-10.7-24-24-24H286.2V56c0-13.3-10.7-24-24-24h-76.4c-13.3 0-24 10.7-24 24v137.8H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h137.8V456c0 13.3 10.7 24 24 24h76.4c13.3 0 24-10.7 24-24V318.2H424c13.3 0 24-10.7 24-24z\"],\n    \"plus-circle\": [512, 512, [], \"f055\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n    \"plus-square\": [448, 512, [], \"f0fe\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n    \"question\": [384, 512, [], \"f128\", \"M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z\"],\n    \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"],\n    \"search\": [512, 512, [], \"f002\", \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"],\n    \"share\": [512, 512, [], \"f064\", \"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\"],\n    \"spinner\": [512, 512, [], \"f110\", \"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"],\n    \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"square-full\": [512, 512, [], \"f45c\", \"M512 512H0V0h512v512z\"],\n    \"times\": [384, 512, [], \"f00d\", \"M323.1 441l53.9-53.9c9.4-9.4 9.4-24.5 0-33.9L279.8 256l97.2-97.2c9.4-9.4 9.4-24.5 0-33.9L323.1 71c-9.4-9.4-24.5-9.4-33.9 0L192 168.2 94.8 71c-9.4-9.4-24.5-9.4-33.9 0L7 124.9c-9.4 9.4-9.4 24.5 0 33.9l97.2 97.2L7 353.2c-9.4 9.4-9.4 24.5 0 33.9L60.9 441c9.4 9.4 24.5 9.4 33.9 0l97.2-97.2 97.2 97.2c9.3 9.3 24.5 9.3 33.9 0z\"],\n    \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"],\n    \"wrench\": [512, 512, [], \"f0ad\", \"M481.156 200c9.3 0 15.12 10.155 10.325 18.124C466.295 259.992 420.419 288 368 288c-79.222 0-143.501-63.974-143.997-143.079C223.505 65.469 288.548-.001 368.002 0c52.362.001 98.196 27.949 123.4 69.743C496.24 77.766 490.523 88 481.154 88H376l-40 56 40 56h105.156zm-171.649 93.003L109.255 493.255c-24.994 24.993-65.515 24.994-90.51 0-24.993-24.994-24.993-65.516 0-90.51L218.991 202.5c16.16 41.197 49.303 74.335 90.516 90.503zM104 432c0-13.255-10.745-24-24-24s-24 10.745-24 24 10.745 24 24 24 24-10.745 24-24z\"],\n};\n\nfunction attachDialogCloseHandlerWithParent(parent, closeHandler) {\n\n    var container = document.createElement(\"div\");\n    parent.appendChild(container);\n    container.appendChild(createIcon(\"times\"));\n    container.addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        closeHandler();\n    });\n}\n\n/**\n * @fileoverview Zlib namespace. Zlib の仕様に準拠した圧縮は Zlib.Deflate で実装\n * されている. これは Inflate との共存を考慮している為.\n */\nconst ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE$1 = 65000;\n\nvar Zlib$1 = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib$1.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib$1.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib$1.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib$1.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib$1.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib$1.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib$1.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib$1.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib$1.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if (input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib$1.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib$1.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib$1.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib$1.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib$1.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib$1.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n        (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n        (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib$1.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib$1.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib$1.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n            key,\n            i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n        // local file header\n        30 + filenameLength +\n        // file data\n        file.buffer.length;\n\n    centralDirectorySize +=\n        // file header\n        46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new (Uint8Array )(\n      localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n        file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib$1.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib$1.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib$1.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib$1.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib$1.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib$1.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib$1.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib$1.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n        /** @type {Zlib.Zip.OperatingSystem} */\n        (file.option['os']) ||\n        Zlib$1.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib$1.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n        /** @type {Zlib.Zip.CompressionMethod} */\n        (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n        ((date.getMinutes() & 0x7) << 5) |\n        (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n        (date.getHours()   << 3) |\n        (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n        ((date.getMonth() + 1 & 0x7) << 5) |\n        (date.getDate());\n    output[op1++] = output[op2++] =\n        ((date.getFullYear() - 1980 & 0x7f) << 1) |\n        (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      {\n        output.set(comment, op2);\n        op2 += commentLength;\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib$1.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib$1.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib$1.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib$1.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib$1.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib$1.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib$1.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib$1.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib$1.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib$1.CRC32.single(key[0], n);\n  key[1] =\n      (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib$1.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib$1.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib$1.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new (Uint32Array )(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE$1 = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable$1 = Zlib$1.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib$1.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE$1;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib$1.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib$1.RawInflate.BufferType.BLOCK:\n      this.op = Zlib$1.RawInflate.MaxBackwardLength;\n      this.output =\n          new (Uint8Array )(\n              Zlib$1.RawInflate.MaxBackwardLength +\n              this.bufferSize +\n              Zlib$1.RawInflate.MaxCopyLength\n          );\n      break;\n    case Zlib$1.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new (Uint8Array )(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib$1.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib$1.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib$1.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib$1.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib$1.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib$1.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib$1.RawInflate.Order = (function(table) {\n  return new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib$1.RawInflate.LengthCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib$1.RawInflate.LengthExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib$1.RawInflate.DistCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib$1.RawInflate.DistExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib$1.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable$1(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib$1.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable$1(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib$1.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n      // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n      // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n      // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n      // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib$1.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib$1.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib$1.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib$1.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib$1.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib$1.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib$1.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n          Zlib$1.RawInflate.FixedLiteralLengthTable,\n          Zlib$1.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib$1.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n          Zlib$1.RawInflate.FixedLiteralLengthTable,\n          Zlib$1.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib$1.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n      new (Uint8Array )(Zlib$1.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib$1.RawInflate.Order[i]] = this.readBits(3);\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable$1(codeLengths);\n  lengthTable = new (Uint8Array )(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable = buildHuffmanTable$1(lengthTable.subarray(0, hlit))\n      ;\n  distTable = buildHuffmanTable$1(lengthTable.subarray(hlit))\n      ;\n\n  switch (this.bufferType) {\n    case Zlib$1.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib$1.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib$1.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib$1.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib$1.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib$1.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib$1.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib$1.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib$1.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib$1.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib$1.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib$1.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib$1.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib$1.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n      new (Uint8Array )(\n          this.op - Zlib$1.RawInflate.MaxBackwardLength\n      );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib$1.RawInflate.MaxBackwardLength;\n\n  var output = this.output;\n\n  // copy to output buffer\n  {\n    buffer.set(output.subarray(Zlib$1.RawInflate.MaxBackwardLength, buffer.length));\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  {\n    output.set(\n        output.subarray(backward, backward + Zlib$1.RawInflate.MaxBackwardLength)\n    );\n  }\n\n  this.op = Zlib$1.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib$1.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib$1.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib$1.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new (Uint8Array )(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return this.output.subarray(Zlib$1.RawInflate.MaxBackwardLength, this.op) ;\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib$1.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib$1.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable$1 = Zlib$1.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib$1.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n      opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE$1;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input = new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new (Uint8Array )(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib$1.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib$1.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib$1.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib$1.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n        // block header\n      case Zlib$1.RawInflateStream.Status.INITIALIZED:\n      case Zlib$1.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n        // block body\n      case Zlib$1.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib$1.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib$1.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib$1.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib$1.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n        // decode data\n      case Zlib$1.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib$1.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib$1.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib$1.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib$1.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib$1.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib$1.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib$1.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib$1.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib$1.RawInflateStream.Order = (function(table) {\n  return new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib$1.RawInflateStream.LengthCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib$1.RawInflateStream.LengthExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib$1.RawInflateStream.DistCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib$1.RawInflateStream.DistExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib$1.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable$1(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib$1.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable$1(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib$1.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib$1.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib$1.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib$1.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib$1.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib$1.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib$1.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib$1.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib$1.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib$1.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib$1.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib$1.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib$1.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib$1.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib$1.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib$1.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n      new (Uint8Array )(Zlib$1.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib$1.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable$1(codeLengths);\n    lengthTable = new (Uint8Array )(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    this.litlenTable = buildHuffmanTable$1(lengthTable.subarray(0, hlit))\n        ;\n    this.distTable = buildHuffmanTable$1(lengthTable.subarray(hlit))\n        ;\n  }\n\n  this.status = Zlib$1.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib$1.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib$1.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib$1.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib$1.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib$1.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib$1.RawInflateStream.DistCodeTable[code];\n    if (Zlib$1.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib$1.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib$1.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib$1.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib$1.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    }\n  } else {\n    buffer =\n        this.output.subarray(this.sp, op) ;\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib$1.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib$1.RawInflateStream.MaxBackwardLength;\n    {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib$1.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib$1.RawInflateStream.MaxBackwardLength, op));\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib$1.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib$1.CompressionMethod.DEFLATE:\n      this.method = Zlib$1.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib$1.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n};\n\n/**\n * @enum {number}\n */\nZlib$1.Inflate.BufferType = Zlib$1.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib$1.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n        input[this.ip++] << 24 | input[this.ip++] << 16 |\n        input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib$1.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib$1.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new (Uint8Array )() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib$1.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib$1.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new (Uint8Array )();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = this.input.subarray(this.rawinflate.ip) ;\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib$1.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib$1.CompressionMethod.DEFLATE:\n      this.method = Zlib$1.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib$1.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib$1.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib$1.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib$1.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib$1.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n      (input[ip++] << 8)  |\n      (input[ip++] << 16) |\n      (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib$1.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib$1.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib$1.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib$1.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib$1.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n      (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib$1.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib$1.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib$1.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib$1.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib$1.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib$1.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib$1.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib$1.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib$1.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n};\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib$1.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib$1.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib$1.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n      new (Uint8Array )(Zlib$1.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib$1.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib$1.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib$1.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib$1.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib$1.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib$1.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib$1.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if (op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib$1.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib$1.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib$1.Heap = function(length) {\n  this.buffer = new (Uint16Array )(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib$1.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib$1.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib$1.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n      // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib$1.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib$1.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib$1.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      (input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n          (opt_params['outputBuffer'] instanceof Array) ?\n              new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new (Uint8Array )(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib$1.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib$1.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib$1.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib$1.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib$1.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib$1.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib$1.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib$1.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib$1.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = input.subarray(position, position + 0xffff) ;\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib$1.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib$1.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib$1.RawDeflate.prototype.makeNocompressBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {number} */\n      var len;\n      /** @type {number} */\n      var nlen;\n\n      var output = this.output;\n      var op = this.op;\n\n      // expand buffer\n      {\n        output = new Uint8Array(this.output.buffer);\n        while (output.length <= op + blockArray.length + 5) {\n          output = new Uint8Array(output.length << 1);\n        }\n        output.set(this.output);\n      }\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib$1.RawDeflate.CompressionType.NONE;\n      output[op++] = (bfinal) | (btype << 1);\n\n      // length\n      len = blockArray.length;\n      nlen = (~len + 0x10000) & 0xffff;\n      output[op++] =          len & 0xff;\n      output[op++] =  (len >>> 8) & 0xff;\n      output[op++] =         nlen & 0xff;\n      output[op++] = (nlen >>> 8) & 0xff;\n\n      // copy buffer\n      {\n        output.set(blockArray, op);\n        op += blockArray.length;\n        output = output.subarray(0, op);\n      }\n\n      this.op = op;\n      this.output = output;\n\n      return output;\n    };\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib$1.RawDeflate.prototype.makeFixedHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib$1.BitStream(new Uint8Array(this.output.buffer) , this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib$1.RawDeflate.CompressionType.FIXED;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n      this.fixedHuffman(data, stream);\n\n      return stream.finish();\n    };\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib$1.RawDeflate.prototype.makeDynamicHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib$1.BitStream(new Uint8Array(this.output.buffer) , this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n      /** @type {number} */\n      var hlit;\n      /** @type {number} */\n      var hdist;\n      /** @type {number} */\n      var hclen;\n      /** @const @type {Array.<number>} */\n      var hclenOrder =\n          [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var litLenLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var litLenCodes;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var distLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var distCodes;\n      /** @type {{\n       *   codes: !(Array.<number>|Uint32Array),\n       *   freqs: !(Array.<number>|Uint8Array)\n       * }} */\n      var treeSymbols;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var treeLengths;\n      /** @type {Array} */\n      var transLengths = new Array(19);\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var treeCodes;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var bitlen;\n      /** @type {number} */\n      var i;\n      /** @type {number} */\n      var il;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib$1.RawDeflate.CompressionType.DYNAMIC;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n\n      // リテラル・長さ, 距離のハフマン符号と符号長の算出\n      litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n      litLenCodes = this.getCodesFromLengths_(litLenLengths);\n      distLengths = this.getLengths_(this.freqsDist, 7);\n      distCodes = this.getCodesFromLengths_(distLengths);\n\n      // HLIT, HDIST の決定\n      for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n      for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n      // HCLEN\n      treeSymbols =\n          this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n      treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n      for (i = 0; i < 19; i++) {\n        transLengths[i] = treeLengths[hclenOrder[i]];\n      }\n      for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n      treeCodes = this.getCodesFromLengths_(treeLengths);\n\n      // 出力\n      stream.writeBits(hlit - 257, 5, true);\n      stream.writeBits(hdist - 1, 5, true);\n      stream.writeBits(hclen - 4, 4, true);\n      for (i = 0; i < hclen; i++) {\n        stream.writeBits(transLengths[i], 3, true);\n      }\n\n      // ツリーの出力\n      for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n        code = treeSymbols.codes[i];\n\n        stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n        // extra bits\n        if (code >= 16) {\n          i++;\n          switch (code) {\n            case 16: bitlen = 2; break;\n            case 17: bitlen = 3; break;\n            case 18: bitlen = 7; break;\n            default:\n              throw 'invalid code: ' + code;\n          }\n\n          stream.writeBits(treeSymbols.codes[i], bitlen, true);\n        }\n      }\n\n      this.dynamicHuffman(\n          data,\n          [litLenCodes, litLenLengths],\n          [distCodes, distLengths],\n          stream\n      );\n\n      return stream.finish();\n    };\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib$1.RawDeflate.prototype.dynamicHuffman =\n    function(dataArray, litLen, dist, stream) {\n      /** @type {number} */\n      var index;\n      /** @type {number} */\n      var length;\n      /** @type {number} */\n      var literal;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var litLenCodes;\n      /** @type {number} */\n      var litLenLengths;\n      /** @type {number} */\n      var distCodes;\n      /** @type {number} */\n      var distLengths;\n\n      litLenCodes = litLen[0];\n      litLenLengths = litLen[1];\n      distCodes = dist[0];\n      distLengths = dist[1];\n\n      // 符号を BitStream に書き込んでいく\n      for (index = 0, length = dataArray.length; index < length; ++index) {\n        literal = dataArray[index];\n\n        // literal or length\n        stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n        // 長さ・距離符号\n        if (literal > 256) {\n          // length extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // distance\n          code = dataArray[++index];\n          stream.writeBits(distCodes[code], distLengths[code], true);\n          // distance extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // 終端\n        } else if (literal === 256) {\n          break;\n        }\n      }\n\n      return stream;\n    };\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib$1.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib$1.BitStream.prototype.writeBits.apply(\n        stream,\n        Zlib$1.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib$1.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib$1.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return new Uint32Array(table) ;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0];      case (length === 4): return [258, length - 4, 0];      case (length === 5): return [259, length - 5, 0];      case (length === 6): return [260, length - 6, 0];      case (length === 7): return [261, length - 7, 0];      case (length === 8): return [262, length - 8, 0];      case (length === 9): return [263, length - 9, 0];      case (length === 10): return [264, length - 10, 0];      case (length <= 12): return [265, length - 11, 1];      case (length <= 14): return [266, length - 13, 1];      case (length <= 16): return [267, length - 15, 1];      case (length <= 18): return [268, length - 17, 1];      case (length <= 22): return [269, length - 19, 2];      case (length <= 26): return [270, length - 23, 2];      case (length <= 30): return [271, length - 27, 2];      case (length <= 34): return [272, length - 31, 2];      case (length <= 42): return [273, length - 35, 3];      case (length <= 50): return [274, length - 43, 3];      case (length <= 58): return [275, length - 51, 3];      case (length <= 66): return [276, length - 59, 3];      case (length <= 82): return [277, length - 67, 4];      case (length <= 98): return [278, length - 83, 4];      case (length <= 114): return [279, length - 99, 4];      case (length <= 130): return [280, length - 115, 4];      case (length <= 162): return [281, length - 131, 5];      case (length <= 194): return [282, length - 163, 5];      case (length <= 226): return [283, length - 195, 5];      case (length <= 257): return [284, length - 227, 5];      case (length === 258): return [285, length - 258, 0];      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib$1.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib$1.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib$1.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib$1.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib$1.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = new Uint16Array(dataArray.length * 2) ;\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new (Uint32Array )(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new (Uint32Array )(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib$1.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib$1.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n      // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n      lz77buf.subarray(0, pos) \n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib$1.RawDeflate.prototype.searchLongestMatch_ =\n    function(data, position, matchList) {\n      var match,\n          currentMatch,\n          matchMax = 0, matchLength,\n          i, j, l, dl = data.length;\n\n      // 候補を後ろから 1 つずつ絞り込んでゆく\n      permatch:\n          for (i = 0, l = matchList.length; i < l; i++) {\n            match = matchList[l - i - 1];\n            matchLength = Zlib$1.RawDeflate.Lz77MinLength;\n\n            // 前回までの最長一致を末尾から一致検索する\n            if (matchMax > Zlib$1.RawDeflate.Lz77MinLength) {\n              for (j = matchMax; j > Zlib$1.RawDeflate.Lz77MinLength; j--) {\n                if (data[match + j - 1] !== data[position + j - 1]) {\n                  continue permatch;\n                }\n              }\n              matchLength = matchMax;\n            }\n\n            // 最長一致探索\n            while (matchLength < Zlib$1.RawDeflate.Lz77MaxLength &&\n            position + matchLength < dl &&\n            data[match + matchLength] === data[position + matchLength]) {\n              ++matchLength;\n            }\n\n            // マッチ長が同じ場合は後方を優先\n            if (matchLength > matchMax) {\n              currentMatch = match;\n              matchMax = matchLength;\n            }\n\n            // 最長が確定したら後の処理は省略\n            if (matchLength === Zlib$1.RawDeflate.Lz77MaxLength) {\n              break;\n            }\n          }\n\n      return new Zlib$1.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n    };\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib$1.RawDeflate.prototype.getTreeSymbols_ =\n    function(hlit, litlenLengths, hdist, distLengths) {\n      var src = new (Uint32Array )(hlit + hdist),\n          i, j, runLength, l,\n          result = new (Uint32Array )(286 + 30),\n          nResult,\n          rpt,\n          freqs = new (Uint8Array )(19);\n\n      j = 0;\n      for (i = 0; i < hlit; i++) {\n        src[j++] = litlenLengths[i];\n      }\n      for (i = 0; i < hdist; i++) {\n        src[j++] = distLengths[i];\n      }\n\n      // 符号化\n      nResult = 0;\n      for (i = 0, l = src.length; i < l; i += j) {\n        // Run Length Encoding\n        for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n        runLength = j;\n\n        if (src[i] === 0) {\n          // 0 の繰り返しが 3 回未満ならばそのまま\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = 0;\n              freqs[0]++;\n            }\n          } else {\n            while (runLength > 0) {\n              // 繰り返しは最大 138 までなので切り詰める\n              rpt = (runLength < 138 ? runLength : 138);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              // 3-10 回 -> 17\n              if (rpt <= 10) {\n                result[nResult++] = 17;\n                result[nResult++] = rpt - 3;\n                freqs[17]++;\n                // 11-138 回 -> 18\n              } else {\n                result[nResult++] = 18;\n                result[nResult++] = rpt - 11;\n                freqs[18]++;\n              }\n\n              runLength -= rpt;\n            }\n          }\n        } else {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n          runLength--;\n\n          // 繰り返し回数が3回未満ならばランレングス符号は要らない\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = src[i];\n              freqs[src[i]]++;\n            }\n            // 3 回以上ならばランレングス符号化\n          } else {\n            while (runLength > 0) {\n              // runLengthを 3-6 で分割\n              rpt = (runLength < 6 ? runLength : 6);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              result[nResult++] = 16;\n              result[nResult++] = rpt - 3;\n              freqs[16]++;\n\n              runLength -= rpt;\n            }\n          }\n        }\n      }\n\n      return {\n        codes:\n            result.subarray(0, nResult) ,\n        freqs: freqs\n      };\n    };\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib$1.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib$1.Heap(2 * Zlib$1.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new (Uint8Array )(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new (Uint32Array )(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib$1.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new (Uint16Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new (Uint8Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new (Uint8Array )(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib$1.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new (Uint16Array )(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib$1.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib$1.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      ((input instanceof Array)) ?\n          new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib$1.Unzip.CompressionMethod = Zlib$1.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib$1.Unzip.FileHeaderSignature = Zlib$1.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib$1.Unzip.LocalFileHeaderSignature = Zlib$1.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib$1.Unzip.CentralDirectorySignature = Zlib$1.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib$1.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib$1.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib$1.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib$1.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib$1.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib$1.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = input.subarray(ip, ip += this.extraFieldLength) ;\n\n  // file comment\n  this.comment = input.subarray(ip, ip + this.fileCommentLength) ;\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib$1.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib$1.Unzip.LocalFileHeader.Flags = Zlib$1.Zip.Flags;\n\nZlib$1.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib$1.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib$1.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib$1.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib$1.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = input.subarray(ip, ip += this.extraFieldLength) ;\n\n  this.length = ip - this.offset;\n};\n\n\nZlib$1.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib$1.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib$1.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib$1.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib$1.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib$1.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib$1.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib$1.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib$1.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib$1.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = input.subarray(ip, ip + this.commentLength) ;\n};\n\nZlib$1.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib$1.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib$1.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib$1.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib$1.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib$1.Unzip.CompressionMethod.STORE:\n      buffer = this.input.subarray(offset, offset + length) ;\n      break;\n    case Zlib$1.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib$1.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib$1.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n          'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n          ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib$1.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib$1.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib$1.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib$1.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib$1.Unzip.prototype.updateKeys = Zlib$1.Zip.prototype.updateKeys;\nZlib$1.Unzip.prototype.createDecryptionKey = Zlib$1.Zip.prototype.createEncryptionKey;\nZlib$1.Unzip.prototype.getByte = Zlib$1.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib$1.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib$1.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib$1.Util.stringToByteArray(array);\n  }\n  return Zlib$1.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib$1.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib$1.Adler32.OptimizationParameter ?\n        Zlib$1.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib$1.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib$1.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof (Uint8Array ) ?\n      buffer :\n      new (Uint8Array )(Zlib$1.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib$1.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib$1.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n      new (Uint8Array )(il << 1);\n\n  // copy buffer\n  {\n    buffer.set(oldbuf);\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib$1.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib$1.BitStream.ReverseTable[n & 0xFF] << 24) |\n        (Zlib$1.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n        (Zlib$1.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n        Zlib$1.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n        rev32_(number) >> (32 - n) :\n        Zlib$1.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n    // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib$1.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib$1.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib$1.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  {\n    output = buffer.subarray(0, index);\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib$1.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new (Uint8Array )(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib$1.CRC32.calc = function(data, pos, length) {\n  return Zlib$1.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib$1.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib$1.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib$1.CRC32.single = function(num, crc) {\n  return (Zlib$1.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib$1.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib$1.CRC32.Table = new Uint32Array(Zlib$1.CRC32.Table_) ;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib$1.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n      new (Uint8Array )(Zlib$1.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib$1.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib$1.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib$1.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib$1.Deflate.CompressionType = Zlib$1.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib$1.Deflate.compress = function(input, opt_params) {\n  return (new Zlib$1.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib$1.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var adler;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib$1.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib$1.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib$1.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib$1.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib$1.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib$1.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib$1.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib$1.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\n/**\n * Covers string literals and String objects\n * @param x\n * @returns {boolean}\n */\nfunction isString$1(x) {\n    return typeof x === \"string\" || x instanceof String\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst knownFileExtensions = new Set([\n\n    \"narrowpeak\",\n    \"broadpeak\",\n    \"regionpeak\",\n    \"peaks\",\n    \"bedgraph\",\n    \"wig\",\n    \"gff3\",\n    \"gff\",\n    \"gtf\",\n    \"fusionjuncspan\",\n    \"refflat\",\n    \"seg\",\n    \"aed\",\n    \"bed\",\n    \"vcf\",\n    \"bb\",\n    \"bigbed\",\n    \"bw\",\n    \"bigwig\",\n    \"bam\",\n    \"tdf\",\n    \"refgene\",\n    \"genepred\",\n    \"genepredext\",\n    \"bedpe\",\n    \"bp\",\n    \"snp\",\n    \"rmsk\",\n    \"cram\",\n    \"gwas\"\n]);\n\nfunction isGoogleURL$1(url) {\n    return (url.includes(\"googleapis\") && !url.includes(\"urlshortener\")) ||\n        isGoogleStorageURL$1(url) ||\n        isGoogleDriveURL$1(url)\n}\n\nfunction isGoogleStorageURL$1(url) {\n    return url.startsWith(\"gs://\") ||\n        url.startsWith(\"https://www.googleapis.com/storage\") ||\n        url.startsWith(\"https://storage.cloud.google.com\") ||\n        url.startsWith(\"https://storage.googleapis.com\");\n}\n\nfunction isGoogleDriveURL$1(url) {\n    return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n}\n\n/**\n * Translate gs:// urls to https\n * See https://cloud.google.com/storage/docs/json_api/v1\n * @param gsUrl\n * @returns {string|*}\n */\nfunction translateGoogleCloudURL$1(gsUrl) {\n\n    let {bucket, object} = parseBucketName$1(gsUrl);\n    object = encode$1(object);\n\n    const qIdx = gsUrl.indexOf('?');\n    const paramString = (qIdx > 0) ? gsUrl.substring(qIdx) + \"&alt=media\" : \"?alt=media\";\n\n    return `https://storage.googleapis.com/storage/v1/b/${bucket}/o/${object}${paramString}`\n}\n\n/**\n * Parse a google bucket and object name from a google storage URL.  Known forms include\n *\n * gs://BUCKET_NAME/OBJECT_NAME\n * https://storage.googleapis.com/BUCKET_NAME/OBJECT_NAME\n * https://storage.googleapis.com/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\n * https://www.googleapis.com/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\"\n * https://storage.googleapis.com/download/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\n *\n * @param url\n */\nfunction parseBucketName$1(url) {\n\n    let bucket;\n    let object;\n\n    if (url.startsWith(\"gs://\")) {\n        const i = url.indexOf('/', 5);\n        if (i >= 0) {\n            bucket = url.substring(5, i);\n            const qIdx = url.indexOf('?');\n            object = (qIdx < 0) ? url.substring(i + 1) : url.substring(i + 1, qIdx);\n        }\n\n    } else if (url.startsWith(\"https://storage.googleapis.com\") || url.startsWith(\"https://storage.cloud.google.com\")) {\n        const bucketIdx = url.indexOf(\"/v1/b/\", 8);\n        if (bucketIdx > 0) {\n            const objIdx = url.indexOf(\"/o/\", bucketIdx);\n            if (objIdx > 0) {\n                const queryIdx = url.indexOf(\"?\", objIdx);\n                bucket = url.substring(bucketIdx + 6, objIdx);\n                object = queryIdx > 0 ? url.substring(objIdx + 3, queryIdx) : url.substring(objIdx + 3);\n            }\n\n        } else {\n            const idx1 = url.indexOf(\"/\", 8);\n            const idx2 = url.indexOf(\"/\", idx1+1);\n            const idx3 = url.indexOf(\"?\", idx2);\n            if (idx2 > 0) {\n                bucket = url.substring(idx1+1, idx2);\n                object = idx3 < 0 ? url.substring(idx2+1) : url.substring(idx2+1, idx3);\n            }\n        }\n\n    } else if (url.startsWith(\"https://www.googleapis.com/storage/v1/b\")) {\n        const bucketIdx = url.indexOf(\"/v1/b/\", 8);\n        const objIdx = url.indexOf(\"/o/\", bucketIdx);\n        if (objIdx > 0) {\n            const queryIdx = url.indexOf(\"?\", objIdx);\n            bucket = url.substring(bucketIdx + 6, objIdx);\n            object = queryIdx > 0 ? url.substring(objIdx + 3, queryIdx) : url.substring(objIdx + 3);\n        }\n    }\n\n    if (bucket && object) {\n        return {\n            bucket, object\n        }\n    } else {\n        throw Error(`Unrecognized Google Storage URI: ${url}`)\n    }\n\n}\n\nfunction driveDownloadURL$1(link) {\n    // Return a google drive download url for the sharable link\n    //https://drive.google.com/open?id=0B-lleX9c2pZFbDJ4VVRxakJzVGM\n    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n    var id = getGoogleDriveFileID$1(link);\n    return id ? \"https://www.googleapis.com/drive/v3/files/\" + id + \"?alt=media&supportsTeamDrives=true\" : link;\n}\n\nfunction getGoogleDriveFileID$1(link) {\n\n    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n    //https://www.googleapis.com/drive/v3/files/1w-tvo6p1SH4p1OaQSVxpkV_EJgGIstWF?alt=media&supportsTeamDrives=true\"\n\n    if (link.includes(\"/open?id=\")) {\n        const i1 = link.indexOf(\"/open?id=\") + 9;\n        const i2 = link.indexOf(\"&\");\n        if (i1 > 0 && i2 > i1) {\n            return link.substring(i1, i2)\n        } else if (i1 > 0) {\n            return link.substring(i1);\n        }\n\n    } else if (link.includes(\"/file/d/\")) {\n        const i1 = link.indexOf(\"/file/d/\") + 8;\n        const i2 = link.lastIndexOf(\"/\");\n        return link.substring(i1, i2);\n\n    } else if (link.startsWith(\"https://www.googleapis.com/drive\")) {\n        let i1 = link.indexOf(\"/files/\");\n        const i2 = link.indexOf(\"?\");\n        if (i1 > 0) {\n            i1 += 7;\n            return i2 > 0 ?\n                link.substring(i1, i2) :\n                link.substring(i1)\n        }\n    }\n\n    throw Error(\"Unknown Google Drive url format: \" + link);\n\n\n}\n\n\n/**\n * Percent a GCS object name.  See https://cloud.google.com/storage/docs/request-endpoints\n * Specific characters to encode:\n *   !, #, $, &, ', (, ), *, +, ,, /, :, ;, =, ?, @, [, ], and space characters.\n * @param obj\n */\n\nfunction encode$1(objectName) {\n\n    let result = '';\n    objectName.split('').forEach(function(letter) {\n        if(encodings$1.has(letter)) {\n            result += encodings$1.get(letter);\n        } else {\n            result += letter;\n        }\n    });\n    return result;\n}\n\n//\t%23\t%24\t%25\t%26\t%27\t%28\t%29\t%2A\t%2B\t%2C\t%2F\t%3A\t%3B\t%3D\t%3F\t%40\t%5B\t%5D\nconst encodings$1 = new Map();\nencodings$1.set(\"!\", \"%21\");\nencodings$1.set(\"#\", \"%23\");\nencodings$1.set(\"$\", \"%24\");\nencodings$1.set(\"%\", \"%25\");\nencodings$1.set(\"&\", \"%26\");\nencodings$1.set(\"'\", \"%27\");\nencodings$1.set(\"(\", \"%28\");\nencodings$1.set(\")\", \"%29\");\nencodings$1.set(\"*\", \"%2A\");\nencodings$1.set(\"+\", \"%2B\");\nencodings$1.set(\",\", \"%2C\");\nencodings$1.set(\"/\", \"%2F\");\nencodings$1.set(\":\", \"%3A\");\nencodings$1.set(\";\", \"%3B\");\nencodings$1.set(\"=\", \"%3D\");\nencodings$1.set(\"?\", \"%3F\");\nencodings$1.set(\"@\", \"%40\");\nencodings$1.set(\"[\", \"%5B\");\nencodings$1.set(\"]\", \"%5D\");\nencodings$1.set(\" \", \"%20\");\n\n// Convenience functions for the gapi oAuth library.\n\nconst FIVE_MINUTES$1 = 5 * 60 * 1000;\n\nfunction isInitialized$1() {\n    return typeof gapi !== \"undefined\" && gapi.auth2 && gapi.auth2.getAuthInstance();\n}\n\nlet inProgress$1 = false;\n\nasync function getAccessToken$1(scope) {\n\n    if (typeof gapi === \"undefined\") {\n        throw Error(\"Google authentication requires the 'gapi' library\")\n    }\n    if (!gapi.auth2) {\n        throw Error(\"Google 'auth2' has not been initialized\")\n    }\n\n    if (inProgress$1) {\n        return new Promise(function (resolve, reject) {\n            let intervalID;\n            const checkForToken = () => {    // Wait for inProgress to equal \"false\"\n                try {\n                    if (inProgress$1 === false) {\n                        //console.log(\"Delayed resolution for \" + scope);\n                        resolve(getAccessToken$1(scope));\n                        clearInterval(intervalID);\n                    }\n                } catch (e) {\n                    clearInterval(intervalID);\n                    reject(e);\n                }\n            };\n            intervalID = setInterval(checkForToken, 100);\n        })\n    } else {\n        inProgress$1 = true;\n        try {\n            let currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n            let token;\n            if (currentUser.isSignedIn()) {\n                if (!currentUser.hasGrantedScopes(scope)) {\n                    await currentUser.grant({scope});\n                }\n                const {access_token, expires_at} = currentUser.getAuthResponse();\n                if (Date.now() < (expires_at - FIVE_MINUTES$1)) {\n                    token = {access_token, expires_at};\n                } else {\n                    const {access_token, expires_at} = currentUser.reloadAuthResponse();\n                    token = {access_token, expires_at};\n                }\n            } else {\n                currentUser = await signIn$1(scope);\n                const {access_token, expires_at} = currentUser.getAuthResponse();\n                token = {access_token, expires_at};\n            }\n            return token;\n        } finally {\n            inProgress$1 = false;\n        }\n    }\n}\n\n/**\n * Return the current access token if the user is signed in, or undefined otherwise.  This function does not\n * attempt a signIn or request any specfic scopes.\n *\n * @returns access_token || undefined\n */\nfunction getCurrentAccessToken$1() {\n\n    let currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n    if (currentUser && currentUser.isSignedIn()) {\n        const {access_token, expires_at} = currentUser.getAuthResponse();\n        return {access_token, expires_at};\n    } else {\n        return undefined;\n    }\n\n}\n\nasync function signIn$1(scope) {\n\n    const options = new gapi.auth2.SigninOptionsBuilder();\n    options.setPrompt('select_account');\n    options.setScope(scope);\n    return gapi.auth2.getAuthInstance().signIn(options)\n}\n\nfunction getScopeForURL$1(url) {\n    if (isGoogleDriveURL$1(url)) {\n        return \"https://www.googleapis.com/auth/drive.file\";\n    } else if (isGoogleStorageURL$1(url)) {\n        return \"https://www.googleapis.com/auth/devstorage.read_only\";\n    } else {\n        return 'https://www.googleapis.com/auth/userinfo.profile';\n    }\n}\n\nfunction getApiKey$1() {\n    return gapi.apiKey;\n}\n\nasync function getDriveFileInfo$1(googleDriveURL) {\n\n    const id = getGoogleDriveFileID$1(googleDriveURL);\n    let endPoint = \"https://www.googleapis.com/drive/v3/files/\" + id + \"?supportsTeamDrives=true\";\n    const apiKey = getApiKey$1();\n    if (apiKey) {\n        endPoint += \"&key=\" + apiKey;\n    }\n    const response = await fetch(endPoint);\n    let json = await response.json();\n    if (json.error && json.error.code === 404) {\n        const {access_token} = await getAccessToken$1(\"https://www.googleapis.com/auth/drive.readonly\");\n        if (access_token) {\n            const response = await fetch(endPoint, {\n                headers: {\n                    'Authorization': `Bearer ${access_token}`\n                }\n            });\n            json = await response.json();\n            if (json.error) {\n                throw Error(json.error);\n            }\n        } else {\n            throw Error(json.error);\n        }\n    }\n    return json;\n}\n\nif (typeof process === 'object' && typeof window === 'undefined') {\n    global.atob = function (str) {\n        return Buffer.from(str, 'base64').toString('binary');\n    };\n}\n\n/**\n * @param dataURI\n * @returns {Array<number>|Uint8Array}\n */\nfunction decodeDataURI$1(dataURI) {\n\n    const split = dataURI.split(',');\n    const info = split[0].split(':')[1];\n    let dataString = split[1];\n\n    if (info.indexOf('base64') >= 0) {\n        dataString = atob(dataString);\n    } else {\n        dataString = decodeURI(dataString);      // URL encoded string -- not currently used of tested\n    }\n    const bytes = new Uint8Array(dataString.length);\n    for (let i = 0; i < dataString.length; i++) {\n        bytes[i] = dataString.charCodeAt(i);\n    }\n\n    let plain;\n    if (info.indexOf('gzip') > 0) {\n        const inflate = new Zlib$1.Gunzip(bytes);\n        plain = inflate.decompress();\n    } else {\n        plain = bytes;\n    }\n    return plain\n}\n\nfunction parseUri$1(str) {\n\n    var o = options$1,\n        m = o.parser[\"loose\"].exec(str),\n        uri = {},\n        i = 14;\n\n    while (i--) uri[o.key[i]] = m[i] || \"\";\n\n    uri[o.q.name] = {};\n    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n        if ($1) uri[o.q.name][$1] = $2;\n    });\n\n    return uri;\n}\n\nconst options$1 = {\n    strictMode: false,\n    key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n    q: {\n        name: \"queryKey\",\n        parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n        strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n        loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n};\n\nfunction getExtension(url) {\n\n    if (undefined === url) {\n        return undefined;\n    }\n\n    let path = (isFilePath(url) || url.google_url) ? url.name : url;\n    let filename = path.toLowerCase();\n\n    //Strip parameters -- handle local files later\n    let index = filename.indexOf(\"?\");\n    if (index > 0) {\n        filename = filename.substr(0, index);\n    }\n\n    //Strip aux extensions .gz, .tab, and .txt\n    if (filename.endsWith(\".gz\")) {\n        filename = filename.substr(0, filename.length - 3);\n    } else if (filename.endsWith(\".txt\") || filename.endsWith(\".tab\") || filename.endsWith(\".bgz\")) {\n        filename = filename.substr(0, filename.length - 4);\n    }\n\n    index = filename.lastIndexOf(\".\");\n\n    return index < 0 ? filename : filename.substr(1 + index);\n}\n\n/**\n * Return the filename from the path.   Example\n *   https://foo.com/bar.bed?param=2   => bar.bed\n * @param urlOrFile\n */\n\nfunction getFilename$3 (urlOrFile) {\n\n    if (urlOrFile instanceof File) {\n        return urlOrFile.name;\n    } else if (isString$1(urlOrFile)){\n\n        let index = urlOrFile.lastIndexOf(\"/\");\n        let filename = index < 0 ? urlOrFile : urlOrFile.substr(index + 1);\n\n        //Strip parameters -- handle local files later\n        index = filename.indexOf(\"?\");\n        if (index > 0) {\n            filename = filename.substr(0, index);\n        }\n        return filename;\n    } else {\n        throw Error(`Expected File or string, got ${typeof urlOrFile}`);\n    }\n}\n\nfunction isFilePath (path) {\n    return (path instanceof File);\n}\n\n\nfunction download  (filename, data) {\n\n    const element = document.createElement('a');\n    element.setAttribute('href', data);\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n\n/*\n *  Author: Jim Robinson, 2020\n *\n * Wrapper functions for the Google picker API\n *\n * PREQUISITES\n *    gapi loaded\n *    oauth2 loaded and initialized\n *\n * This wrapper is stateless -- this is important as multiple copies of igv-utils might be present\n * in an application.  All state is held in the gapi library itself.\n */\n\nasync function init() {\n    return new Promise(function (resolve, reject) {\n        gapi.load(\"picker\", {\n            callback: resolve,\n            onerror: reject\n        });\n    })\n}\n\nasync function createDropdownButtonPicker(multipleFileSelection, filePickerHandler) {\n\n\n    if(typeof gapi === \"undefined\") {\n        throw Error(\"Google authentication requires the 'gapi' library\")\n    }\n\n    if(typeof google === \"undefined\" || !google.picker) {\n        await init();\n    }\n\n    const {access_token} = await getAccessToken$1('https://www.googleapis.com/auth/drive.file');\n    if (access_token) {\n\n        const view = new google.picker.DocsView(google.picker.ViewId.DOCS);\n        view.setIncludeFolders(true);\n\n        const teamView = new google.picker.DocsView(google.picker.ViewId.DOCS);\n        teamView.setEnableTeamDrives(true);\n        teamView.setIncludeFolders(true);\n\n        let picker;\n        if (multipleFileSelection) {\n             picker = new google.picker.PickerBuilder()\n                .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)\n                .setOAuthToken(access_token)\n                .addView(view)\n                .addView(teamView)\n                .enableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n                .setCallback(function (data) {\n                    if (data[google.picker.Response.ACTION] === google.picker.Action.PICKED) {\n                        filePickerHandler(data[google.picker.Response.DOCUMENTS]);\n                    }\n                })\n                .build();\n\n        } else {\n             picker = new google.picker.PickerBuilder()\n                .disableFeature(google.picker.Feature.MULTISELECT_ENABLED)\n                .setOAuthToken(access_token)\n                .addView(view)\n                .addView(teamView)\n                .enableFeature(google.picker.Feature.SUPPORT_TEAM_DRIVES)\n                .setCallback(function (data) {\n                    if (data[google.picker.Response.ACTION] === google.picker.Action.PICKED) {\n                        filePickerHandler(data[google.picker.Response.DOCUMENTS]);\n                    }\n                })\n                .build();\n\n        }\n\n        picker.setVisible(true);\n\n    } else {\n        throw Error(\"Sign into Google before using picker\");\n    }\n}\n\n// Uncompress data,  assumed to be series of bgzipped blocks\nfunction unbgzf$1(data, lim) {\n\n    const oBlockList = [];\n    let ptr = 0;\n    let totalSize = 0;\n\n    lim = lim || data.byteLength - 18;\n\n    while (ptr < lim) {\n        try {\n            const ba = new Uint8Array(data, ptr, 18);\n            const xlen = (ba[11] << 8) | (ba[10]);\n            const si1 = ba[12];\n            const si2 = ba[13];\n            const slen = (ba[15] << 8) | (ba[14]);\n            const bsize = ((ba[17] << 8) | (ba[16])) + 1;\n            const start = 12 + xlen + ptr;    // Start of CDATA\n            const bytesLeft = data.byteLength - start;\n            const cDataSize = bsize - xlen - 19;\n            if (bytesLeft < cDataSize || cDataSize <= 0) break;\n\n            const a = new Uint8Array(data, start, cDataSize);\n            const inflate = new Zlib$1.RawInflate(a);\n            const unc = inflate.decompress();\n\n            ptr += inflate.ip + 26;\n            totalSize += unc.byteLength;\n            oBlockList.push(unc);\n        } catch (e) {\n            console.error(e);\n            break;\n        }\n    }\n\n    // Concatenate decompressed blocks\n    if (oBlockList.length === 1) {\n        return oBlockList[0];\n    } else {\n        const out = new Uint8Array(totalSize);\n        let cursor = 0;\n        for (let i = 0; i < oBlockList.length; ++i) {\n            var b = new Uint8Array(oBlockList[i]);\n            arrayCopy$1(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out;\n    }\n}\n\n// From Thomas Down's zlib implementation\n\nconst testArray$1 = new Uint8Array(1);\nconst hasSubarray$1 = (typeof testArray$1.subarray === 'function');\n\nfunction arrayCopy$1(src, srcOffset, dest, destOffset, count) {\n    if (count === 0) {\n        return;\n    }\n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n    if (srcOffset === 0 && count === src.length) {\n        arrayCopy_fast$1(src, dest, destOffset);\n    } else if (hasSubarray$1) {\n        arrayCopy_fast$1(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n    } else if (src.BYTES_PER_ELEMENT === 1 && count > 100) {\n        arrayCopy_fast$1(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else {\n        arrayCopy_slow$1(src, srcOffset, dest, destOffset, count);\n    }\n}\n\nfunction arrayCopy_slow$1(src, srcOffset, dest, destOffset, count) {\n    for (let i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast$1(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\n/**\n * Make the target element movable by clicking and dragging on the handle.  This is not a general purprose function,\n * it makes several options specific to igv dialogs, the primary one being that the\n * target is absolutely positioned in pixel coordinates\n\n */\n\nlet dragData;   // Its assumed we are only dragging one element at a time.\n\n\nfunction makeDraggable(target, handle) {\n    handle.addEventListener('mousedown', dragStart.bind(target));\n}\n\n\nfunction dragStart(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    offset(this);\n    const dragFunction = drag.bind(this);\n    const dragEndFunction = dragEnd.bind(this);\n    const computedStyle = getComputedStyle(this);\n    const top = parseInt(computedStyle.top.replace(\"px\", \"\"));\n    const left = parseInt(computedStyle.left.replace(\"px\", \"\"));\n\n    dragData =\n        {\n            dragFunction: dragFunction,\n            dragEndFunction: dragEndFunction,\n            screenX: event.screenX,\n            screenY: event.screenY,\n            top: top,\n            left: left\n        };\n\n    document.addEventListener('mousemove', dragFunction);\n    document.addEventListener('mouseup', dragEndFunction);\n    document.addEventListener('mouseleave', dragEndFunction);\n    document.addEventListener('mouseexit', dragEndFunction);\n}\n\nfunction drag(event) {\n\n    if (!dragData) {\n        return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    const dx = event.screenX - dragData.screenX;\n    const dy = event.screenY - dragData.screenY;\n    this.style.left = `${dragData.left + dx}px`;\n    this.style.top = `${dragData.top + dy}px`;\n}\n\nfunction dragEnd(event) {\n\n    if (!dragData) {\n        return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n\n    const dragFunction = dragData.dragFunction;\n    const dragEndFunction = dragData.dragEndFunction;\n    document.removeEventListener('mousemove', dragFunction);\n    document.removeEventListener('mouseup', dragEndFunction);\n    document.removeEventListener('mouseleave', dragEndFunction);\n    document.removeEventListener('mouseexit', dragEndFunction);\n    dragData = undefined;\n}\n\n// Support for oauth token based authorization\n// This class supports explicit setting of an oauth token either globally or for specific hosts.\n//\n// The variable oauth.google.access_token, which becomes igv.oauth.google.access_token on ES5 conversion is\n// supported for backward compatibility\n\nconst DEFAULT_HOST$1 = \"googleapis\";\n\nconst oauth$1 = {\n\n    oauthTokens: {},\n\n    setToken: function (token, host) {\n        host = host || DEFAULT_HOST$1;\n        this.oauthTokens[host] = token;\n        if(host === DEFAULT_HOST$1) {\n            this.google.access_token = token;    // legacy support\n        }\n    },\n\n    getToken: function (host) {\n        host = host || DEFAULT_HOST$1;\n        let token;\n        for (let key of Object.keys(this.oauthTokens)) {\n            const regex = wildcardToRegExp$1(key);\n            if (regex.test(host)) {\n                token = this.oauthTokens[key];\n                break;\n            }\n        }\n        return token;\n    },\n\n    removeToken: function (host) {\n        host = host || DEFAULT_HOST$1;\n        for (let key of Object.keys(this.oauthTokens)) {\n            const regex = wildcardToRegExp$1(key);\n            if (regex.test(host)) {\n                this.oauthTokens[key] = undefined;\n            }\n        }\n        if(host === DEFAULT_HOST$1) {\n            this.google.access_token = undefined;    // legacy support\n        }\n    },\n\n    // Special object for google -- legacy support\n    google: {\n        setToken: function (token) {\n            oauth$1.setToken(token);\n        }\n    }\n};\n\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n *\n * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n */\nfunction wildcardToRegExp$1(s) {\n    return new RegExp('^' + s.split(/\\*+/).map(regExpEscape$1).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n *\n * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n */\nfunction regExpEscape$1(s) {\n    return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n\n// The MIT License (MIT)\n\n/**\n * @constructor\n * @param {Object} options A set op options to pass to the throttle function\n *        @param {number} requestsPerSecond The amount of requests per second\n *                                          the library will limit to\n */\nclass Throttle$1 {\n    constructor(options) {\n        this.requestsPerSecond = options.requestsPerSecond || 10;\n        this.lastStartTime = 0;\n        this.queued = [];\n    }\n\n    /**\n     * Adds a promise\n     * @param {Function} async function to be executed\n     * @param {Object} options A set of options.\n     * @return {Promise} A promise\n     */\n    add(asyncFunction, options) {\n\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            self.queued.push({\n                resolve: resolve,\n                reject: reject,\n                asyncFunction: asyncFunction,\n            });\n            self.dequeue();\n        });\n    }\n\n    /**\n     * Adds all the promises passed as parameters\n     * @param {Function} promises An array of functions that return a promise\n     * @param {Object} options A set of options.\n     * @param {number} options.signal An AbortSignal object that can be used to abort the returned promise\n     * @param {number} options.weight A \"weight\" of each operation resolving by array of promises\n     * @return {Promise} A promise that succeeds when all the promises passed as options do\n     */\n    addAll(promises, options) {\n        var addedPromises = promises.map(function (promise) {\n            return this.add(promise, options);\n        }.bind(this));\n\n        return Promise.all(addedPromises);\n    };\n\n    /**\n     * Dequeues a promise\n     * @return {void}\n     */\n    dequeue() {\n        if (this.queued.length > 0) {\n            var now = new Date(),\n                inc = (1000 / this.requestsPerSecond) + 1,\n                elapsed = now - this.lastStartTime;\n\n            if (elapsed >= inc) {\n                this._execute();\n            } else {\n                // we have reached the limit, schedule a dequeue operation\n                setTimeout(function () {\n                    this.dequeue();\n                }.bind(this), inc - elapsed);\n            }\n        }\n    }\n\n    /**\n     * Executes the promise\n     * @private\n     * @return {void}\n     */\n    async _execute() {\n        this.lastStartTime = new Date();\n        var candidate = this.queued.shift();\n        const f = candidate.asyncFunction;\n        try {\n            const r = await f();\n            candidate.resolve(r);\n        } catch (e) {\n            candidate.reject(e);\n        }\n\n    }\n\n\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar NONE$1 = 0;\nvar GZIP$1 = 1;\nvar BGZF$1 = 2;\nvar UNKNOWN$1 = 3;\nlet RANGE_WARNING_GIVEN$1 = false;\n\nconst googleThrottle$1 = new Throttle$1({\n    requestsPerSecond: 8\n});\n\nconst igvxhr$1 = {\n\n    apiKey: undefined,\n\n    setApiKey: function (key) {\n        this.apiKey = key;\n    },\n\n    load: load$1,\n\n    loadArrayBuffer: async function (url, options) {\n        options = options || {};\n        if (!options.responseType) {\n            options.responseType = \"arraybuffer\";\n        }\n        if (url instanceof File) {\n            return loadFileSlice$1(url, options);\n        } else {\n            return load$1(url, options);\n        }\n    },\n\n    loadJson: async function (url, options) {\n        options = options || {};\n        const method = options.method || (options.sendData ? \"POST\" : \"GET\");\n        if (method === \"POST\") {\n            options.contentType = \"application/json\";\n        }\n        const result = await this.loadString(url, options);\n        if (result) {\n            return JSON.parse(result);\n        } else {\n            return result;\n        }\n    },\n\n    loadString: async function (path, options) {\n        options = options || {};\n        if (path instanceof File) {\n            return loadStringFromFile$1(path, options);\n        } else {\n            return loadStringFromUrl$1(path, options);\n        }\n    }\n};\n\nasync function load$1(url, options) {\n\n    options = options || {};\n    const urlType = typeof url;\n\n    // Resolve functions, promises, and functions that return promises\n    url = await (typeof url === 'function' ? url() : url);\n\n    if (url instanceof File) {\n        return loadFileSlice$1(url, options);\n    } else if (typeof url.startsWith === 'function') {   // Test for string\n        if (url.startsWith(\"data:\")) {\n            return decodeDataURI$1(url)\n        } else {\n            if (url.startsWith(\"https://drive.google.com\")) {\n                url = driveDownloadURL$1(url);\n            }\n            if (isGoogleDriveURL$1(url) || url.startsWith(\"https://www.dropbox.com\")) {\n                return googleThrottle$1.add(async function () {\n                    return loadURL$1(url, options)\n                })\n            } else {\n                return loadURL$1(url, options);\n            }\n        }\n    } else {\n        throw Error(`url must be either a 'File', 'string', 'function', or 'Promise'.  Actual type: ${urlType}`);\n    }\n}\n\nasync function loadURL$1(url, options) {\n\n    //console.log(`${Date.now()}   ${url}`)\n    url = mapUrl$1(url);\n\n    options = options || {};\n\n    let oauthToken = options.oauthToken || getOauthToken$1(url);\n    if (oauthToken) {\n        oauthToken = await (typeof oauthToken === 'function' ? oauthToken() : oauthToken);\n    }\n\n    return new Promise(function (resolve, reject) {\n\n        // Various Google tansformations\n        if (isGoogleURL$1(url)) {\n            if (isGoogleStorageURL$1(url)) {\n                url = translateGoogleCloudURL$1(url);\n            }\n            url = addApiKey$1(url);\n\n            if (isGoogleDriveURL$1(url)) {\n                addTeamDrive$1(url);\n            }\n\n            // If we have an access token try it, but don't force a signIn or request for scopes yet\n            if (!oauthToken) {\n                oauthToken = getCurrentGoogleAccessToken$1();\n            }\n        }\n\n        const headers = options.headers || {};\n        if (oauthToken) {\n            addOauthHeaders$1(headers, oauthToken);\n        }\n        const range = options.range;\n        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n        navigator.vendor.indexOf(\"Apple\") === 0 && /\\sSafari\\//.test(navigator.userAgent);\n\n        if (range && isChrome && !isAmazonV4Signed$1(url)) {\n            // Hack to prevent caching for byte-ranges. Attempt to fix net:err-cache errors in Chrome\n            url += url.includes(\"?\") ? \"&\" : \"?\";\n            url += \"someRandomSeed=\" + Math.random().toString(36);\n        }\n\n        const xhr = new XMLHttpRequest();\n        const sendData = options.sendData || options.body;\n        const method = options.method || (sendData ? \"POST\" : \"GET\");\n        const responseType = options.responseType;\n        const contentType = options.contentType;\n        const mimeType = options.mimeType;\n\n        xhr.open(method, url);\n\n        if (range) {\n            var rangeEnd = range.size ? range.start + range.size - 1 : \"\";\n            xhr.setRequestHeader(\"Range\", \"bytes=\" + range.start + \"-\" + rangeEnd);\n            //      xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");    <= This can cause CORS issues, disabled for now\n        }\n        if (contentType) {\n            xhr.setRequestHeader(\"Content-Type\", contentType);\n        }\n        if (mimeType) {\n            xhr.overrideMimeType(mimeType);\n        }\n        if (responseType) {\n            xhr.responseType = responseType;\n        }\n        if (headers) {\n            for (let key of Object.keys(headers)) {\n                const value = headers[key];\n                xhr.setRequestHeader(key, value);\n            }\n        }\n\n        // NOTE: using withCredentials with servers that return \"*\" for access-allowed-origin will fail\n        if (options.withCredentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.onload = async function (event) {\n            // when the url points to a local file, the status is 0 but that is not an error\n            if (xhr.status === 0 || (xhr.status >= 200 && xhr.status <= 300)) {\n                if (range && xhr.status !== 206 && range.start !== 0) {\n                    // For small files a range starting at 0 can return the whole file => 200\n                    // Provide just the slice we asked for, throw out the rest quietly\n                    // If file is large warn user\n                    if (xhr.response.length > 100000 && !RANGE_WARNING_GIVEN$1) {\n                        alert(`Warning: Range header ignored for URL: ${url}.  This can have performance impacts.`);\n                    }\n                    resolve(xhr.response.slice(range.start, range.start + range.size));\n\n                } else {\n                    resolve(xhr.response);\n                }\n            } else if ((typeof gapi !== \"undefined\") &&\n                ((xhr.status === 404 || xhr.status === 401 || xhr.status === 403) &&\n                    isGoogleURL$1(url)) &&\n                !options.retries) {\n                tryGoogleAuth();\n\n            } else {\n                if (xhr.status === 403) {\n                    handleError(\"Access forbidden: \" + url);\n                } else if (xhr.status === 416) {\n                    //  Tried to read off the end of the file.   This shouldn't happen, but if it does return an\n                    handleError(\"Unsatisfiable range\");\n                } else {\n                    handleError(xhr.status);\n                }\n            }\n        };\n\n        xhr.onerror = function (event) {\n            if (isGoogleURL$1(url) && !options.retries) {\n                tryGoogleAuth();\n            }\n            handleError(\"Error accessing resource: \" + url + \" Status: \" + xhr.status);\n        };\n\n        xhr.ontimeout = function (event) {\n            handleError(\"Timed out\");\n        };\n\n        xhr.onabort = function (event) {\n            reject(event);\n        };\n\n        try {\n            xhr.send(sendData);\n        } catch (e) {\n            reject(e);\n        }\n\n\n        function handleError(error) {\n            if (reject) {\n                reject(error);\n            } else {\n                throw error;\n            }\n        }\n\n        async function tryGoogleAuth() {\n            try {\n                const accessToken = await fetchGoogleAccessToken$1(url);\n                options.retries = 1;\n                options.oauthToken = accessToken;\n                const response = await load$1(url, options);\n                resolve(response);\n            } catch (e) {\n                if (e.error) {\n                    const msg = e.error.startsWith(\"popup_blocked\") ?\n                        \"Google login popup blocked by browser.\" :\n                        e.error;\n                    alert(msg);\n                } else {\n                    handleError(e);\n                }\n            }\n        }\n    })\n\n}\n\nasync function loadFileSlice$1(localfile, options) {\n\n    let blob = (options && options.range) ?\n        localfile.slice(options.range.start, options.range.start + options.range.size) :\n        localfile;\n\n    if (\"arraybuffer\" === options.responseType) {\n        return blobToArrayBuffer$1(blob);\n    } else {\n        // binary string format, shouldn't be used anymore\n        return new Promise(function (resolve, reject) {\n            const fileReader = new FileReader();\n            fileReader.onload = function (e) {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = function (e) {\n                console.error(\"reject uploading local file \" + localfile.name);\n                reject(null, fileReader);\n            };\n            fileReader.readAsBinaryString(blob);\n            console.warn(\"Deprecated method used: readAsBinaryString\");\n        })\n    }\n}\n\nasync function loadStringFromFile$1(localfile, options) {\n\n    const blob = options.range ? localfile.slice(options.range.start, options.range.start + options.range.size) : localfile;\n    let compression = NONE$1;\n    if (options && options.bgz || localfile.name.endsWith(\".bgz\")) {\n        compression = BGZF$1;\n    } else if (localfile.name.endsWith(\".gz\")) {\n        compression = GZIP$1;\n    }\n\n    if (compression === NONE$1) {\n        return blobToText$1(blob);\n    } else {\n        const arrayBuffer = await blobToArrayBuffer$1(blob);\n        return arrayBufferToString$1(arrayBuffer, compression);\n    }\n}\n\nasync function blobToArrayBuffer$1(blob) {\n    if (typeof blob.arrayBuffer === 'function') {\n        return blob.arrayBuffer();\n    }\n    return new Promise(function (resolve, reject) {\n        const fileReader = new FileReader();\n        fileReader.onload = function (e) {\n            resolve(fileReader.result);\n        };\n        fileReader.onerror = function (e) {\n            console.error(\"reject uploading local file \" + localfile.name);\n            reject(null, fileReader);\n        };\n        fileReader.readAsArrayBuffer(blob);\n    })\n}\n\nasync function blobToText$1(blob) {\n    if (typeof blob.text === 'function') {\n        return blob.text();\n    }\n    return new Promise(function (resolve, reject) {\n        const fileReader = new FileReader();\n        fileReader.onload = function (e) {\n            resolve(fileReader.result);\n        };\n        fileReader.onerror = function (e) {\n            console.error(\"reject uploading local file \" + localfile.name);\n            reject(null, fileReader);\n        };\n        fileReader.readAsText(blob);\n    })\n}\n\nasync function loadStringFromUrl$1(url, options) {\n\n    options = options || {};\n\n    const fn = options.filename || await getFilename$2(url);\n    let compression = UNKNOWN$1;\n    if (options.bgz) {\n        compression = BGZF$1;\n    } else if (fn.endsWith(\".gz\")) {\n        compression = GZIP$1;\n    }\n\n    options.responseType = \"arraybuffer\";\n    const data = await igvxhr$1.load(url, options);\n    return arrayBufferToString$1(data, compression);\n}\n\n\nfunction isAmazonV4Signed$1(url) {\n    return url.indexOf(\"X-Amz-Signature\") > -1;\n}\n\nfunction getOauthToken$1(url) {\n\n    // Google is the default provider, don't try to parse host for google URLs\n    const host = isGoogleURL$1(url) ?\n        undefined :\n        parseUri$1(url).host;\n    let token = oauth$1.getToken(host);\n    if (token) {\n        return token;\n    } else if (host === undefined) {\n        const googleToken = getCurrentGoogleAccessToken$1();\n        if (googleToken && googleToken.expires_at > Date.now()) {\n            return googleToken.access_token;\n        }\n    }\n}\n\n/**\n * Return a Google oAuth token, triggering a sign in if required.   This method should not be called until we know\n * a token is required, that is until we've tried the url and received a 401, 403, or 404.\n *\n * @param url\n * @returns the oauth token\n */\nasync function fetchGoogleAccessToken$1(url) {\n    if (isInitialized$1()) {\n        const scope = getScopeForURL$1(url);\n        const googleToken = await getAccessToken$1(scope);\n        return googleToken ? googleToken.access_token : undefined;\n    } else {\n        throw Error(\n            `Authorization is required, but Google oAuth has not been initalized. Contact your site administrator for assistance.`)\n    }\n}\n\n/**\n * Return the current google access token, if one exists.  Do not triger signOn or request additional scopes.\n * @returns {undefined|access_token}\n */\nfunction getCurrentGoogleAccessToken$1() {\n    if (isInitialized$1()) {\n        const googleToken = getCurrentAccessToken$1();\n        return googleToken ? googleToken.access_token : undefined;\n    } else {\n        return undefined;\n    }\n}\n\nfunction addOauthHeaders$1(headers, acToken) {\n    if (acToken) {\n        headers[\"Cache-Control\"] = \"no-cache\";\n        headers[\"Authorization\"] = \"Bearer \" + acToken;\n    }\n    return headers;\n}\n\n\nfunction addApiKey$1(url) {\n    let apiKey = igvxhr$1.apiKey;\n    if (!apiKey && typeof gapi !== \"undefined\") {\n        apiKey = gapi.apiKey;\n    }\n    if (apiKey !== undefined && !url.includes(\"key=\")) {\n        const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n        url = url + paramSeparator + \"key=\" + apiKey;\n    }\n    return url;\n}\n\nfunction addTeamDrive$1(url) {\n    if (url.includes(\"supportsTeamDrive\")) {\n        return url;\n    } else {\n        const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n        url = url + paramSeparator + \"supportsTeamDrive=true\";\n    }\n}\n\n/**\n * Perform some well-known url mappings.\n * @param url\n */\nfunction mapUrl$1(url) {\n\n    if (url.includes(\"//www.dropbox.com\")) {\n        return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n    } else if (url.includes(\"//drive.google.com\")) {\n        return driveDownloadURL$1(url);\n    } else if (url.includes(\"//www.broadinstitute.org/igvdata\")) {\n        return url.replace(\"//www.broadinstitute.org/igvdata\", \"//data.broadinstitute.org/igvdata\");\n    } else if (url.includes(\"//igvdata.broadinstitute.org\")) {\n        return url.replace(\"//igvdata.broadinstitute.org\", \"https://dn7ywbm9isq8j.cloudfront.net\")\n    } else if (url.startsWith(\"ftp://ftp.ncbi.nlm.nih.gov/geo\")) {\n        return url.replace(\"ftp://\", \"https://\")\n    } else {\n        return url;\n    }\n}\n\n\nfunction arrayBufferToString$1(arraybuffer, compression) {\n\n    if (compression === UNKNOWN$1 && arraybuffer.byteLength > 2) {\n        const m = new Uint8Array(arraybuffer, 0, 2);\n        if (m[0] === 31 && m[1] === 139) {\n            compression = GZIP$1;\n        }\n    }\n\n    let plain;\n    if (compression === GZIP$1) {\n        const inflate = new Zlib$1.Gunzip(new Uint8Array(arraybuffer));\n        plain = inflate.decompress();\n    } else if (compression === BGZF$1) {\n        plain = unbgzf$1(arraybuffer);\n    } else {\n        plain = new Uint8Array(arraybuffer);\n    }\n\n    if ('TextDecoder' in getGlobalObject$1()) {\n        return new TextDecoder().decode(plain);\n    } else {\n        return decodeUTF8$1(plain);\n    }\n}\n\n/**\n * Use when TextDecoder is not available (primarily IE).\n *\n * From: https://gist.github.com/Yaffle/5458286\n *\n * @param octets\n * @returns {string}\n */\nfunction decodeUTF8$1(octets) {\n    var string = \"\";\n    var i = 0;\n    while (i < octets.length) {\n        var octet = octets[i];\n        var bytesNeeded = 0;\n        var codePoint = 0;\n        if (octet <= 0x7F) {\n            bytesNeeded = 0;\n            codePoint = octet & 0xFF;\n        } else if (octet <= 0xDF) {\n            bytesNeeded = 1;\n            codePoint = octet & 0x1F;\n        } else if (octet <= 0xEF) {\n            bytesNeeded = 2;\n            codePoint = octet & 0x0F;\n        } else if (octet <= 0xF4) {\n            bytesNeeded = 3;\n            codePoint = octet & 0x07;\n        }\n        if (octets.length - i - bytesNeeded > 0) {\n            var k = 0;\n            while (k < bytesNeeded) {\n                octet = octets[i + k + 1];\n                codePoint = (codePoint << 6) | (octet & 0x3F);\n                k += 1;\n            }\n        } else {\n            codePoint = 0xFFFD;\n            bytesNeeded = octets.length - i;\n        }\n        string += String.fromCodePoint(codePoint);\n        i += bytesNeeded + 1;\n    }\n    return string\n}\n\n\nfunction getGlobalObject$1() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    } else {\n        return window;\n    }\n}\n\nasync function getFilename$2(url) {\n    if (isString$1(url) && url.startsWith(\"https://drive.google.com\")) {\n        // This will fail if Google API key is not defined\n        if (getApiKey$1() === undefined) {\n            throw Error(\"Google drive is referenced, but API key is not defined.  An API key is required for Google Drive access\");\n        }\n        const json = await getDriveFileInfo$1(url);\n        return json.originalFileName || json.name;\n    } else {\n        return getFilename$3(url);\n    }\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** An implementation of an interval tree, following the explanation.\n * from CLR.\n *\n * Public interface:\n *   Constructor  IntervalTree\n *   Insertion    insert\n *   Search       findOverlapping\n */\n\nvar BLACK$1 = 1;\n\nvar NIL$1 = {};\nNIL$1.color = BLACK$1;\nNIL$1.parent = NIL$1;\nNIL$1.left = NIL$1;\nNIL$1.right = NIL$1;\n\nconst httpMessages =\n    {\n        \"401\": \"Access unauthorized\",\n        \"403\": \"Access forbidden\",\n        \"404\": \"Not found\"\n    };\n\n\nclass AlertDialog {\n    constructor(parent) {\n\n        // container\n        this.container = div({class: \"igv-ui-alert-dialog-container\"});\n        parent.appendChild(this.container);\n        this.container.setAttribute('tabIndex', '-1');\n\n        // header\n        const header = div();\n        this.container.appendChild(header);\n\n        this.errorHeadline = div();\n        header.appendChild(this.errorHeadline);\n        this.errorHeadline.textContent = '';\n\n        // body container\n        let bodyContainer = div({id: 'igv-ui-alert-dialog-body'});\n        this.container.appendChild(bodyContainer);\n\n        // body copy\n        this.body = div({id: 'igv-ui-alert-dialog-body-copy'});\n        bodyContainer.appendChild(this.body);\n\n        // ok container\n        let ok_container = div();\n        this.container.appendChild(ok_container);\n\n        // ok\n        this.ok = div();\n        ok_container.appendChild(this.ok);\n        this.ok.textContent = 'OK';\n\n        const okHandler = () => {\n\n            if (typeof this.callback === 'function') {\n                this.callback(\"OK\");\n                this.callback = undefined;\n            }\n            this.body.innerHTML = '';\n            hide(this.container);\n        };\n\n        this.ok.addEventListener('click', event => {\n\n            event.stopPropagation();\n\n            okHandler();\n        });\n\n        this.container.addEventListener('keypress', event => {\n\n            event.stopPropagation();\n\n            if ('Enter' === event.key) {\n                okHandler();\n            }\n        });\n\n        makeDraggable(this.container, header);\n\n        hide(this.container);\n    }\n\n    present(alert, callback) {\n\n        this.errorHeadline.textContent = alert.message ? 'ERROR' : '';\n        let string = alert.message || alert;\n\n        if (httpMessages.hasOwnProperty(string)) {\n            string = httpMessages[string];\n        }\n\n        this.body.innerHTML = string;\n        this.callback = callback;\n        show(this.container);\n        this.container.focus();\n    }\n}\n\nclass AlertSingleton {\n    constructor(root) {\n\n        if (root) {\n            this.alertDialog = undefined;\n        }\n    }\n\n    init(root) {\n        this.alertDialog = new AlertDialog(root);\n    }\n\n    present(alert, callback) {\n        this.alertDialog.present(alert, callback);\n    }\n\n}\n\nvar AlertSingleton$1 = new AlertSingleton();\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nclass FileLoadManager {\n\n    constructor () {\n        this.dictionary = {};\n    }\n\n    inputHandler (path, isIndexFile) {\n        this.ingestPath(path, isIndexFile);\n    }\n\n    ingestPath (path, isIndexFile) {\n        let key = true === isIndexFile ? 'index' : 'data';\n\n        this.dictionary[ key ] = path.trim();\n    }\n\n    didDragDrop (dataTransfer) {\n        var files;\n\n        files = dataTransfer.files;\n\n        return (files && files.length > 0);\n    }\n\n    dragDropHandler (dataTransfer, isIndexFile) {\n        var url,\n            files;\n\n        url = dataTransfer.getData('text/uri-list');\n        files = dataTransfer.files;\n\n        if (files && files.length > 0) {\n            this.ingestPath(files[ 0 ], isIndexFile);\n        } else if (url && '' !== url) {\n            this.ingestPath(url, isIndexFile);\n        }\n\n    }\n\n    indexName () {\n        return itemName(this.dictionary.index);\n    }\n\n    dataName () {\n        return itemName(this.dictionary.data);\n    }\n\n    reset () {\n        this.dictionary = {};\n    }\n\n}\n\nfunction itemName (item) {\n    return isFilePath(item) ? item.name : item;\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nclass FileLoadWidget {\n\n    constructor({ widgetParent, dataTitle, indexTitle, mode, fileLoadManager, dataOnly, doURL }) {\n\n        dataTitle = dataTitle || 'Data';\n\n        indexTitle = indexTitle || 'Index';\n\n        this.fileLoadManager = fileLoadManager;\n\n        dataOnly = dataOnly || false;\n\n        // TODO: Remove?\n        doURL = doURL || false;\n\n        // file load widget\n        this.container = div({ class: 'igv-file-load-widget-container'});\n        widgetParent.appendChild(this.container);\n\n        let config;\n        if ('localFile' === mode) {\n            // local data/index\n            config =\n                {\n                    parent: this.container,\n                    doURL: false,\n                    dataTitle: dataTitle + ' file',\n                    indexTitle: indexTitle + ' file',\n                    dataOnly\n                };\n        } else {\n\n            // url data/index\n            config =\n                {\n                    parent: this.container,\n                    doURL: true,\n                    dataTitle: dataTitle + ' URL',\n                    indexTitle: indexTitle + ' URL',\n                    dataOnly\n                };\n        }\n\n        this.createInputContainer(config);\n\n        // error message container\n        this.error_message = div({ class: 'igv-flw-error-message-container'});\n        this.container.appendChild(this.error_message);\n\n        // error message\n        this.error_message.appendChild(div({ class: 'igv-flw-error-message'}));\n\n        // error dismiss button\n        attachDialogCloseHandlerWithParent(this.error_message, () => {\n            this.dismissErrorMessage();\n        });\n\n        this.dismissErrorMessage();\n\n    }\n\n    retrievePaths() {\n\n        this.fileLoadManager.ingestPath(this.inputData.value, false);\n        if (this.inputIndex) {\n            this.fileLoadManager.ingestPath(this.inputIndex.value, true);\n        }\n\n        let paths = [];\n        if (this.fileLoadManager.dictionary) {\n\n            if (this.fileLoadManager.dictionary.data) {\n                paths.push(this.fileLoadManager.dictionary.data);\n            }\n            if (this.fileLoadManager.dictionary.index) {\n                paths.push(this.fileLoadManager.dictionary.index);\n            }\n        }\n\n        // clear input elements\n        this.container.querySelectorAll('.igv-flw-input-row').forEach(div => {\n            div.querySelector('input').value = '';\n        });\n\n        return paths;\n\n    }\n\n    presentErrorMessage(message) {\n        this.error_message.querySelector('.igv-flw-error-message').textContent = message;\n        show(this.error_message);\n    }\n\n    dismissErrorMessage() {\n        hide(this.error_message);\n        this.error_message.querySelector('.igv-flw-error-message').textContent = '';\n    }\n\n    present() {\n        show(this.container);\n    }\n\n    dismiss() {\n\n        this.dismissErrorMessage();\n\n        // const e = this.container.querySelector('.igv-flw-local-file-name-container');\n        // if (e) {\n        //     DOMUtils.hide(e);\n        // }\n\n        // clear input elements\n        this.container.querySelectorAll('.igv-flw-input-row').forEach(div => {\n            div.querySelector('input').value = '';\n        });\n\n        this.fileLoadManager.reset();\n\n    }\n\n    createInputContainer({ parent, doURL, dataTitle, indexTitle, dataOnly }) {\n\n        // container\n        const container = div({ class: 'igv-flw-input-container' });\n        parent.appendChild(container);\n\n        // data\n        const input_data_row = div({ class: 'igv-flw-input-row' });\n        container.appendChild(input_data_row);\n\n        let label;\n\n        // label\n        label = div({ class: 'igv-flw-input-label' });\n        input_data_row.appendChild(label);\n        label.textContent = dataTitle;\n\n        if (true === doURL) {\n            this.createURLContainer(input_data_row, 'igv-flw-data-url', false);\n        } else {\n            this.createLocalFileContainer(input_data_row, 'igv-flw-local-data-file', false);\n        }\n\n        if (true === dataOnly) {\n            return;\n        }\n\n        // index\n        const input_index_row = div({ class: 'igv-flw-input-row' });\n        container.appendChild(input_index_row);\n\n        // label\n        label = div({ class: 'igv-flw-input-label' });\n        input_index_row.appendChild(label);\n        label.textContent = indexTitle;\n\n        if (true === doURL) {\n            this.createURLContainer(input_index_row, 'igv-flw-index-url', true);\n        } else {\n            this.createLocalFileContainer(input_index_row, 'igv-flw-local-index-file', true);\n        }\n\n    }\n\n    createURLContainer(parent, id, isIndexFile) {\n\n        const input = create('input');\n        input.setAttribute('type', 'text');\n        // input.setAttribute('placeholder', (true === isIndexFile ? 'Enter index URL' : 'Enter data URL'));\n        parent.appendChild(input);\n\n        if (isIndexFile) {\n            this.inputIndex = input;\n        } else {\n            this.inputData = input;\n        }\n\n    }\n\n    createLocalFileContainer(parent, id, isIndexFile) {\n\n        const file_chooser_container = div({ class: 'igv-flw-file-chooser-container'});\n        parent.appendChild(file_chooser_container);\n\n        const str = `${ id }${ guid() }`;\n\n        const label = create('label');\n        label.setAttribute('for', str);\n\n        file_chooser_container.appendChild(label);\n        label.textContent = 'Choose file';\n\n        const input = create('input', { class: 'igv-flw-file-chooser-input'});\n        input.setAttribute('id', str);\n        input.setAttribute('name', str);\n        input.setAttribute('type', 'file');\n        file_chooser_container.appendChild(input);\n\n        const file_name = div({ class: 'igv-flw-local-file-name-container' });\n        parent.appendChild(file_name);\n\n        hide(file_name);\n\n        input.addEventListener('change', e => {\n\n            this.dismissErrorMessage();\n\n            const file = e.target.files[ 0 ];\n            this.fileLoadManager.inputHandler(file, isIndexFile);\n\n            const { name } = file;\n            file_name.textContent = name;\n            file_name.setAttribute('title', name);\n            show(file_name);\n        });\n\n    }\n\n}\n\n/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nfunction getIndexObjectWithDataName  (name) {\n    let extension,\n        dataSuffix,\n        lookup,\n        indexObject,\n        aa;\n\n    extension = getExtension(name);\n\n    if (false === isKnownFileExtension(extension)) {\n        return undefined;\n    }\n\n    dataSuffix = name.split('.').pop();\n\n    lookup = indexLookup(dataSuffix);\n\n    indexObject = {};\n\n    // aa\n    aa = name + '.' + lookup.index;\n\n    indexObject[aa] = {};\n    indexObject[aa].data = name;\n    indexObject[aa].isOptional = lookup.isOptional;\n\n\n    if ('bam' === extension || 'cram' === extension) {\n        let bb,\n            parts;\n\n        // bb\n        parts = name.split('.');\n        parts.pop();\n        bb = parts.join('.') + '.' + lookup.index;\n\n        indexObject[bb] = {};\n        indexObject[bb].data = name;\n        indexObject[bb].isOptional = lookup.isOptional;\n    }\n\n    return indexObject;\n}\nfunction isKnownFileExtension  (extension)  {\n    let fasta = new Set(['fa', 'fasta']);\n    let union = new Set([...(knownFileExtensions), ...fasta]);\n    return union.has(extension);\n}\nfunction configureModal  (fileLoadWidget, modal, okHandler) {\n\n    const doDismiss = () => {\n        fileLoadWidget.dismiss();\n        $(modal).modal('hide');\n    };\n\n    const doOK = async () => {\n\n        const result = await okHandler(fileLoadWidget);\n\n        if (true === result) {\n            fileLoadWidget.dismiss();\n            $(modal).modal('hide');\n        }\n    };\n\n    let dismiss;\n\n    // upper dismiss - x - button\n    dismiss = modal.querySelector('.modal-header button');\n    dismiss.addEventListener('click', doDismiss);\n\n    // lower dismiss - close - button\n    dismiss = modal.querySelector('.modal-footer button:nth-child(1)');\n    dismiss.addEventListener('click', doDismiss);\n\n    // ok - button\n    const ok = modal.querySelector('.modal-footer button:nth-child(2)');\n\n    ok.addEventListener('click', doOK);\n\n    modal.addEventListener('keypress', event => {\n        if ('Enter' === event.key) {\n            doOK();\n        }\n    });\n}\nfunction indexLookup  (dataSuffix)  {\n\n    const fa =\n        {\n            index: 'fai',\n            isOptional: false\n        };\n\n    const fasta =\n        {\n            index: 'fai',\n            isOptional: false\n        };\n\n    const bam =\n        {\n            index: 'bai',\n            isOptional: false\n        };\n\n    const cram =\n        {\n            index: 'crai',\n            isOptional: false\n        };\n\n    const gz =\n        {\n            index: 'tbi',\n            isOptional: true\n        };\n\n    const bgz =\n        {\n            index: 'tbi',\n            isOptional: true\n        };\n\n    const any =\n        {\n            index: 'idx',\n            isOptional: true\n        };\n\n    const lut =\n        {\n            fa,\n            fasta,\n            bam,\n            cram,\n            gz,\n            bgz\n        };\n\n    if (lut[dataSuffix]) {\n        return lut[dataSuffix];\n    } else {\n        return any;\n    }\n\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getIndexObjectWithDataName: getIndexObjectWithDataName,\n    isKnownFileExtension: isKnownFileExtension,\n    configureModal: configureModal\n});\n\nclass FileLoad {\n\n    constructor({ localFileInput, dropboxButton, googleEnabled, googleDriveButton }) {\n\n        localFileInput.addEventListener('change', async () => {\n\n            if (true === FileLoad.isValidLocalFileInput(localFileInput)) {\n                await this.loadPaths( Array.from(localFileInput.files) );\n                localFileInput.value = '';\n            }\n\n        });\n\n        dropboxButton.addEventListener('click', () => {\n\n            const config =\n                {\n                    success: dbFiles => this.loadPaths( dbFiles.map(dbFile => dbFile.link) ),\n                    cancel: () => {},\n                    linkType: 'preview',\n                    multiselect: true,\n                    folderselect: false,\n                };\n\n            Dropbox.choose( config );\n\n        });\n\n\n        if (false === googleEnabled) {\n            hide(googleDriveButton.parentElement);\n        }\n\n        if (true === googleEnabled && googleDriveButton) {\n\n            googleDriveButton.addEventListener('click', () => {\n\n                createDropdownButtonPicker(true, async responses => await this.loadPaths(responses.map(({ url }) => url)));\n\n                // GooglePicker.createDropdownButtonPicker(true, responses => {\n                //\n                //     const paths = responses\n                //         .map(({ name, url }) => {\n                //             return {\n                //                 filename: name,\n                //                 name,\n                //                 google_url: GoogleUtils.driveDownloadURL(url)\n                //             };\n                //         });\n                //\n                //     this.loadPaths(paths);\n                // });\n\n            });\n\n        }\n\n    }\n\n    async loadPaths(paths) {\n        //console.log('FileLoad: loadPaths(...)');\n    }\n\n    static isValidLocalFileInput(input) {\n        return (input.files && input.files.length > 0);\n    }\n\n    static getIndexURL(indexValue) {\n\n        if (indexValue) {\n\n            if        (indexValue[ 0 ]) {\n                return indexValue[ 0 ].path;\n            } else if (indexValue[ 1 ]) {\n                return indexValue[ 1 ].path;\n            } else {\n                return undefined;\n            }\n\n        } else {\n            return undefined;\n        }\n\n    }\n\n    static getIndexPaths(dataPathNames, indexPathCandidates) {\n\n        // add info about presence and requirement (or not) of an index path\n        const list = Object.keys(dataPathNames)\n            .map(function (dataPathName) {\n                let indexObject;\n\n                // assess the data files need/requirement for index files\n                indexObject  = getIndexObjectWithDataName(dataPathName);\n\n                // identify the presence/absence of associated index files\n                for (let p in indexObject) {\n                    if (indexObject.hasOwnProperty(p)) {\n                        indexObject[ p ].missing = (undefined === indexPathCandidates[ p ]);\n                    }\n                }\n\n                return indexObject;\n            })\n            .filter(function (indexObject) {\n\n                // prune optional AND missing index files\n                if (1 === Object.keys(indexObject).length) {\n\n                    let obj;\n\n                    obj = indexObject[ Object.keys(indexObject)[ 0 ] ];\n                    if( true === obj.missing &&  true === obj.isOptional) {\n                        return false;\n                    } else if (false === obj.missing && false === obj.isOptional) {\n                        return true;\n                    } else if ( true === obj.missing && false === obj.isOptional) {\n                        return true;\n                    } else /*( false === obj.missing && true === obj.isOptional)*/ {\n                        return true;\n                    }\n\n                } else {\n                    return true;\n                }\n\n            });\n\n        return list.reduce(function(accumulator, indexObject) {\n\n            for (let key in indexObject) {\n\n                if (indexObject.hasOwnProperty(key)) {\n                    let value;\n\n                    value = indexObject[ key ];\n\n                    if (undefined === accumulator[ value.data ]) {\n                        accumulator[ value.data ] = [];\n                    }\n\n                    accumulator[ value.data ].push(((false === value.missing) ? { name: key, path: indexPathCandidates[ key ] } : undefined));\n                }\n            }\n\n            return accumulator;\n        }, {});\n\n    }\n\n}\n\n/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nclass MultipleTrackFileLoad {\n\n    constructor({ $localFileInput, $dropboxButton, $googleDriveButton, fileLoadHandler, multipleFileSelection }) {\n\n        this.fileLoadHandler = fileLoadHandler;\n\n        const localFileInput = $localFileInput.get(0);\n        const dropboxButton = $dropboxButton.get(0);\n        const googleDriveButton = $googleDriveButton ? $googleDriveButton.get(0) : undefined;\n\n        localFileInput.addEventListener('change', async () => {\n\n            if (true === MultipleTrackFileLoad.isValidLocalFileInput(localFileInput)) {\n                const { files } = localFileInput;\n                const paths = Array.from(files);\n                localFileInput.value = '';\n                await this.loadPaths(paths);\n            }\n\n        });\n\n        dropboxButton.addEventListener('click', async () => {\n\n            const obj =\n                {\n                    success: dbFiles => this.loadPaths(dbFiles.map(({link}) => link)),\n                    cancel: () => { },\n                    linkType: \"preview\",\n                    multiselect: multipleFileSelection,\n                    folderselect: false,\n                };\n\n            Dropbox.choose(obj);\n        });\n\n\n        if (googleDriveButton) {\n\n            googleDriveButton.addEventListener('click', () => {\n                createDropdownButtonPicker(multipleFileSelection, async responses => await this.loadPaths(responses.map(({ name, url }) => url)));\n            });\n\n        }\n\n    }\n\n    async loadPaths(paths) {\n        await ingestPaths({ paths, fileLoadHandler: this.fileLoadHandler });\n    }\n\n    static isValidLocalFileInput(input) {\n        return (input.files && input.files.length > 0)\n    }\n\n    static async getFilename(path ){\n\n        if (path instanceof File) {\n            return path.name\n        } else if (isGoogleDriveURL$1(path)) {\n            const info = await getDriveFileInfo$1(path);\n            return info.name || info.originalFileName\n        } else {\n            const result = parseUri$1(path);\n            return result.file;\n        }\n\n    }\n\n    static isGoogleDrivePath(path) {\n        return path instanceof File ? false : isGoogleDriveURL$1( path )\n    }\n\n}\n\nasync function ingestPaths({ paths, fileLoadHandler }) {\n    try {\n        await doIngestPaths({paths, fileLoadHandler});\n    } catch (e) {\n        console.error(e);\n        AlertSingleton$1.present(e.message);\n    }\n}\n\nconst indexExtensions = new Set(['bai', 'csi', 'tbi', 'idx', 'crai']);\n\nconst requireIndex = new Set(['bam', 'cram']);\n\nasync function doIngestPaths({paths, fileLoadHandler}) {\n\n    // Search for index files  (.bai, .csi, .tbi, .idx)\n    const indexLUT = new Map();\n\n    const dataPaths = [];\n    for(let path of paths) {\n\n        const name = await MultipleTrackFileLoad.getFilename(path);\n        const extension = getExtension(name);\n\n        if (indexExtensions.has(extension)) {\n\n            // key is the data file name\n            const key = createIndexLUTKey(name, extension);\n            indexLUT.set(key, { indexURL: path, indexFilename: MultipleTrackFileLoad.isGoogleDrivePath( path ) ? name : undefined });\n        } else {\n            dataPaths.push(path);\n        }\n\n    }\n\n    const configurations = [];\n\n    for(let dataPath of dataPaths) {\n\n        const name = await MultipleTrackFileLoad.getFilename(dataPath);\n\n        if (indexLUT.has(name)) {\n\n            const {indexURL, indexFilename} = indexLUT.get(name);\n            configurations.push({url: dataPath, name, indexURL, indexFilename });\n\n        } else if (requireIndex.has(getExtension(name))) {\n            throw new Error(`Unable to load track file ${ name } - you must select both ${ name } and its corresponding index file`)\n        } else {\n            configurations.push({ url: dataPath, name });\n        }\n\n    }\n\n    if (configurations) {\n        fileLoadHandler(configurations);\n    }\n\n}\n\nconst createIndexLUTKey = (name, extension) => {\n\n    let key = name.substring(0, name.length - (extension.length + 1));\n\n    // bam and cram files (.bai, .crai) have 2 conventions:\n    // <data>.bam.bai\n    // <data>.bai - we will support this one\n\n    if('bai' === extension && !key.endsWith('bam')) {\n        return `${ key }.bam`\n    } else if('crai' === extension && !key.endsWith('cram')) {\n        return `${ key }.cram`\n    } else {\n        return key\n    }\n\n};\n\nconst singleSet = new Set([ 'json' ]);\nconst indexSet = new Set(['fai']);\n\nclass GenomeFileLoad extends FileLoad {\n\n    constructor({ localFileInput, dropboxButton, googleEnabled, googleDriveButton, loadHandler }) {\n        super({ localFileInput, dropboxButton, googleEnabled, googleDriveButton });\n        this.loadHandler = loadHandler;\n    }\n\n    async loadPaths(paths) {\n\n        const status = await GenomeFileLoad.isGZip(paths);\n\n        if (status) {\n            AlertSingleton$1.present(new Error('Genome did not load - gzip file is not allowed'));\n        } else {\n\n            // If one of the paths is .json, unpack and send to loader\n            const single = paths.filter(path => singleSet.has( getExtension(path) ));\n\n            if (single.length >= 1) {\n                const json = await igvxhr$1.loadJson(single[ 0 ]);\n                this.loadHandler(json);\n            } else if (2 === paths.length) {\n\n                const [ _0, _1 ] = await GenomeFileLoad.getExtension(paths);\n\n                if (indexSet.has(_0)) {\n                    await this.loadHandler({ fastaURL: paths[ 1 ], indexURL: paths[ 0 ] });\n                } else if (indexSet.has(_1)) {\n                    await this.loadHandler({ fastaURL: paths[ 0 ], indexURL: paths[ 1 ] });\n                } else {\n                    AlertSingleton$1.present(new Error('Genome did not load - invalid data and/or index file'));\n                }\n\n            } else {\n                AlertSingleton$1.present(new Error('Genome did not load - invalid file'));\n            }\n\n        }\n\n\n    }\n\n    static async isGZip(paths) {\n\n        for (let path of paths) {\n            const filename = await MultipleTrackFileLoad.getFilename(path);\n            if (true === filename.endsWith('.gz')) {\n                return true\n            }\n        }\n\n        return false\n    }\n\n    static async getExtension(paths) {\n\n        const a = await MultipleTrackFileLoad.getFilename(paths[ 0 ]);\n        const b = await MultipleTrackFileLoad.getFilename(paths[ 1 ]);\n\n        return [a, b].map(name => getExtension(name))\n\n    }\n\n\n}\n\nclass SessionFileLoad extends FileLoad {\n\n    constructor({ localFileInput, dropboxButton, googleEnabled, googleDriveButton, loadHandler }) {\n        super({ localFileInput, dropboxButton, googleEnabled, googleDriveButton });\n        this.loadHandler = loadHandler;\n    }\n\n    async loadPaths(paths) {\n\n        const path = paths[ 0 ];\n        if ('json' === getExtension(path)) {\n            const json = await igvxhr$1.loadJson((path.google_url || path));\n            this.loadHandler(json);\n        } else if ('xml' === getExtension(path)) {\n\n            const key = true === isFilePath(path) ? 'file' : 'url';\n            const o = {};\n            o[ key ] = path;\n\n            this.loadHandler(o);\n        }\n\n    };\n\n}\n\n/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nclass SessionController {\n\n    constructor({ prefix, sessionLoadModal, sessionSaveModal, sessionFileLoad, JSONProvider}) {\n\n        let config =\n            {\n                widgetParent: sessionLoadModal.querySelector('.modal-body'),\n                dataTitle: 'Load Session',\n                indexTitle: undefined,\n                mode: 'url',\n                fileLoadManager: new FileLoadManager(),\n                dataOnly: true,\n                doURL: undefined\n            };\n\n        this.urlWidget = new FileLoadWidget(config);\n\n        // Configure load session modal\n        configureModal(this.urlWidget, sessionLoadModal, async fileLoadWidget => {\n            await sessionFileLoad.loadPaths(fileLoadWidget.retrievePaths());\n            return true;\n        });\n\n        // Configure save session modal\n        configureSaveSessionModal$1(prefix, JSONProvider, sessionSaveModal);\n\n    }\n\n}\n\n\nfunction configureSaveSessionModal$1(prefix, JSONProvider, sessionSaveModal) {\n\n    let input = sessionSaveModal.querySelector('input');\n\n    let okHandler = () => {\n\n        const extensions = new Set(['json', 'xml']);\n\n        let filename = input.value;\n\n        if (undefined === filename || '' === filename) {\n            filename = input.getAttribute('placeholder');\n        } else if (false === extensions.has(getExtension(filename))) {\n            filename = filename + '.json';\n        }\n\n        const json = JSONProvider();\n        const jsonString = JSON.stringify(json, null, '\\t');\n        const data = URL.createObjectURL(new Blob([jsonString], {type: \"application/octet-stream\"}));\n\n        download(filename, data);\n\n        $(sessionSaveModal).modal('hide');\n    };\n\n    const $ok = $(sessionSaveModal).find('.modal-footer button:nth-child(2)');\n    $ok.on('click', okHandler);\n\n    $(sessionSaveModal).on('show.bs.modal', (e) => {\n        input.value = `${ prefix }-session.json`;\n    });\n\n    input.addEventListener('keyup', e => {\n\n        // enter key key-up\n        if (13 === e.keyCode) {\n            okHandler();\n        }\n    });\n\n}\n\nconst createURLModal = (id, title) => {\n\n    const html =\n        `<div id=\"${ id }\" class=\"modal\">\n\n            <div class=\"modal-dialog modal-lg\">\n    \n                <div class=\"modal-content\">\n    \n                    <div class=\"modal-header\">\n                        <div class=\"modal-title\">${ title }</div>\n    \n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                            <span>&times;</span>\n                        </button>\n    \n                    </div>\n    \n                    <div class=\"modal-body\">\n                    </div>\n    \n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">OK</button>\n                    </div>\n    \n                </div>\n    \n            </div>\n\n        </div>`;\n\n    return html;\n};\n\nlet fileLoadWidget$1;\n\nfunction createSessionWidgets($rootContainer,\n                              prefix,\n                              localFileInputId,\n                              dropboxButtonId,\n                              googleDriveButtonId,\n                              urlModalId,\n                              sessionSaveModalId,\n                              googleEnabled,\n                              loadHandler,\n                              JSONProvider) {\n\n    const $urlModal = $(createURLModal(urlModalId, 'Session URL'));\n    $rootContainer.append($urlModal);\n\n    if (!googleEnabled) {\n        $(`#${googleDriveButtonId}`).parent().hide();\n    }\n\n    const fileLoadWidgetConfig =\n        {\n            widgetParent: $urlModal.find('.modal-body').get(0),\n            dataTitle: 'Session',\n            indexTitle: undefined,\n            mode: 'url',\n            fileLoadManager: new FileLoadManager(),\n            dataOnly: true,\n            doURL: undefined\n        };\n\n    fileLoadWidget$1 = new FileLoadWidget(fileLoadWidgetConfig);\n\n    const sessionFileLoadConfig =\n        {\n            localFileInput: document.querySelector(`#${localFileInputId}`),\n            dropboxButton: document.querySelector(`#${dropboxButtonId}`),\n            googleEnabled,\n            googleDriveButton: document.querySelector(`#${googleDriveButtonId}`),\n            loadHandler\n        };\n\n    const sessionFileLoad = new SessionFileLoad(sessionFileLoadConfig);\n\n    configureModal(fileLoadWidget$1, $urlModal.get(0), async fileLoadWidget => {\n        await sessionFileLoad.loadPaths(fileLoadWidget.retrievePaths());\n        return true;\n    });\n\n    configureSaveSessionModal($rootContainer, prefix, JSONProvider, sessionSaveModalId);\n\n}\n\nfunction configureSaveSessionModal($rootContainer, prefix, JSONProvider, sessionSaveModalId) {\n\n    const modal =\n        `<div id=\"${sessionSaveModalId}\" class=\"modal fade igv-app-file-save-modal\">\n\n            <div class=\"modal-dialog modal-lg\">\n    \n                <div class=\"modal-content\">\n    \n                    <div class=\"modal-header\">\n    \n                        <div class=\"modal-title\">\n                            <div>\n                                Save Session File\n                            </div>\n                        </div>\n    \n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n    \n                    <div class=\"modal-body\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"igv-app-session.json\">\n    \n                        <div>\n                            Enter session filename with .json suffix\n                        </div>\n    \n                    </div>\n    \n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-sm btn-secondary\">OK</button>\n                    </div>\n    \n                </div>\n    \n            </div>\n    \n        </div>`;\n\n    const $modal = $(modal);\n    $rootContainer.append($modal);\n\n    let $input = $modal.find('input');\n\n    let okHandler = () => {\n\n        const extensions = new Set(['json', 'xml']);\n\n        let filename = $input.val();\n\n        if (undefined === filename || '' === filename) {\n            filename = $input.attr('placeholder');\n        } else if (false === extensions.has(getExtension(filename))) {\n            filename = filename + '.json';\n        }\n\n        const json = JSONProvider();\n\n        if (json) {\n            const jsonString = JSON.stringify(json, null, '\\t');\n            const data = URL.createObjectURL(new Blob([jsonString], {type: \"application/octet-stream\"}));\n            download(filename, data);\n        }\n\n        $modal.modal('hide');\n    };\n\n    const $ok = $modal.find('.modal-footer button:nth-child(2)');\n    $ok.on('click', okHandler);\n\n    $modal.on('show.bs.modal', (e) => {\n        $input.val(`${prefix}-session.json`);\n    });\n\n    $input.on('keyup', e => {\n\n        // enter key\n        if (13 === e.keyCode) {\n            okHandler();\n        }\n    });\n\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst getDataWrapper = function (data) {\n\n    if (typeof(data) == 'string' || data instanceof String) {\n        return new StringDataWrapper(data);\n    } else {\n        return new ByteArrayDataWrapper(data);\n    }\n};\n\n\n// Data might be a string, or an UInt8Array\nvar StringDataWrapper = function (string) {\n    this.data = string;\n    this.ptr = 0;\n};\n\nStringDataWrapper.prototype.nextLine = function () {\n    //return this.split(/\\r\\n|\\n|\\r/gm);\n    var start = this.ptr,\n        idx = this.data.indexOf('\\n', start);\n\n    if (idx > 0) {\n        this.ptr = idx + 1;   // Advance pointer for next line\n        return idx === start ? undefined : this.data.substring(start, idx).trim();\n    }\n    else {\n        // Last line\n        this.ptr = this.data.length;\n        return (start >= this.data.length) ? undefined : this.data.substring(start).trim();\n    }\n};\n\n// For use in applications where whitespace carries meaning\n// Returns \"\" for an empty row (not undefined like nextLine), since this is needed in AED\nStringDataWrapper.prototype.nextLineNoTrim = function () {\n    var start = this.ptr,\n        idx = this.data.indexOf('\\n', start),\n        data = this.data;\n\n    if (idx > 0) {\n        this.ptr = idx + 1;   // Advance pointer for next line\n        if (idx > start && data.charAt(idx - 1) === '\\r') {\n            // Trim CR manually in CR/LF sequence\n            return data.substring(start, idx - 1);\n        }\n        return data.substring(start, idx);\n    }\n    else {\n        var length = data.length;\n        this.ptr = length;\n        // Return undefined only at the very end of the data\n        return (start >= length) ? undefined : data.substring(start);\n    }\n};\n\nvar ByteArrayDataWrapper = function (array) {\n    this.data = array;\n    this.length = this.data.length;\n    this.ptr = 0;\n};\n\nByteArrayDataWrapper.prototype.nextLine = function () {\n\n    var c, result;\n    result = \"\";\n\n    if (this.ptr >= this.length) return undefined;\n\n    for (var i = this.ptr; i < this.length; i++) {\n        c = String.fromCharCode(this.data[i]);\n        if (c === '\\r') continue;\n        if (c === '\\n') break;\n        result = result + c;\n    }\n\n    this.ptr = i + 1;\n    return result;\n};\n\n// The ByteArrayDataWrapper does not do any trimming by default, can reuse the function\nByteArrayDataWrapper.prototype.nextLineNoTrim = ByteArrayDataWrapper.prototype.nextLine;\n\n/**\n * @fileoverview Zlib namespace. Zlib の仕様に準拠した圧縮は Zlib.Deflate で実装\n * されている. これは Inflate との共存を考慮している為.\n */\nconst ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE = 65000;\n\nvar Zlib = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if (input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n        (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n        (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n            key,\n            i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n        // local file header\n        30 + filenameLength +\n        // file data\n        file.buffer.length;\n\n    centralDirectorySize +=\n        // file header\n        46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new (Uint8Array )(\n      localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n        file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n        file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n        /** @type {Zlib.Zip.OperatingSystem} */\n        (file.option['os']) ||\n        Zlib.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n        /** @type {Zlib.Zip.CompressionMethod} */\n        (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n        ((date.getMinutes() & 0x7) << 5) |\n        (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n        (date.getHours()   << 3) |\n        (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n        ((date.getMonth() + 1 & 0x7) << 5) |\n        (date.getDate());\n    output[op1++] = output[op2++] =\n        ((date.getFullYear() - 1980 & 0x7f) << 1) |\n        (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      {\n        output.set(comment, op2);\n        op2 += commentLength;\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib.CRC32.single(key[0], n);\n  key[1] =\n      (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new (Uint32Array )(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.op = Zlib.RawInflate.MaxBackwardLength;\n      this.output =\n          new (Uint8Array )(\n              Zlib.RawInflate.MaxBackwardLength +\n              this.bufferSize +\n              Zlib.RawInflate.MaxCopyLength\n          );\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new (Uint8Array )(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.Order = (function(table) {\n  return new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.LengthCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.LengthExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.DistCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.DistExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n      // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n      // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n      // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n      // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n          Zlib.RawInflate.FixedLiteralLengthTable,\n          Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n          Zlib.RawInflate.FixedLiteralLengthTable,\n          Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n      new (Uint8Array )(Zlib.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable(codeLengths);\n  lengthTable = new (Uint8Array )(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable = buildHuffmanTable(lengthTable.subarray(0, hlit))\n      ;\n  distTable = buildHuffmanTable(lengthTable.subarray(hlit))\n      ;\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n      new (Uint8Array )(\n          this.op - Zlib.RawInflate.MaxBackwardLength\n      );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n\n  var output = this.output;\n\n  // copy to output buffer\n  {\n    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  {\n    output.set(\n        output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength)\n    );\n  }\n\n  this.op = Zlib.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new (Uint8Array )(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) ;\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n      opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input = new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new (Uint8Array )(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n        // block header\n      case Zlib.RawInflateStream.Status.INITIALIZED:\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n        // block body\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n        // decode data\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.Order = (function(table) {\n  return new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.LengthCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.LengthExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.DistCodeTable = (function(table) {\n  return new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.DistExtraTable = (function(table) {\n  return new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n        (i <= 143) ? 8 :\n            (i <= 255) ? 9 :\n                (i <= 279) ? 7 :\n                    8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n      new (Uint8Array )(Zlib.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable(codeLengths);\n    lengthTable = new (Uint8Array )(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    this.litlenTable = buildHuffmanTable(lengthTable.subarray(0, hlit))\n        ;\n    this.distTable = buildHuffmanTable(lengthTable.subarray(hlit))\n        ;\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n        (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n        output.length + maxInflateSize :\n        output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    }\n  } else {\n    buffer =\n        this.output.subarray(this.sp, op) ;\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n    {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n};\n\n/**\n * @enum {number}\n */\nZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n        input[this.ip++] << 24 | input[this.ip++] << 16 |\n        input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new (Uint8Array )() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new (Uint8Array )();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = this.input.subarray(this.rawinflate.ip) ;\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n      (input[ip++] << 8)  |\n      (input[ip++] << 16) |\n      (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n      (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n      ((input[ip++])       | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n};\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n      new (Uint8Array )(Zlib.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if (op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib.Heap = function(length) {\n  this.buffer = new (Uint16Array )(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n      // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      (input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n          (opt_params['outputBuffer'] instanceof Array) ?\n              new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new (Uint8Array )(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = input.subarray(position, position + 0xffff) ;\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeNocompressBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {number} */\n      var len;\n      /** @type {number} */\n      var nlen;\n\n      var output = this.output;\n      var op = this.op;\n\n      // expand buffer\n      {\n        output = new Uint8Array(this.output.buffer);\n        while (output.length <= op + blockArray.length + 5) {\n          output = new Uint8Array(output.length << 1);\n        }\n        output.set(this.output);\n      }\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.NONE;\n      output[op++] = (bfinal) | (btype << 1);\n\n      // length\n      len = blockArray.length;\n      nlen = (~len + 0x10000) & 0xffff;\n      output[op++] =          len & 0xff;\n      output[op++] =  (len >>> 8) & 0xff;\n      output[op++] =         nlen & 0xff;\n      output[op++] = (nlen >>> 8) & 0xff;\n\n      // copy buffer\n      {\n        output.set(blockArray, op);\n        op += blockArray.length;\n        output = output.subarray(0, op);\n      }\n\n      this.op = op;\n      this.output = output;\n\n      return output;\n    };\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeFixedHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib.BitStream(new Uint8Array(this.output.buffer) , this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.FIXED;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n      this.fixedHuffman(data, stream);\n\n      return stream.finish();\n    };\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeDynamicHuffmanBlock =\n    function(blockArray, isFinalBlock) {\n      /** @type {Zlib.BitStream} */\n      var stream = new Zlib.BitStream(new Uint8Array(this.output.buffer) , this.op);\n      /** @type {number} */\n      var bfinal;\n      /** @type {Zlib.RawDeflate.CompressionType} */\n      var btype;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var data;\n      /** @type {number} */\n      var hlit;\n      /** @type {number} */\n      var hdist;\n      /** @type {number} */\n      var hclen;\n      /** @const @type {Array.<number>} */\n      var hclenOrder =\n          [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var litLenLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var litLenCodes;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var distLengths;\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var distCodes;\n      /** @type {{\n       *   codes: !(Array.<number>|Uint32Array),\n       *   freqs: !(Array.<number>|Uint8Array)\n       * }} */\n      var treeSymbols;\n      /** @type {!(Array.<number>|Uint8Array)} */\n      var treeLengths;\n      /** @type {Array} */\n      var transLengths = new Array(19);\n      /** @type {!(Array.<number>|Uint16Array)} */\n      var treeCodes;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var bitlen;\n      /** @type {number} */\n      var i;\n      /** @type {number} */\n      var il;\n\n      // header\n      bfinal = isFinalBlock ? 1 : 0;\n      btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\n      stream.writeBits(bfinal, 1, true);\n      stream.writeBits(btype, 2, true);\n\n      data = this.lz77(blockArray);\n\n      // リテラル・長さ, 距離のハフマン符号と符号長の算出\n      litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n      litLenCodes = this.getCodesFromLengths_(litLenLengths);\n      distLengths = this.getLengths_(this.freqsDist, 7);\n      distCodes = this.getCodesFromLengths_(distLengths);\n\n      // HLIT, HDIST の決定\n      for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n      for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n      // HCLEN\n      treeSymbols =\n          this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n      treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n      for (i = 0; i < 19; i++) {\n        transLengths[i] = treeLengths[hclenOrder[i]];\n      }\n      for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n      treeCodes = this.getCodesFromLengths_(treeLengths);\n\n      // 出力\n      stream.writeBits(hlit - 257, 5, true);\n      stream.writeBits(hdist - 1, 5, true);\n      stream.writeBits(hclen - 4, 4, true);\n      for (i = 0; i < hclen; i++) {\n        stream.writeBits(transLengths[i], 3, true);\n      }\n\n      // ツリーの出力\n      for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n        code = treeSymbols.codes[i];\n\n        stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n        // extra bits\n        if (code >= 16) {\n          i++;\n          switch (code) {\n            case 16: bitlen = 2; break;\n            case 17: bitlen = 3; break;\n            case 18: bitlen = 7; break;\n            default:\n              throw 'invalid code: ' + code;\n          }\n\n          stream.writeBits(treeSymbols.codes[i], bitlen, true);\n        }\n      }\n\n      this.dynamicHuffman(\n          data,\n          [litLenCodes, litLenLengths],\n          [distCodes, distLengths],\n          stream\n      );\n\n      return stream.finish();\n    };\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.dynamicHuffman =\n    function(dataArray, litLen, dist, stream) {\n      /** @type {number} */\n      var index;\n      /** @type {number} */\n      var length;\n      /** @type {number} */\n      var literal;\n      /** @type {number} */\n      var code;\n      /** @type {number} */\n      var litLenCodes;\n      /** @type {number} */\n      var litLenLengths;\n      /** @type {number} */\n      var distCodes;\n      /** @type {number} */\n      var distLengths;\n\n      litLenCodes = litLen[0];\n      litLenLengths = litLen[1];\n      distCodes = dist[0];\n      distLengths = dist[1];\n\n      // 符号を BitStream に書き込んでいく\n      for (index = 0, length = dataArray.length; index < length; ++index) {\n        literal = dataArray[index];\n\n        // literal or length\n        stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n        // 長さ・距離符号\n        if (literal > 256) {\n          // length extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // distance\n          code = dataArray[++index];\n          stream.writeBits(distCodes[code], distLengths[code], true);\n          // distance extra\n          stream.writeBits(dataArray[++index], dataArray[++index], true);\n          // 終端\n        } else if (literal === 256) {\n          break;\n        }\n      }\n\n      return stream;\n    };\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib.BitStream.prototype.writeBits.apply(\n        stream,\n        Zlib.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return new Uint32Array(table) ;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0];      case (length === 4): return [258, length - 4, 0];      case (length === 5): return [259, length - 5, 0];      case (length === 6): return [260, length - 6, 0];      case (length === 7): return [261, length - 7, 0];      case (length === 8): return [262, length - 8, 0];      case (length === 9): return [263, length - 9, 0];      case (length === 10): return [264, length - 10, 0];      case (length <= 12): return [265, length - 11, 1];      case (length <= 14): return [266, length - 13, 1];      case (length <= 16): return [267, length - 15, 1];      case (length <= 18): return [268, length - 17, 1];      case (length <= 22): return [269, length - 19, 2];      case (length <= 26): return [270, length - 23, 2];      case (length <= 30): return [271, length - 27, 2];      case (length <= 34): return [272, length - 31, 2];      case (length <= 42): return [273, length - 35, 3];      case (length <= 50): return [274, length - 43, 3];      case (length <= 58): return [275, length - 51, 3];      case (length <= 66): return [276, length - 59, 3];      case (length <= 82): return [277, length - 67, 4];      case (length <= 98): return [278, length - 83, 4];      case (length <= 114): return [279, length - 99, 4];      case (length <= 130): return [280, length - 115, 4];      case (length <= 162): return [281, length - 131, 5];      case (length <= 194): return [282, length - 163, 5];      case (length <= 226): return [283, length - 195, 5];      case (length <= 257): return [284, length - 227, 5];      case (length === 258): return [285, length - 258, 0];      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = new Uint16Array(dataArray.length * 2) ;\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new (Uint32Array )(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new (Uint32Array )(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n      // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n      lz77buf.subarray(0, pos) \n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib.RawDeflate.prototype.searchLongestMatch_ =\n    function(data, position, matchList) {\n      var match,\n          currentMatch,\n          matchMax = 0, matchLength,\n          i, j, l, dl = data.length;\n\n      // 候補を後ろから 1 つずつ絞り込んでゆく\n      permatch:\n          for (i = 0, l = matchList.length; i < l; i++) {\n            match = matchList[l - i - 1];\n            matchLength = Zlib.RawDeflate.Lz77MinLength;\n\n            // 前回までの最長一致を末尾から一致検索する\n            if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n              for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n                if (data[match + j - 1] !== data[position + j - 1]) {\n                  continue permatch;\n                }\n              }\n              matchLength = matchMax;\n            }\n\n            // 最長一致探索\n            while (matchLength < Zlib.RawDeflate.Lz77MaxLength &&\n            position + matchLength < dl &&\n            data[match + matchLength] === data[position + matchLength]) {\n              ++matchLength;\n            }\n\n            // マッチ長が同じ場合は後方を優先\n            if (matchLength > matchMax) {\n              currentMatch = match;\n              matchMax = matchLength;\n            }\n\n            // 最長が確定したら後の処理は省略\n            if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n              break;\n            }\n          }\n\n      return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n    };\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib.RawDeflate.prototype.getTreeSymbols_ =\n    function(hlit, litlenLengths, hdist, distLengths) {\n      var src = new (Uint32Array )(hlit + hdist),\n          i, j, runLength, l,\n          result = new (Uint32Array )(286 + 30),\n          nResult,\n          rpt,\n          freqs = new (Uint8Array )(19);\n\n      j = 0;\n      for (i = 0; i < hlit; i++) {\n        src[j++] = litlenLengths[i];\n      }\n      for (i = 0; i < hdist; i++) {\n        src[j++] = distLengths[i];\n      }\n\n      // 符号化\n      nResult = 0;\n      for (i = 0, l = src.length; i < l; i += j) {\n        // Run Length Encoding\n        for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n        runLength = j;\n\n        if (src[i] === 0) {\n          // 0 の繰り返しが 3 回未満ならばそのまま\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = 0;\n              freqs[0]++;\n            }\n          } else {\n            while (runLength > 0) {\n              // 繰り返しは最大 138 までなので切り詰める\n              rpt = (runLength < 138 ? runLength : 138);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              // 3-10 回 -> 17\n              if (rpt <= 10) {\n                result[nResult++] = 17;\n                result[nResult++] = rpt - 3;\n                freqs[17]++;\n                // 11-138 回 -> 18\n              } else {\n                result[nResult++] = 18;\n                result[nResult++] = rpt - 11;\n                freqs[18]++;\n              }\n\n              runLength -= rpt;\n            }\n          }\n        } else {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n          runLength--;\n\n          // 繰り返し回数が3回未満ならばランレングス符号は要らない\n          if (runLength < 3) {\n            while (runLength-- > 0) {\n              result[nResult++] = src[i];\n              freqs[src[i]]++;\n            }\n            // 3 回以上ならばランレングス符号化\n          } else {\n            while (runLength > 0) {\n              // runLengthを 3-6 で分割\n              rpt = (runLength < 6 ? runLength : 6);\n\n              if (rpt > runLength - 3 && rpt < runLength) {\n                rpt = runLength - 3;\n              }\n\n              result[nResult++] = 16;\n              result[nResult++] = rpt - 3;\n              freqs[16]++;\n\n              runLength -= rpt;\n            }\n          }\n        }\n      }\n\n      return {\n        codes:\n            result.subarray(0, nResult) ,\n        freqs: freqs\n      };\n    };\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new (Uint8Array )(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new (Uint32Array )(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new (Uint16Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new (Uint8Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new (Uint8Array )(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new (Uint16Array )(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n      ((input instanceof Array)) ?\n          new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = input.subarray(ip, ip += this.extraFieldLength) ;\n\n  // file comment\n  this.comment = input.subarray(ip, ip + this.fileCommentLength) ;\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\nZlib.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = input.subarray(ip, ip += this.extraFieldLength) ;\n\n  this.length = ip - this.offset;\n};\n\n\nZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n      (input[ip++]      ) | (input[ip++] <<  8) |\n      (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = input.subarray(ip, ip + this.commentLength) ;\n};\n\nZlib.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib.Unzip.CompressionMethod.STORE:\n      buffer = this.input.subarray(offset, offset + length) ;\n      break;\n    case Zlib.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n          'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n          ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\nZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\nZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib.Util.stringToByteArray(array);\n  }\n  return Zlib.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib.Adler32.OptimizationParameter ?\n        Zlib.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof (Uint8Array ) ?\n      buffer :\n      new (Uint8Array )(Zlib.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n      new (Uint8Array )(il << 1);\n\n  // copy buffer\n  {\n    buffer.set(oldbuf);\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |\n        (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n        (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n        Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n        rev32_(number) >> (32 - n) :\n        Zlib.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n    // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  {\n    output = buffer.subarray(0, index);\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new (Uint8Array )(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.calc = function(data, pos, length) {\n  return Zlib.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib.CRC32.single = function(num, crc) {\n  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib.CRC32.Table = new Uint32Array(Zlib.CRC32.Table_) ;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n      new (Uint8Array )(Zlib.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.compress = function(input, opt_params) {\n  return (new Zlib.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var adler;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\n/**\n * Covers string literals and String objects\n * @param x\n * @returns {boolean}\n */\nfunction isString(x) {\n    return typeof x === \"string\" || x instanceof String\n}\n\nfunction isGoogleURL(url) {\n    return (url.includes(\"googleapis\") && !url.includes(\"urlshortener\")) ||\n        isGoogleStorageURL(url) ||\n        isGoogleDriveURL(url)\n}\n\nfunction isGoogleStorageURL(url) {\n    return url.startsWith(\"gs://\") ||\n        url.startsWith(\"https://www.googleapis.com/storage\") ||\n        url.startsWith(\"https://storage.cloud.google.com\") ||\n        url.startsWith(\"https://storage.googleapis.com\");\n}\n\nfunction isGoogleDriveURL(url) {\n    return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n}\n\n/**\n * Translate gs:// urls to https\n * See https://cloud.google.com/storage/docs/json_api/v1\n * @param gsUrl\n * @returns {string|*}\n */\nfunction translateGoogleCloudURL(gsUrl) {\n\n    let {bucket, object} = parseBucketName(gsUrl);\n    object = encode(object);\n\n    const qIdx = gsUrl.indexOf('?');\n    const paramString = (qIdx > 0) ? gsUrl.substring(qIdx) + \"&alt=media\" : \"?alt=media\";\n\n    return `https://storage.googleapis.com/storage/v1/b/${bucket}/o/${object}${paramString}`\n}\n\n/**\n * Parse a google bucket and object name from a google storage URL.  Known forms include\n *\n * gs://BUCKET_NAME/OBJECT_NAME\n * https://storage.googleapis.com/BUCKET_NAME/OBJECT_NAME\n * https://storage.googleapis.com/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\n * https://www.googleapis.com/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\"\n * https://storage.googleapis.com/download/storage/v1/b/BUCKET_NAME/o/OBJECT_NAME\n *\n * @param url\n */\nfunction parseBucketName(url) {\n\n    let bucket;\n    let object;\n\n    if (url.startsWith(\"gs://\")) {\n        const i = url.indexOf('/', 5);\n        if (i >= 0) {\n            bucket = url.substring(5, i);\n            const qIdx = url.indexOf('?');\n            object = (qIdx < 0) ? url.substring(i + 1) : url.substring(i + 1, qIdx);\n        }\n\n    } else if (url.startsWith(\"https://storage.googleapis.com\") || url.startsWith(\"https://storage.cloud.google.com\")) {\n        const bucketIdx = url.indexOf(\"/v1/b/\", 8);\n        if (bucketIdx > 0) {\n            const objIdx = url.indexOf(\"/o/\", bucketIdx);\n            if (objIdx > 0) {\n                const queryIdx = url.indexOf(\"?\", objIdx);\n                bucket = url.substring(bucketIdx + 6, objIdx);\n                object = queryIdx > 0 ? url.substring(objIdx + 3, queryIdx) : url.substring(objIdx + 3);\n            }\n\n        } else {\n            const idx1 = url.indexOf(\"/\", 8);\n            const idx2 = url.indexOf(\"/\", idx1+1);\n            const idx3 = url.indexOf(\"?\", idx2);\n            if (idx2 > 0) {\n                bucket = url.substring(idx1+1, idx2);\n                object = idx3 < 0 ? url.substring(idx2+1) : url.substring(idx2+1, idx3);\n            }\n        }\n\n    } else if (url.startsWith(\"https://www.googleapis.com/storage/v1/b\")) {\n        const bucketIdx = url.indexOf(\"/v1/b/\", 8);\n        const objIdx = url.indexOf(\"/o/\", bucketIdx);\n        if (objIdx > 0) {\n            const queryIdx = url.indexOf(\"?\", objIdx);\n            bucket = url.substring(bucketIdx + 6, objIdx);\n            object = queryIdx > 0 ? url.substring(objIdx + 3, queryIdx) : url.substring(objIdx + 3);\n        }\n    }\n\n    if (bucket && object) {\n        return {\n            bucket, object\n        }\n    } else {\n        throw Error(`Unrecognized Google Storage URI: ${url}`)\n    }\n\n}\n\nfunction driveDownloadURL(link) {\n    // Return a google drive download url for the sharable link\n    //https://drive.google.com/open?id=0B-lleX9c2pZFbDJ4VVRxakJzVGM\n    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n    var id = getGoogleDriveFileID(link);\n    return id ? \"https://www.googleapis.com/drive/v3/files/\" + id + \"?alt=media&supportsTeamDrives=true\" : link;\n}\n\nfunction getGoogleDriveFileID(link) {\n\n    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n    //https://www.googleapis.com/drive/v3/files/1w-tvo6p1SH4p1OaQSVxpkV_EJgGIstWF?alt=media&supportsTeamDrives=true\"\n\n    if (link.includes(\"/open?id=\")) {\n        const i1 = link.indexOf(\"/open?id=\") + 9;\n        const i2 = link.indexOf(\"&\");\n        if (i1 > 0 && i2 > i1) {\n            return link.substring(i1, i2)\n        } else if (i1 > 0) {\n            return link.substring(i1);\n        }\n\n    } else if (link.includes(\"/file/d/\")) {\n        const i1 = link.indexOf(\"/file/d/\") + 8;\n        const i2 = link.lastIndexOf(\"/\");\n        return link.substring(i1, i2);\n\n    } else if (link.startsWith(\"https://www.googleapis.com/drive\")) {\n        let i1 = link.indexOf(\"/files/\");\n        const i2 = link.indexOf(\"?\");\n        if (i1 > 0) {\n            i1 += 7;\n            return i2 > 0 ?\n                link.substring(i1, i2) :\n                link.substring(i1)\n        }\n    }\n\n    throw Error(\"Unknown Google Drive url format: \" + link);\n\n\n}\n\n\n/**\n * Percent a GCS object name.  See https://cloud.google.com/storage/docs/request-endpoints\n * Specific characters to encode:\n *   !, #, $, &, ', (, ), *, +, ,, /, :, ;, =, ?, @, [, ], and space characters.\n * @param obj\n */\n\nfunction encode(objectName) {\n\n    let result = '';\n    objectName.split('').forEach(function(letter) {\n        if(encodings.has(letter)) {\n            result += encodings.get(letter);\n        } else {\n            result += letter;\n        }\n    });\n    return result;\n}\n\n//\t%23\t%24\t%25\t%26\t%27\t%28\t%29\t%2A\t%2B\t%2C\t%2F\t%3A\t%3B\t%3D\t%3F\t%40\t%5B\t%5D\nconst encodings = new Map();\nencodings.set(\"!\", \"%21\");\nencodings.set(\"#\", \"%23\");\nencodings.set(\"$\", \"%24\");\nencodings.set(\"%\", \"%25\");\nencodings.set(\"&\", \"%26\");\nencodings.set(\"'\", \"%27\");\nencodings.set(\"(\", \"%28\");\nencodings.set(\")\", \"%29\");\nencodings.set(\"*\", \"%2A\");\nencodings.set(\"+\", \"%2B\");\nencodings.set(\",\", \"%2C\");\nencodings.set(\"/\", \"%2F\");\nencodings.set(\":\", \"%3A\");\nencodings.set(\";\", \"%3B\");\nencodings.set(\"=\", \"%3D\");\nencodings.set(\"?\", \"%3F\");\nencodings.set(\"@\", \"%40\");\nencodings.set(\"[\", \"%5B\");\nencodings.set(\"]\", \"%5D\");\nencodings.set(\" \", \"%20\");\n\n// Convenience functions for the gapi oAuth library.\n\nconst FIVE_MINUTES = 5 * 60 * 1000;\n\nfunction isInitialized() {\n    return typeof gapi !== \"undefined\" && gapi.auth2 && gapi.auth2.getAuthInstance();\n}\n\nlet inProgress = false;\n\nasync function getAccessToken(scope) {\n\n    if (typeof gapi === \"undefined\") {\n        throw Error(\"Google authentication requires the 'gapi' library\")\n    }\n    if (!gapi.auth2) {\n        throw Error(\"Google 'auth2' has not been initialized\")\n    }\n\n    if (inProgress) {\n        return new Promise(function (resolve, reject) {\n            let intervalID;\n            const checkForToken = () => {    // Wait for inProgress to equal \"false\"\n                try {\n                    if (inProgress === false) {\n                        //console.log(\"Delayed resolution for \" + scope);\n                        resolve(getAccessToken(scope));\n                        clearInterval(intervalID);\n                    }\n                } catch (e) {\n                    clearInterval(intervalID);\n                    reject(e);\n                }\n            };\n            intervalID = setInterval(checkForToken, 100);\n        })\n    } else {\n        inProgress = true;\n        try {\n            let currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n            let token;\n            if (currentUser.isSignedIn()) {\n                if (!currentUser.hasGrantedScopes(scope)) {\n                    await currentUser.grant({scope});\n                }\n                const {access_token, expires_at} = currentUser.getAuthResponse();\n                if (Date.now() < (expires_at - FIVE_MINUTES)) {\n                    token = {access_token, expires_at};\n                } else {\n                    const {access_token, expires_at} = currentUser.reloadAuthResponse();\n                    token = {access_token, expires_at};\n                }\n            } else {\n                currentUser = await signIn(scope);\n                const {access_token, expires_at} = currentUser.getAuthResponse();\n                token = {access_token, expires_at};\n            }\n            return token;\n        } finally {\n            inProgress = false;\n        }\n    }\n}\n\n/**\n * Return the current access token if the user is signed in, or undefined otherwise.  This function does not\n * attempt a signIn or request any specfic scopes.\n *\n * @returns access_token || undefined\n */\nfunction getCurrentAccessToken() {\n\n    let currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n    if (currentUser && currentUser.isSignedIn()) {\n        const {access_token, expires_at} = currentUser.getAuthResponse();\n        return {access_token, expires_at};\n    } else {\n        return undefined;\n    }\n\n}\n\nasync function signIn(scope) {\n\n    const options = new gapi.auth2.SigninOptionsBuilder();\n    options.setPrompt('select_account');\n    options.setScope(scope);\n    return gapi.auth2.getAuthInstance().signIn(options)\n}\n\nfunction getScopeForURL(url) {\n    if (isGoogleDriveURL(url)) {\n        return \"https://www.googleapis.com/auth/drive.file\";\n    } else if (isGoogleStorageURL(url)) {\n        return \"https://www.googleapis.com/auth/devstorage.read_only\";\n    } else {\n        return 'https://www.googleapis.com/auth/userinfo.profile';\n    }\n}\n\nfunction getApiKey() {\n    return gapi.apiKey;\n}\n\nasync function getDriveFileInfo(googleDriveURL) {\n\n    const id = getGoogleDriveFileID(googleDriveURL);\n    let endPoint = \"https://www.googleapis.com/drive/v3/files/\" + id + \"?supportsTeamDrives=true\";\n    const apiKey = getApiKey();\n    if (apiKey) {\n        endPoint += \"&key=\" + apiKey;\n    }\n    const response = await fetch(endPoint);\n    let json = await response.json();\n    if (json.error && json.error.code === 404) {\n        const {access_token} = await getAccessToken(\"https://www.googleapis.com/auth/drive.readonly\");\n        if (access_token) {\n            const response = await fetch(endPoint, {\n                headers: {\n                    'Authorization': `Bearer ${access_token}`\n                }\n            });\n            json = await response.json();\n            if (json.error) {\n                throw Error(json.error);\n            }\n        } else {\n            throw Error(json.error);\n        }\n    }\n    return json;\n}\n\nif (typeof process === 'object' && typeof window === 'undefined') {\n    global.atob = function (str) {\n        return Buffer.from(str, 'base64').toString('binary');\n    };\n}\n\n/**\n * @param dataURI\n * @returns {Array<number>|Uint8Array}\n */\nfunction decodeDataURI(dataURI) {\n\n    const split = dataURI.split(',');\n    const info = split[0].split(':')[1];\n    let dataString = split[1];\n\n    if (info.indexOf('base64') >= 0) {\n        dataString = atob(dataString);\n    } else {\n        dataString = decodeURI(dataString);      // URL encoded string -- not currently used of tested\n    }\n    const bytes = new Uint8Array(dataString.length);\n    for (let i = 0; i < dataString.length; i++) {\n        bytes[i] = dataString.charCodeAt(i);\n    }\n\n    let plain;\n    if (info.indexOf('gzip') > 0) {\n        const inflate = new Zlib.Gunzip(bytes);\n        plain = inflate.decompress();\n    } else {\n        plain = bytes;\n    }\n    return plain\n}\n\nfunction parseUri(str) {\n\n    var o = options,\n        m = o.parser[\"loose\"].exec(str),\n        uri = {},\n        i = 14;\n\n    while (i--) uri[o.key[i]] = m[i] || \"\";\n\n    uri[o.q.name] = {};\n    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n        if ($1) uri[o.q.name][$1] = $2;\n    });\n\n    return uri;\n}\n\nconst options = {\n    strictMode: false,\n    key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n    q: {\n        name: \"queryKey\",\n        parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n        strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n        loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n};\n\n/**\n * Return the filename from the path.   Example\n *   https://foo.com/bar.bed?param=2   => bar.bed\n * @param urlOrFile\n */\n\nfunction getFilename$1 (urlOrFile) {\n\n    if (urlOrFile instanceof File) {\n        return urlOrFile.name;\n    } else if (isString(urlOrFile)){\n\n        let index = urlOrFile.lastIndexOf(\"/\");\n        let filename = index < 0 ? urlOrFile : urlOrFile.substr(index + 1);\n\n        //Strip parameters -- handle local files later\n        index = filename.indexOf(\"?\");\n        if (index > 0) {\n            filename = filename.substr(0, index);\n        }\n        return filename;\n    } else {\n        throw Error(`Expected File or string, got ${typeof urlOrFile}`);\n    }\n}\n\n// Uncompress data,  assumed to be series of bgzipped blocks\nfunction unbgzf(data, lim) {\n\n    const oBlockList = [];\n    let ptr = 0;\n    let totalSize = 0;\n\n    lim = lim || data.byteLength - 18;\n\n    while (ptr < lim) {\n        try {\n            const ba = new Uint8Array(data, ptr, 18);\n            const xlen = (ba[11] << 8) | (ba[10]);\n            const si1 = ba[12];\n            const si2 = ba[13];\n            const slen = (ba[15] << 8) | (ba[14]);\n            const bsize = ((ba[17] << 8) | (ba[16])) + 1;\n            const start = 12 + xlen + ptr;    // Start of CDATA\n            const bytesLeft = data.byteLength - start;\n            const cDataSize = bsize - xlen - 19;\n            if (bytesLeft < cDataSize || cDataSize <= 0) break;\n\n            const a = new Uint8Array(data, start, cDataSize);\n            const inflate = new Zlib.RawInflate(a);\n            const unc = inflate.decompress();\n\n            ptr += inflate.ip + 26;\n            totalSize += unc.byteLength;\n            oBlockList.push(unc);\n        } catch (e) {\n            console.error(e);\n            break;\n        }\n    }\n\n    // Concatenate decompressed blocks\n    if (oBlockList.length === 1) {\n        return oBlockList[0];\n    } else {\n        const out = new Uint8Array(totalSize);\n        let cursor = 0;\n        for (let i = 0; i < oBlockList.length; ++i) {\n            var b = new Uint8Array(oBlockList[i]);\n            arrayCopy(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out;\n    }\n}\n\n// From Thomas Down's zlib implementation\n\nconst testArray = new Uint8Array(1);\nconst hasSubarray = (typeof testArray.subarray === 'function');\n\nfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count === 0) {\n        return;\n    }\n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n    if (srcOffset === 0 && count === src.length) {\n        arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n        arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n    } else if (src.BYTES_PER_ELEMENT === 1 && count > 100) {\n        arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else {\n        arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n}\n\nfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n    for (let i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\n// Support for oauth token based authorization\n// This class supports explicit setting of an oauth token either globally or for specific hosts.\n//\n// The variable oauth.google.access_token, which becomes igv.oauth.google.access_token on ES5 conversion is\n// supported for backward compatibility\n\nconst DEFAULT_HOST = \"googleapis\";\n\nconst oauth = {\n\n    oauthTokens: {},\n\n    setToken: function (token, host) {\n        host = host || DEFAULT_HOST;\n        this.oauthTokens[host] = token;\n        if(host === DEFAULT_HOST) {\n            this.google.access_token = token;    // legacy support\n        }\n    },\n\n    getToken: function (host) {\n        host = host || DEFAULT_HOST;\n        let token;\n        for (let key of Object.keys(this.oauthTokens)) {\n            const regex = wildcardToRegExp(key);\n            if (regex.test(host)) {\n                token = this.oauthTokens[key];\n                break;\n            }\n        }\n        return token;\n    },\n\n    removeToken: function (host) {\n        host = host || DEFAULT_HOST;\n        for (let key of Object.keys(this.oauthTokens)) {\n            const regex = wildcardToRegExp(key);\n            if (regex.test(host)) {\n                this.oauthTokens[key] = undefined;\n            }\n        }\n        if(host === DEFAULT_HOST) {\n            this.google.access_token = undefined;    // legacy support\n        }\n    },\n\n    // Special object for google -- legacy support\n    google: {\n        setToken: function (token) {\n            oauth.setToken(token);\n        }\n    }\n};\n\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n *\n * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n */\nfunction wildcardToRegExp(s) {\n    return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n *\n * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n */\nfunction regExpEscape(s) {\n    return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n\n// The MIT License (MIT)\n\n/**\n * @constructor\n * @param {Object} options A set op options to pass to the throttle function\n *        @param {number} requestsPerSecond The amount of requests per second\n *                                          the library will limit to\n */\nclass Throttle {\n    constructor(options) {\n        this.requestsPerSecond = options.requestsPerSecond || 10;\n        this.lastStartTime = 0;\n        this.queued = [];\n    }\n\n    /**\n     * Adds a promise\n     * @param {Function} async function to be executed\n     * @param {Object} options A set of options.\n     * @return {Promise} A promise\n     */\n    add(asyncFunction, options) {\n\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            self.queued.push({\n                resolve: resolve,\n                reject: reject,\n                asyncFunction: asyncFunction,\n            });\n            self.dequeue();\n        });\n    }\n\n    /**\n     * Adds all the promises passed as parameters\n     * @param {Function} promises An array of functions that return a promise\n     * @param {Object} options A set of options.\n     * @param {number} options.signal An AbortSignal object that can be used to abort the returned promise\n     * @param {number} options.weight A \"weight\" of each operation resolving by array of promises\n     * @return {Promise} A promise that succeeds when all the promises passed as options do\n     */\n    addAll(promises, options) {\n        var addedPromises = promises.map(function (promise) {\n            return this.add(promise, options);\n        }.bind(this));\n\n        return Promise.all(addedPromises);\n    };\n\n    /**\n     * Dequeues a promise\n     * @return {void}\n     */\n    dequeue() {\n        if (this.queued.length > 0) {\n            var now = new Date(),\n                inc = (1000 / this.requestsPerSecond) + 1,\n                elapsed = now - this.lastStartTime;\n\n            if (elapsed >= inc) {\n                this._execute();\n            } else {\n                // we have reached the limit, schedule a dequeue operation\n                setTimeout(function () {\n                    this.dequeue();\n                }.bind(this), inc - elapsed);\n            }\n        }\n    }\n\n    /**\n     * Executes the promise\n     * @private\n     * @return {void}\n     */\n    async _execute() {\n        this.lastStartTime = new Date();\n        var candidate = this.queued.shift();\n        const f = candidate.asyncFunction;\n        try {\n            const r = await f();\n            candidate.resolve(r);\n        } catch (e) {\n            candidate.reject(e);\n        }\n\n    }\n\n\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar NONE = 0;\nvar GZIP = 1;\nvar BGZF = 2;\nvar UNKNOWN = 3;\nlet RANGE_WARNING_GIVEN = false;\n\nconst googleThrottle = new Throttle({\n    requestsPerSecond: 8\n});\n\nconst igvxhr = {\n\n    apiKey: undefined,\n\n    setApiKey: function (key) {\n        this.apiKey = key;\n    },\n\n    load: load,\n\n    loadArrayBuffer: async function (url, options) {\n        options = options || {};\n        if (!options.responseType) {\n            options.responseType = \"arraybuffer\";\n        }\n        if (url instanceof File) {\n            return loadFileSlice(url, options);\n        } else {\n            return load(url, options);\n        }\n    },\n\n    loadJson: async function (url, options) {\n        options = options || {};\n        const method = options.method || (options.sendData ? \"POST\" : \"GET\");\n        if (method === \"POST\") {\n            options.contentType = \"application/json\";\n        }\n        const result = await this.loadString(url, options);\n        if (result) {\n            return JSON.parse(result);\n        } else {\n            return result;\n        }\n    },\n\n    loadString: async function (path, options) {\n        options = options || {};\n        if (path instanceof File) {\n            return loadStringFromFile(path, options);\n        } else {\n            return loadStringFromUrl(path, options);\n        }\n    }\n};\n\nasync function load(url, options) {\n\n    options = options || {};\n    const urlType = typeof url;\n\n    // Resolve functions, promises, and functions that return promises\n    url = await (typeof url === 'function' ? url() : url);\n\n    if (url instanceof File) {\n        return loadFileSlice(url, options);\n    } else if (typeof url.startsWith === 'function') {   // Test for string\n        if (url.startsWith(\"data:\")) {\n            return decodeDataURI(url)\n        } else {\n            if (url.startsWith(\"https://drive.google.com\")) {\n                url = driveDownloadURL(url);\n            }\n            if (isGoogleDriveURL(url) || url.startsWith(\"https://www.dropbox.com\")) {\n                return googleThrottle.add(async function () {\n                    return loadURL(url, options)\n                })\n            } else {\n                return loadURL(url, options);\n            }\n        }\n    } else {\n        throw Error(`url must be either a 'File', 'string', 'function', or 'Promise'.  Actual type: ${urlType}`);\n    }\n}\n\nasync function loadURL(url, options) {\n\n    //console.log(`${Date.now()}   ${url}`)\n    url = mapUrl(url);\n\n    options = options || {};\n\n    let oauthToken = options.oauthToken || getOauthToken(url);\n    if (oauthToken) {\n        oauthToken = await (typeof oauthToken === 'function' ? oauthToken() : oauthToken);\n    }\n\n    return new Promise(function (resolve, reject) {\n\n        // Various Google tansformations\n        if (isGoogleURL(url)) {\n            if (isGoogleStorageURL(url)) {\n                url = translateGoogleCloudURL(url);\n            }\n            url = addApiKey(url);\n\n            if (isGoogleDriveURL(url)) {\n                addTeamDrive(url);\n            }\n\n            // If we have an access token try it, but don't force a signIn or request for scopes yet\n            if (!oauthToken) {\n                oauthToken = getCurrentGoogleAccessToken();\n            }\n        }\n\n        const headers = options.headers || {};\n        if (oauthToken) {\n            addOauthHeaders(headers, oauthToken);\n        }\n        const range = options.range;\n        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n        navigator.vendor.indexOf(\"Apple\") === 0 && /\\sSafari\\//.test(navigator.userAgent);\n\n        if (range && isChrome && !isAmazonV4Signed(url)) {\n            // Hack to prevent caching for byte-ranges. Attempt to fix net:err-cache errors in Chrome\n            url += url.includes(\"?\") ? \"&\" : \"?\";\n            url += \"someRandomSeed=\" + Math.random().toString(36);\n        }\n\n        const xhr = new XMLHttpRequest();\n        const sendData = options.sendData || options.body;\n        const method = options.method || (sendData ? \"POST\" : \"GET\");\n        const responseType = options.responseType;\n        const contentType = options.contentType;\n        const mimeType = options.mimeType;\n\n        xhr.open(method, url);\n\n        if (range) {\n            var rangeEnd = range.size ? range.start + range.size - 1 : \"\";\n            xhr.setRequestHeader(\"Range\", \"bytes=\" + range.start + \"-\" + rangeEnd);\n            //      xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");    <= This can cause CORS issues, disabled for now\n        }\n        if (contentType) {\n            xhr.setRequestHeader(\"Content-Type\", contentType);\n        }\n        if (mimeType) {\n            xhr.overrideMimeType(mimeType);\n        }\n        if (responseType) {\n            xhr.responseType = responseType;\n        }\n        if (headers) {\n            for (let key of Object.keys(headers)) {\n                const value = headers[key];\n                xhr.setRequestHeader(key, value);\n            }\n        }\n\n        // NOTE: using withCredentials with servers that return \"*\" for access-allowed-origin will fail\n        if (options.withCredentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.onload = async function (event) {\n            // when the url points to a local file, the status is 0 but that is not an error\n            if (xhr.status === 0 || (xhr.status >= 200 && xhr.status <= 300)) {\n                if (range && xhr.status !== 206 && range.start !== 0) {\n                    // For small files a range starting at 0 can return the whole file => 200\n                    // Provide just the slice we asked for, throw out the rest quietly\n                    // If file is large warn user\n                    if (xhr.response.length > 100000 && !RANGE_WARNING_GIVEN) {\n                        alert(`Warning: Range header ignored for URL: ${url}.  This can have performance impacts.`);\n                    }\n                    resolve(xhr.response.slice(range.start, range.start + range.size));\n\n                } else {\n                    resolve(xhr.response);\n                }\n            } else if ((typeof gapi !== \"undefined\") &&\n                ((xhr.status === 404 || xhr.status === 401 || xhr.status === 403) &&\n                    isGoogleURL(url)) &&\n                !options.retries) {\n                tryGoogleAuth();\n\n            } else {\n                if (xhr.status === 403) {\n                    handleError(\"Access forbidden: \" + url);\n                } else if (xhr.status === 416) {\n                    //  Tried to read off the end of the file.   This shouldn't happen, but if it does return an\n                    handleError(\"Unsatisfiable range\");\n                } else {\n                    handleError(xhr.status);\n                }\n            }\n        };\n\n        xhr.onerror = function (event) {\n            if (isGoogleURL(url) && !options.retries) {\n                tryGoogleAuth();\n            }\n            handleError(\"Error accessing resource: \" + url + \" Status: \" + xhr.status);\n        };\n\n        xhr.ontimeout = function (event) {\n            handleError(\"Timed out\");\n        };\n\n        xhr.onabort = function (event) {\n            reject(event);\n        };\n\n        try {\n            xhr.send(sendData);\n        } catch (e) {\n            reject(e);\n        }\n\n\n        function handleError(error) {\n            if (reject) {\n                reject(error);\n            } else {\n                throw error;\n            }\n        }\n\n        async function tryGoogleAuth() {\n            try {\n                const accessToken = await fetchGoogleAccessToken(url);\n                options.retries = 1;\n                options.oauthToken = accessToken;\n                const response = await load(url, options);\n                resolve(response);\n            } catch (e) {\n                if (e.error) {\n                    const msg = e.error.startsWith(\"popup_blocked\") ?\n                        \"Google login popup blocked by browser.\" :\n                        e.error;\n                    alert(msg);\n                } else {\n                    handleError(e);\n                }\n            }\n        }\n    })\n\n}\n\nasync function loadFileSlice(localfile, options) {\n\n    let blob = (options && options.range) ?\n        localfile.slice(options.range.start, options.range.start + options.range.size) :\n        localfile;\n\n    if (\"arraybuffer\" === options.responseType) {\n        return blobToArrayBuffer(blob);\n    } else {\n        // binary string format, shouldn't be used anymore\n        return new Promise(function (resolve, reject) {\n            const fileReader = new FileReader();\n            fileReader.onload = function (e) {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = function (e) {\n                console.error(\"reject uploading local file \" + localfile.name);\n                reject(null, fileReader);\n            };\n            fileReader.readAsBinaryString(blob);\n            console.warn(\"Deprecated method used: readAsBinaryString\");\n        })\n    }\n}\n\nasync function loadStringFromFile(localfile, options) {\n\n    const blob = options.range ? localfile.slice(options.range.start, options.range.start + options.range.size) : localfile;\n    let compression = NONE;\n    if (options && options.bgz || localfile.name.endsWith(\".bgz\")) {\n        compression = BGZF;\n    } else if (localfile.name.endsWith(\".gz\")) {\n        compression = GZIP;\n    }\n\n    if (compression === NONE) {\n        return blobToText(blob);\n    } else {\n        const arrayBuffer = await blobToArrayBuffer(blob);\n        return arrayBufferToString(arrayBuffer, compression);\n    }\n}\n\nasync function blobToArrayBuffer(blob) {\n    if (typeof blob.arrayBuffer === 'function') {\n        return blob.arrayBuffer();\n    }\n    return new Promise(function (resolve, reject) {\n        const fileReader = new FileReader();\n        fileReader.onload = function (e) {\n            resolve(fileReader.result);\n        };\n        fileReader.onerror = function (e) {\n            console.error(\"reject uploading local file \" + localfile.name);\n            reject(null, fileReader);\n        };\n        fileReader.readAsArrayBuffer(blob);\n    })\n}\n\nasync function blobToText(blob) {\n    if (typeof blob.text === 'function') {\n        return blob.text();\n    }\n    return new Promise(function (resolve, reject) {\n        const fileReader = new FileReader();\n        fileReader.onload = function (e) {\n            resolve(fileReader.result);\n        };\n        fileReader.onerror = function (e) {\n            console.error(\"reject uploading local file \" + localfile.name);\n            reject(null, fileReader);\n        };\n        fileReader.readAsText(blob);\n    })\n}\n\nasync function loadStringFromUrl(url, options) {\n\n    options = options || {};\n\n    const fn = options.filename || await getFilename(url);\n    let compression = UNKNOWN;\n    if (options.bgz) {\n        compression = BGZF;\n    } else if (fn.endsWith(\".gz\")) {\n        compression = GZIP;\n    }\n\n    options.responseType = \"arraybuffer\";\n    const data = await igvxhr.load(url, options);\n    return arrayBufferToString(data, compression);\n}\n\n\nfunction isAmazonV4Signed(url) {\n    return url.indexOf(\"X-Amz-Signature\") > -1;\n}\n\nfunction getOauthToken(url) {\n\n    // Google is the default provider, don't try to parse host for google URLs\n    const host = isGoogleURL(url) ?\n        undefined :\n        parseUri(url).host;\n    let token = oauth.getToken(host);\n    if (token) {\n        return token;\n    } else if (host === undefined) {\n        const googleToken = getCurrentGoogleAccessToken();\n        if (googleToken && googleToken.expires_at > Date.now()) {\n            return googleToken.access_token;\n        }\n    }\n}\n\n/**\n * Return a Google oAuth token, triggering a sign in if required.   This method should not be called until we know\n * a token is required, that is until we've tried the url and received a 401, 403, or 404.\n *\n * @param url\n * @returns the oauth token\n */\nasync function fetchGoogleAccessToken(url) {\n    if (isInitialized()) {\n        const scope = getScopeForURL(url);\n        const googleToken = await getAccessToken(scope);\n        return googleToken ? googleToken.access_token : undefined;\n    } else {\n        throw Error(\n            `Authorization is required, but Google oAuth has not been initalized. Contact your site administrator for assistance.`)\n    }\n}\n\n/**\n * Return the current google access token, if one exists.  Do not triger signOn or request additional scopes.\n * @returns {undefined|access_token}\n */\nfunction getCurrentGoogleAccessToken() {\n    if (isInitialized()) {\n        const googleToken = getCurrentAccessToken();\n        return googleToken ? googleToken.access_token : undefined;\n    } else {\n        return undefined;\n    }\n}\n\nfunction addOauthHeaders(headers, acToken) {\n    if (acToken) {\n        headers[\"Cache-Control\"] = \"no-cache\";\n        headers[\"Authorization\"] = \"Bearer \" + acToken;\n    }\n    return headers;\n}\n\n\nfunction addApiKey(url) {\n    let apiKey = igvxhr.apiKey;\n    if (!apiKey && typeof gapi !== \"undefined\") {\n        apiKey = gapi.apiKey;\n    }\n    if (apiKey !== undefined && !url.includes(\"key=\")) {\n        const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n        url = url + paramSeparator + \"key=\" + apiKey;\n    }\n    return url;\n}\n\nfunction addTeamDrive(url) {\n    if (url.includes(\"supportsTeamDrive\")) {\n        return url;\n    } else {\n        const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n        url = url + paramSeparator + \"supportsTeamDrive=true\";\n    }\n}\n\n/**\n * Perform some well-known url mappings.\n * @param url\n */\nfunction mapUrl(url) {\n\n    if (url.includes(\"//www.dropbox.com\")) {\n        return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n    } else if (url.includes(\"//drive.google.com\")) {\n        return driveDownloadURL(url);\n    } else if (url.includes(\"//www.broadinstitute.org/igvdata\")) {\n        return url.replace(\"//www.broadinstitute.org/igvdata\", \"//data.broadinstitute.org/igvdata\");\n    } else if (url.includes(\"//igvdata.broadinstitute.org\")) {\n        return url.replace(\"//igvdata.broadinstitute.org\", \"https://dn7ywbm9isq8j.cloudfront.net\")\n    } else if (url.startsWith(\"ftp://ftp.ncbi.nlm.nih.gov/geo\")) {\n        return url.replace(\"ftp://\", \"https://\")\n    } else {\n        return url;\n    }\n}\n\n\nfunction arrayBufferToString(arraybuffer, compression) {\n\n    if (compression === UNKNOWN && arraybuffer.byteLength > 2) {\n        const m = new Uint8Array(arraybuffer, 0, 2);\n        if (m[0] === 31 && m[1] === 139) {\n            compression = GZIP;\n        }\n    }\n\n    let plain;\n    if (compression === GZIP) {\n        const inflate = new Zlib.Gunzip(new Uint8Array(arraybuffer));\n        plain = inflate.decompress();\n    } else if (compression === BGZF) {\n        plain = unbgzf(arraybuffer);\n    } else {\n        plain = new Uint8Array(arraybuffer);\n    }\n\n    if ('TextDecoder' in getGlobalObject()) {\n        return new TextDecoder().decode(plain);\n    } else {\n        return decodeUTF8(plain);\n    }\n}\n\n/**\n * Use when TextDecoder is not available (primarily IE).\n *\n * From: https://gist.github.com/Yaffle/5458286\n *\n * @param octets\n * @returns {string}\n */\nfunction decodeUTF8(octets) {\n    var string = \"\";\n    var i = 0;\n    while (i < octets.length) {\n        var octet = octets[i];\n        var bytesNeeded = 0;\n        var codePoint = 0;\n        if (octet <= 0x7F) {\n            bytesNeeded = 0;\n            codePoint = octet & 0xFF;\n        } else if (octet <= 0xDF) {\n            bytesNeeded = 1;\n            codePoint = octet & 0x1F;\n        } else if (octet <= 0xEF) {\n            bytesNeeded = 2;\n            codePoint = octet & 0x0F;\n        } else if (octet <= 0xF4) {\n            bytesNeeded = 3;\n            codePoint = octet & 0x07;\n        }\n        if (octets.length - i - bytesNeeded > 0) {\n            var k = 0;\n            while (k < bytesNeeded) {\n                octet = octets[i + k + 1];\n                codePoint = (codePoint << 6) | (octet & 0x3F);\n                k += 1;\n            }\n        } else {\n            codePoint = 0xFFFD;\n            bytesNeeded = octets.length - i;\n        }\n        string += String.fromCodePoint(codePoint);\n        i += bytesNeeded + 1;\n    }\n    return string\n}\n\n\nfunction getGlobalObject() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    } else {\n        return window;\n    }\n}\n\nasync function getFilename(url) {\n    if (isString(url) && url.startsWith(\"https://drive.google.com\")) {\n        // This will fail if Google API key is not defined\n        if (getApiKey() === undefined) {\n            throw Error(\"Google drive is referenced, but API key is not defined.  An API key is required for Google Drive access\");\n        }\n        const json = await getDriveFileInfo(url);\n        return json.originalFileName || json.name;\n    } else {\n        return getFilename$1(url);\n    }\n}\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** An implementation of an interval tree, following the explanation.\n * from CLR.\n *\n * Public interface:\n *   Constructor  IntervalTree\n *   Insertion    insert\n *   Search       findOverlapping\n */\n\nvar BLACK = 1;\n\nvar NIL = {};\nNIL.color = BLACK;\nNIL.parent = NIL;\nNIL.left = NIL;\nNIL.right = NIL;\n\nconst delimiters = new Set([ '\\t', ',' ]);\nclass GenericDataSource {\n\n    constructor(config) {\n\n        this.columns = config.columns;   // Required for now, could default to all columns\n        this.columnDefs = config.columnDefs;       // optional\n        this.rowHandler = config.rowHandler;      // optional\n\n        this.delimiter = undefined;\n        if (config.delimiter) {\n            this.delimiter = config.delimiter;\n        }\n\n        if (config.data) {\n            this.data = config.data;  // Explcitly set table rows as array of json objects\n        } else {\n            this.url = config.url;     // URL to data source -- required\n            this.isJSON = config.isJSON || false;   // optional, defaults to false (tab delimited)\n            this.parser = config.parser;                   // optional\n            this.filter = config.filter;             // optional\n            this.sort = config.sort;                // optional\n        }\n    }\n\n    async tableColumns() {\n        return this.columns;\n    }\n\n    async tableData() {\n\n        if (undefined === this.data) {\n\n            let response = undefined;\n            try {\n                const url = this.url;\n                response = await fetch(url);\n            } catch (e) {\n                console.error(e);\n                return undefined;\n            }\n\n            if (response) {\n\n                const str = await response.text();\n\n                let records;\n                if (this.parser) {\n                    records = this.parser.parse(str);\n                } else if (this.isJSON) {\n                    records = JSON.parse(str);\n                    if (typeof this.filter === 'function') {\n                        records = records.filter(this.filter);\n                    }\n                } else {\n                    records = this.parseTabData(str, this.filter);\n                }\n\n                if (typeof this.sort === 'function') {\n                    records.sort(this.sort);\n                }\n\n                // this.data = records\n                return records\n            }\n        } else if (Array.isArray(this.data)) {\n            return this.data\n        } else if ('json' === GenericDataSource.getExtension(this.data) || delimiters.has( getDelimiter(this.data, this.delimiter) )) {\n\n            const extension = GenericDataSource.getExtension(this.data);\n            const delimiter = getDelimiter(this.data, this.delimiter);\n\n            let result;\n            try {\n                result = 'json' === extension ? await igvxhr.loadJson(this.data) : await igvxhr.loadString(this.data);\n            } catch (e){\n                console.error(e);\n                return undefined\n            }\n\n            if (result) {\n\n                if ('json' === extension) {\n                    return result\n                } else if (delimiter) {\n\n                    switch ( delimiter ) {\n                        case '\\t'   : return this.parseTabData(result)\n                        case ','    : return parseCSV(result)\n                    }\n                }\n\n            }\n\n        }\n\n        return undefined\n    }\n\n    parseTabData(str, filter) {\n\n        const dataWrapper = getDataWrapper(str);\n\n        const headerLine = dataWrapper.nextLine();  // Skip header\n        const headers = headerLine.split('\\t');\n\n        const records = [];\n        let line;\n\n        while (line = dataWrapper.nextLine()) {\n\n            const record = {};\n\n            const tokens = line.split(`\\t`);\n            if (tokens.length !== headers.length) {\n                throw Error(\"Number of values must equal number of headers in file \" + this.url);\n            }\n\n            for (let i = 0; i < headers.length; i++) {\n                record[headers[i]] = tokens[i];\n            }\n\n            if (undefined === filter || filter(record)) {\n                records.push(record);\n            }\n\n        } // while(line)\n\n        return records;\n    }\n\n    static getExtension(url) {\n\n        const path = (url instanceof File) ? url.name : url;\n\n        // Strip parameters (handles Dropbox URLs)\n        let filename = path.toLowerCase();\n\n        let index;\n\n        index = filename.indexOf('?');\n        if (index > 0) {\n            filename = filename.substr(0, index);\n        }\n\n        index = filename.lastIndexOf(\".\");\n        return index < 0 ? filename : filename.substr(1 + index)\n    }\n\n}\n\nfunction getDelimiter(data, delimiter) {\n    return delimiter || getDelimiterForExtension( GenericDataSource.getExtension(data) )\n\n}\n\nfunction getDelimiterForExtension(extension) {\n    switch (extension) {\n        case 'tab' : return '\\t'\n        case 'csv' : return ','\n        default: return undefined\n    }\n}\n\nfunction parseCSV(str) {\n\n    const list = str.split('\\n');\n    const keys = list.shift().split(',').map(key => key.trim());\n\n    return list.map(line => {\n        const keyValues = line.split(',').map((value, index) => [ keys[ index ], value.trim() ]);\n        return Object.fromEntries( new Map(keyValues) )\n    })\n\n}\n\nclass ModalTable {\n\n    constructor(args) {\n\n        this.datasource = args.datasource;\n        this.okHandler = args.okHandler;\n\n        this.pageLength = args.pageLength || 10;\n\n        if (args.selectionStyle) {\n            this.select = {style: args.selectionStyle};\n        } else {\n            this.select = true;\n        }\n\n        const id = args.id;\n        const title = args.title || '';\n        const parent = args.parent ? $(args.parent) : $('body');\n        const html = `\n        <div id=\"${id}\" class=\"modal fade\">\n        \n            <div class=\"modal-dialog modal-xl\">\n        \n                <div class=\"modal-content\">\n        \n                    <div class=\"modal-header\">\n                        <div class=\"modal-title\">${title}</div>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n        \n                    <div class=\"modal-body\">\n        \n                        <div id=\"${id}-spinner\" class=\"spinner-border\" style=\"display: none;\">\n                            <!-- spinner -->\n                        </div>\n        \n                        <div id=\"${id}-datatable-container\">\n        \n                        </div>\n                        \n                        <!-- description -->\n                        <div>\n                        </div>\n                    </div>\n        \n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">OK</button>\n                    </div>\n        \n                </div>\n        \n            </div>\n        \n        </div>\n    `;\n        const $m = $(html);\n        parent.append($m);\n\n        this.$modal = $m;\n        this.$datatableContainer = $m.find(`#${id}-datatable-container`);\n        this.$spinner = $m.find(`#${id}-spinner`);\n        const $okButton = $m.find('.modal-footer button:nth-child(2)');\n\n        $m.on('shown.bs.modal', (e) => {\n            this.buildTable();\n        });\n\n        $m.on('hidden.bs.modal', (e) => {\n            $(e.relatedTarget).find('tr.selected').removeClass('selected');\n        });\n\n        $okButton.on('click', (e) => {\n            const selected = this.getSelectedTableRowsData.call(this, this.$dataTable.$('tr.selected'));\n            if (selected && this.okHandler) {\n                this.okHandler(selected);\n            }\n        });\n    }\n\n    setTitle(title) {\n        this.$modal.find('.modal-title').text(`${ title }`);\n    }\n\n    setDescription(description) {\n        this.$modal.find('.modal-body').children().last().html(`${ description }`);\n    }\n\n    remove() {\n        this.$modal.remove();\n    }\n\n    setDatasource(datasource) {\n        this.datasource = datasource;\n        this.$datatableContainer.empty();\n        this.$table = undefined;\n    }\n\n    async buildTable() {\n\n        if (!this.$table && this.datasource) {\n\n            this.$table = $('<table class=\"display\"></table>');\n            this.$datatableContainer.append(this.$table);\n\n            try {\n                this.startSpinner();\n\n                const tableData = await this.datasource.tableData();\n                const tableColumns = await this.datasource.tableColumns();\n                const columnDefs = this.datasource.columnDefs;\n                const config =\n                    {\n                        data: tableData,\n                        columns: tableColumns.map(c => {\n                            if (columnDefs && columnDefs[c]) {\n                                return Object.assign({}, columnDefs[c], {data: c});\n                            } else {\n                                return {title: c, data: c}\n                            }\n                        }),\n                        pageLength: this.pageLength,\n                        select: this.select,\n                        autoWidth: false,\n                        paging: true,\n                        scrollX: true,\n                        scrollY: '400px',\n                    };\n\n\n                // API object\n                this.api = this.$table.DataTable(config);\n\n                // Preserve sort order. For some reason it gets garbled by default\n                // this.api.column( 0 ).data().sort().draw();\n\n                // Adjust column widths\n                this.api.columns.adjust().draw();\n\n                // jQuery object\n                this.$dataTable = this.$table.dataTable();\n\n                this.tableData = tableData;\n\n\n            } catch (e) {\n\n            } finally {\n                this.stopSpinner();\n            }\n        }\n    }\n\n    getSelectedTableRowsData($rows) {\n        const tableData = this.tableData;\n        const result = [];\n        if ($rows.length > 0) {\n            $rows.removeClass('selected');\n            const api = this.$table.api();\n            $rows.each(function () {\n                const index = api.row(this).index();\n                result.push(tableData[index]);\n            });\n            if (typeof this.datasource.rowHandler === 'function') {\n                return result.map(selectedRow => this.datasource.rowHandler(selectedRow));\n            } else {\n                return result;\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    startSpinner() {\n        if (this.$spinner)\n            this.$spinner.show();\n    }\n\n    stopSpinner() {\n        if (this.$spinner)\n            this.$spinner.hide();\n    }\n\n}\n\n/**\n * Factory function to create a configuration object for the EncodeTrackDatasource given a genomicId and type\n * @param genomeId\n * @param type - 'signals' | 'other\n * @returns {{genomeId: *, selectionHandler: (function(*): *|Uint8Array|BigInt64Array|{color, name, url}[]|Float64Array|Int8Array|Float32Array|Int32Array|Uint32Array|Uint8ClampedArray|BigUint64Array|Int16Array|Uint16Array), hiddenColumns: [string, string, string], addIndexColumn: boolean, parser: undefined, isJSON: boolean, urlPrefix: string, columns: string[], dataSetPath: undefined, titles: {AssayType: string, BioRep: string, OutputType: string, TechRep: string}, suffix: *, dataSetPathPrefix: string}}\n */\nfunction encodeTrackDatasourceConfigurator(genomeId, type) {\n\n    const suffix = ('other' === type ? '.other.txt' : ('signals' === type ? '.signals.txt' : undefined));\n\n    return {\n        isJSON: false,\n        url: `https://s3.amazonaws.com/igv.org.app/encode/${canonicalId(genomeId)}${suffix}`,\n        sort: encodeSort,\n        columns:\n            [\n                //'ID',           // hide\n                //'Assembly',     // hide\n                'Biosample',\n                'AssayType',\n                'Target',\n                'BioRep',\n                'TechRep',\n                'OutputType',\n                'Format',\n                'Lab',\n                //'HREF',         // hide\n                'Accession',\n                'Experiment'\n            ],\n        columnDefs:\n            {\n                AssayType: {title: 'Assay Type'},\n                OutputType: {title: 'Output Type'},\n                BioRep: {title: 'Bio Rep'},\n                TechRep: {title: 'Tech Rep'}\n            },\n\n        rowHandler: row => {\n            const name = constructName(row);\n            const url = `https://www.encodeproject.org${row['HREF']}`;\n            const color = colorForTarget(row['Target']);\n            return {name, url, color}\n        }\n\n    }\n}\n\n\nfunction supportsGenome(genomeId) {\n    const knownGenomes = new Set([\"ce10\", \"ce11\", \"dm3\", \"dm6\", \"GRCh38\", \"hg19\", \"mm9\", \"mm10\"]);\n    const id = canonicalId(genomeId);\n    return knownGenomes.has(id)\n}\n\n\nfunction canonicalId(genomeId) {\n\n    switch (genomeId) {\n        case \"hg38\":\n            return \"GRCh38\"\n        case \"CRCh37\":\n            return \"hg19\"\n        case \"GRCm38\":\n            return \"mm10\"\n        case \"NCBI37\":\n            return \"mm9\"\n        case \"WBcel235\":\n            return \"ce11\"\n        case \"WS220\":\n            return \"ce10\"\n        default:\n            return genomeId\n    }\n}\n\nfunction constructName(record) {\n\n    let name = record[\"Biosample\"] || \"\";\n\n    if (record[\"Target\"]) {\n        name += \" \" + record[\"Target\"];\n    }\n    if (record[\"AssayType\"].toLowerCase() !== \"chip-seq\") {\n        name += \" \" + record[\"AssayType\"];\n    }\n\n\n    return name\n\n}\n\n\nfunction encodeSort(a, b) {\n    var aa1,\n        aa2,\n        cc1,\n        cc2,\n        tt1,\n        tt2;\n\n    aa1 = a['Assay Type'];\n    aa2 = b['Assay Type'];\n    cc1 = a['Biosample'];\n    cc2 = b['Biosample'];\n    tt1 = a['Target'];\n    tt2 = b['Target'];\n\n    if (aa1 === aa2) {\n        if (cc1 === cc2) {\n            if (tt1 === tt2) {\n                return 0;\n            } else if (tt1 < tt2) {\n                return -1;\n            } else {\n                return 1;\n            }\n        } else if (cc1 < cc2) {\n            return -1;\n        } else {\n            return 1;\n        }\n    } else {\n        if (aa1 < aa2) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n}\n\nfunction colorForTarget(target) {\n\n    const t = target.toLowerCase();\n    if (t.startsWith(\"h3k4\")) {\n        return \"rgb(0,150,0)\"\n    } else if (t.startsWith(\"h3k27\")) {\n        return \"rgb(200,0,0)\"\n    } else if (t.startsWith(\"h3k36\")) {\n        return \"rgb(0,0,150)\"\n    } else if (t.startsWith(\"h3k9\")) {\n        return \"rgb(100,0,0)\"\n    } else if (t === \"ctcf\") {\n        return \"black\"\n    } else {\n        return undefined;\n    }\n}\n\nfunction createGenericSelectModal(id, select_id) {\n\n    return `<div id=\"${id}\" class=\"modal\">\n\n                <div class=\"modal-dialog modal-lg\">\n    \n                    <div class=\"modal-content\">\n    \n                        <div class=\"modal-header\">\n                            <div class=\"modal-title\"></div>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                                <span>&times;</span>\n                            </button>\n                        </div>\n            \n                        <div class=\"modal-body\">\n                            <div class=\"form-group\">\n                                <select id=\"${select_id}\" class=\"form-control\" multiple></select>\n                            </div>\n                            <div id=\"igv-widgets-generic-select-modal-footnotes\"></div>\n                        </div>\n                        \n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">OK</button>\n                        </div>\n    \n                    </div>\n    \n                </div>\n\n            </div>`;\n\n}\n\nconst createTrackURLModal = id => {\n\n    const html =\n        `<div id=\"${ id }\" class=\"modal\">\n\n            <div class=\"modal-dialog modal-lg\">\n    \n                <div class=\"modal-content\">\n    \n                    <div class=\"modal-header\">\n                        <div class=\"modal-title\">Track URL</div>\n    \n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                            <span>&times;</span>\n                        </button>\n    \n                    </div>\n    \n                    <div class=\"modal-body\">\n                    </div>\n    \n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">OK</button>\n                    </div>\n    \n                </div>\n    \n            </div>\n\n        </div>`;\n\n    return html;\n};\n\nlet fileLoadWidget;\nlet multipleTrackFileLoad;\nlet encodeModalTables = [];\nlet customModalTable;\nlet $genericSelectModal = undefined;\n\nconst defaultCustomModalTableConfig =\n    {\n        // id: modalID,\n        // title: 'ENCODE',\n        selectionStyle: 'multi',\n        pageLength: 100\n    };\n\nfunction createTrackWidgetsWithTrackRegistry($igvMain,\n                                             $dropdownMenu,\n                                             $localFileInput,\n                                             $dropboxButton,\n                                             googleEnabled,\n                                             $googleDriveButton,\n                                             encodeTrackModalIds,\n                                             urlModalId,\n                                             selectModalIdOrUndefined,\n                                             GtexUtilsOrUndefined,\n                                             trackRegistryFile,\n                                             trackLoadHandler) {\n\n    const $urlModal = $(createTrackURLModal(urlModalId));\n    $igvMain.append($urlModal);\n\n    let fileLoadWidgetConfig =\n        {\n            widgetParent: $urlModal.find('.modal-body').get(0),\n            dataTitle: 'Track',\n            indexTitle: 'Index',\n            mode: 'url',\n            fileLoadManager: new FileLoadManager(),\n            dataOnly: false,\n            doURL: true\n        };\n\n    fileLoadWidget = new FileLoadWidget(fileLoadWidgetConfig);\n\n    configureModal(fileLoadWidget, $urlModal.get(0), async fileLoadWidget => {\n        const paths = fileLoadWidget.retrievePaths();\n        await multipleTrackFileLoad.loadPaths(paths);\n        return true;\n    });\n\n    if (!googleEnabled) {\n        $googleDriveButton.parent().hide();\n    }\n\n    const multipleTrackFileLoadConfig =\n        {\n            $localFileInput,\n            $dropboxButton,\n            $googleDriveButton: googleEnabled ? $googleDriveButton : undefined,\n            fileLoadHandler: trackLoadHandler,\n            multipleFileSelection: true\n        };\n\n    multipleTrackFileLoad = new MultipleTrackFileLoad(multipleTrackFileLoadConfig);\n\n    for (let modalID of encodeTrackModalIds) {\n\n        const encodeModalTableConfig =\n            {\n                id: modalID,\n                title: 'ENCODE',\n                selectionStyle: 'multi',\n                pageLength: 100,\n                okHandler: trackLoadHandler\n            };\n\n        encodeModalTables.push(new ModalTable(encodeModalTableConfig));\n\n    }\n\n    customModalTable = new ModalTable({ id: 'igv-custom-modal', title: 'UNTITLED', okHandler: trackLoadHandler, ...defaultCustomModalTableConfig });\n\n    if (selectModalIdOrUndefined) {\n\n        $genericSelectModal = $(createGenericSelectModal(selectModalIdOrUndefined, `${selectModalIdOrUndefined}-select`));\n\n        $igvMain.append($genericSelectModal);\n        const $select = $genericSelectModal.find('select');\n\n        const $dismiss = $genericSelectModal.find('.modal-footer button:nth-child(1)');\n        $dismiss.on('click', () => $genericSelectModal.modal('hide'));\n\n        const $ok = $genericSelectModal.find('.modal-footer button:nth-child(2)');\n\n        const okHandler = () => {\n\n            const configurations = [];\n            const $selectedOptions = $select.find('option:selected');\n            $selectedOptions.each(function () {\n                //console.log(`You selected ${$(this).val()}`);\n                configurations.push($(this).data('track'));\n                $(this).removeAttr('selected');\n            });\n\n            if (configurations.length > 0) {\n                trackLoadHandler(configurations);\n            }\n\n            $genericSelectModal.modal('hide');\n\n        };\n\n        $ok.on('click', okHandler);\n\n        $genericSelectModal.get(0).addEventListener('keypress', event => {\n            if ('Enter' === event.key) {\n                okHandler();\n            }\n        });\n\n    }\n\n}\n\nasync function updateTrackMenus(genomeID, GtexUtilsOrUndefined, trackRegistryFile, $dropdownMenu) {\n\n    const id_prefix = 'genome_specific_';\n\n    const $divider = $dropdownMenu.find('.dropdown-divider');\n\n    const searchString = '[id^=' + id_prefix + ']';\n    const $found = $dropdownMenu.find(searchString);\n    $found.remove();\n\n    const paths = await getPathsWithTrackRegistryFile(genomeID, trackRegistryFile);\n\n    if (undefined === paths) {\n        console.warn(`There are no tracks in the track registryy for genome ${genomeID}`);\n        return;\n    }\n\n    let responses = [];\n    try {\n        responses = await Promise.all(paths.map(path => fetch(path)));\n    } catch (e) {\n        AlertSingleton$1.present(e.message);\n    }\n\n    let jsons = [];\n    try {\n        jsons = await Promise.all(responses.map(response => response.json()));\n    } catch (e) {\n        AlertSingleton$1.present(e.message);\n    }\n\n    let buttonConfigurations = [];\n\n    for (let json of jsons) {\n\n        if (true === supportsGenome(genomeID) && 'ENCODE' === json.type) {\n            encodeModalTables[0].setDatasource(new GenericDataSource(encodeTrackDatasourceConfigurator(genomeID, 'signals')));\n            encodeModalTables[1].setDatasource(new GenericDataSource(encodeTrackDatasourceConfigurator(genomeID, 'other')));\n        } else if (GtexUtilsOrUndefined && 'GTEX' === json.type) {\n\n            let info = undefined;\n            try {\n                info = await GtexUtilsOrUndefined.getTissueInfo(json.datasetId);\n            } catch (e) {\n                AlertSingleton$1.present(e.message);\n            }\n\n            if (info) {\n                json.tracks = info.tissueInfo.map(tissue => GtexUtilsOrUndefined.trackConfiguration(tissue));\n            }\n\n        }\n\n        buttonConfigurations.push(json);\n\n    } // for(jsons)\n\n    for (let buttonConfiguration of buttonConfigurations.reverse()) {\n\n        if (buttonConfiguration.type && 'custom-data-modal' === buttonConfiguration.type) {\n\n            if (buttonConfiguration.description) {\n                customModalTable.setDescription(buttonConfiguration.description);\n            }\n\n            createDropdownButton($divider, buttonConfiguration.label, id_prefix)\n                .on('click', () => {\n                    customModalTable.setDatasource(new GenericDataSource(buttonConfiguration));\n                    customModalTable.setTitle(buttonConfiguration.label);\n                    customModalTable.$modal.modal('show');\n                });\n\n        } else if (buttonConfiguration.type && 'ENCODE' === buttonConfiguration.type) {\n\n            if (true === supportsGenome(genomeID)) {\n\n                if (buttonConfiguration.description) {\n                    encodeModalTables[0].setDescription(buttonConfiguration.description);\n                    encodeModalTables[1].setDescription(buttonConfiguration.description);\n                }\n\n                createDropdownButton($divider, 'ENCODE Other', id_prefix)\n                    .on('click', () => {\n                        encodeModalTables[1].$modal.modal('show');\n                    });\n\n                createDropdownButton($divider, 'ENCODE Signals', id_prefix)\n                    .on('click', () => {\n                        encodeModalTables[0].$modal.modal('show');\n                    });\n\n            }\n\n        } else if ($genericSelectModal) {\n\n            createDropdownButton($divider, buttonConfiguration.label, id_prefix)\n                .on('click', () => {\n                    configureSelectModal($genericSelectModal, buttonConfiguration);\n                    $genericSelectModal.modal('show');\n                });\n\n        }\n    } // for (buttonConfigurations)\n\n}\n\nfunction createDropdownButton($divider, buttonText, id_prefix) {\n    const $button = $('<button>', {class: 'dropdown-item', type: 'button'});\n    $button.text(`${buttonText} ...`);\n    $button.attr('id', `${id_prefix}${buttonText.toLowerCase().split(' ').join('_')}`);\n    $button.insertAfter($divider);\n    return $button\n}\n\nfunction configureSelectModal($genericSelectModal, buttonConfiguration) {\n\n    $genericSelectModal.find('.modal-title').text(`${buttonConfiguration.label}`);\n\n    let $select = $genericSelectModal.find('select');\n    $select.empty();\n\n    buttonConfiguration.tracks.reduce(($accumulator, configuration) => {\n\n        const $option = $('<option>', {value: configuration.name, text: configuration.name});\n        $select.append($option);\n\n        $option.data('track', configuration);\n\n        $accumulator.append($option);\n\n        return $accumulator;\n    }, $select);\n\n    if (buttonConfiguration.description) {\n        $genericSelectModal.find('#igv-widgets-generic-select-modal-footnotes').html(buttonConfiguration.description);\n    }\n\n}\n\nasync function getPathsWithTrackRegistryFile(genomeID, trackRegistryFile) {\n\n    let response = undefined;\n    try {\n        response = await fetch(trackRegistryFile);\n    } catch (e) {\n        console.error(e);\n    }\n\n    let trackRegistry = undefined;\n    if (response) {\n        trackRegistry = await response.json();\n    } else {\n        const e = new Error(\"Error retrieving registry via getPathsWithTrackRegistryFile()\");\n        AlertSingleton$1.present(e.message);\n        throw e;\n    }\n\n    return trackRegistry[genomeID]\n\n}\n\nconst dropboxButtonImageLiteral =\n    `<svg width=\"75px\" height=\"64px\" viewBox=\"0 0 75 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <title>Shape</title>\n        <desc>Created with Sketch.</desc>\n        <defs></defs>\n        <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"dropbox\" fill=\"#0061FF\" fill-rule=\"nonzero\">\n                <path d=\"M37.6,12 L18.8,24 L37.6,36 L18.8,48 L1.42108547e-14,35.9 L18.8,23.9 L1.42108547e-14,12 L18.8,0 L37.6,12 Z M18.7,51.8 L37.5,39.8 L56.3,51.8 L37.5,63.8 L18.7,51.8 Z M37.6,35.9 L56.4,23.9 L37.6,12 L56.3,0 L75.1,12 L56.3,24 L75.1,36 L56.3,48 L37.6,35.9 Z\" id=\"Shape\"></path>\n            </g>\n        </g>\n    </svg>`;\n\nconst googleDriveImageLiteral =\n    `<svg viewBox=\"0 0 139 120.4\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><radialGradient id=\"a\" cx=\"-254.81979\" cy=\"705.83588\" gradientTransform=\"matrix(2.827 1.6322 -1.6322 2.827 2092.1199 -1494.5786)\" gradientUnits=\"userSpaceOnUse\" r=\"82.978401\"><stop offset=\"0\" stop-color=\"#4387fd\"/><stop offset=\".65\" stop-color=\"#3078f0\"/><stop offset=\".9099\" stop-color=\"#2b72ea\"/><stop offset=\"1\" stop-color=\"#286ee6\"/></radialGradient><radialGradient id=\"b\" cx=\"-254.8174\" cy=\"705.83691\" gradientTransform=\"matrix(2.827 1.6322 -1.6322 2.827 2092.1199 -1494.5786)\" gradientUnits=\"userSpaceOnUse\" r=\"82.973\"><stop offset=\"0\" stop-color=\"#ffd24d\"/><stop offset=\"1\" stop-color=\"#f6c338\"/></radialGradient><path d=\"m24.2 120.4-24.2-41.9 45.3-78.5 24.2 41.9z\" fill=\"#0da960\"/><path d=\"m24.2 120.4 24.2-41.9h90.6l-24.2 41.9z\" fill=\"url(#a)\"/><path d=\"m139 78.5h-48.4l-45.3-78.5h48.4z\" fill=\"url(#b)\"/><path d=\"m69.5 78.5h-21.1l10.5-18.3-34.7 60.2z\" fill=\"#2d6fdd\"/><path d=\"m90.6 78.5h48.4l-58.9-18.3z\" fill=\"#e5b93c\"/><path d=\"m58.9 60.2 10.6-18.3-24.2-41.9z\" fill=\"#0c9b57\"/></svg>`;\n\nconst dropboxButtonImageBase64 = () => window.btoa(dropboxButtonImageLiteral);\n\nconst googleDriveButtonImageBase64 = () => window.btoa(googleDriveImageLiteral);\n\nconst dropboxDropdownItem = id => {\n\n    return `<div class=\"dropdown-item\">\n                <div id=\"${ id }\" class=\"igv-app-dropdown-item-cloud-storage\">\n                    <div>Dropbox File</div>\n                    <div>\n                        <img src=\"data:image/svg+xml;base64,${ dropboxButtonImageBase64() }\" width=\"18\" height=\"18\">\n                    </div>\n                </div>\n            </div>`\n};\n\nconst googleDriveDropdownItem = id => {\n\n    return `<div class=\"dropdown-item\">\n                <div id=\"${ id }\" class=\"igv-app-dropdown-item-cloud-storage\">\n                    <div>Google Drive File</div>\n                    <div>\n                        <img src=\"data:image/svg+xml;base64,${ googleDriveButtonImageBase64() }\" width=\"18\" height=\"18\">\n                    </div>\n                </div>\n            </div>`\n};\n\nfunction embedCSS() {\n\n    var css =  '.igv-widgets-alert-dialog-container {\\n  box-sizing: content-box;\\n  position: absolute;\\n  z-index: 2048;\\n  top: 50%;\\n  left: 50%;\\n  width: 400px;\\n  height: 200px;\\n  border-color: #7F7F7F;\\n  border-radius: 4px;\\n  border-style: solid;\\n  border-width: thin;\\n  outline: none;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400;\\n  background-color: white;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center; }\\n  .igv-widgets-alert-dialog-container > div:first-child {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    align-items: center;\\n    width: 100%;\\n    height: 24px;\\n    cursor: move;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-color: #7F7F7F;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin;\\n    background-color: #eee; }\\n    .igv-widgets-alert-dialog-container > div:first-child div:first-child {\\n      padding-left: 8px; }\\n  .igv-widgets-alert-dialog-container #igv-widgets-alert-dialog-body {\\n    color: #373737;\\n    width: 100%;\\n    height: calc(100% - 24px - 64px);\\n    overflow-y: scroll; }\\n    .igv-widgets-alert-dialog-container #igv-widgets-alert-dialog-body #igv-widgets-alert-dialog-body-copy {\\n      cursor: pointer;\\n      margin: 16px;\\n      width: auto;\\n      height: auto;\\n      overflow-wrap: break-word;\\n      word-break: break-word;\\n      background-color: white;\\n      border: unset; }\\n  .igv-widgets-alert-dialog-container > div:last-child {\\n    width: 100%;\\n    margin-bottom: 10px;\\n    background-color: white;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: center;\\n    align-items: center; }\\n    .igv-widgets-alert-dialog-container > div:last-child div {\\n      margin: unset;\\n      width: 40px;\\n      height: 30px;\\n      line-height: 30px;\\n      text-align: center;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: small;\\n      font-weight: 400;\\n      border-color: #2B81AF;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 4px;\\n      background-color: #2B81AF; }\\n    .igv-widgets-alert-dialog-container > div:last-child div:hover {\\n      cursor: pointer;\\n      border-color: #25597f;\\n      background-color: #25597f; }\\n\\n.igv-file-load-widget-container {\\n  position: relative;\\n  border-color: transparent;\\n  width: 100%;\\n  color: #7F7F7F;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 0.875rem;\\n  font-weight: 200;\\n  border-style: solid;\\n  border-width: thin;\\n  background-color: white;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-file-load-widget-container .igv-file-load-widget-header {\\n    width: 100%;\\n    height: 24px;\\n    background-color: #bfbfbf;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center; }\\n    .igv-file-load-widget-container .igv-file-load-widget-header div {\\n      height: 24px;\\n      width: 16px;\\n      margin-right: 6px;\\n      text-align: center;\\n      line-height: 24px;\\n      color: #373737; }\\n    .igv-file-load-widget-container .igv-file-load-widget-header div:hover {\\n      cursor: pointer; }\\n  .igv-file-load-widget-container .igv-flw-input-container {\\n    width: 95%;\\n    margin-top: 24px;\\n    margin-bottom: 0;\\n    display: flex;\\n    flex-flow: column;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    align-items: center; }\\n    .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row {\\n      height: 36px;\\n      width: 100%;\\n      margin-top: 8px;\\n      padding-top: 4px;\\n      padding-bottom: 4px;\\n      display: flex;\\n      flex-flow: row;\\n      flex-wrap: nowrap;\\n      justify-content: flex-start;\\n      align-items: center;\\n      border-color: white;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: calc(2 * 2px); }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-input-label {\\n        color: #6c757c;\\n        font-weight: 400;\\n        width: 136px;\\n        height: 36px;\\n        line-height: 36px;\\n        text-align: left; }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row input {\\n        display: block;\\n        height: 100%;\\n        width: 100%;\\n        padding-left: 4px;\\n        color: #373737;\\n        font-size: 0.875rem;\\n        font-family: \\\"Open Sans\\\", sans-serif;\\n        font-weight: 400;\\n        text-align: left;\\n        outline: none;\\n        border-style: solid;\\n        border-width: thin;\\n        border-color: #dee2e6;\\n        border-radius: .25rem;\\n        background-color: white; }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row input {\\n        height: calc(36px - 12px); }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-file-chooser-container {\\n        display: flex;\\n        flex-flow: row;\\n        justify-content: center;\\n        align-items: center;\\n        width: 130px;\\n        height: calc(36px - 8px);\\n        border-color: #6c757c;\\n        border-style: solid;\\n        border-width: thin;\\n        border-radius: calc(2 * 2px);\\n        background-color: white; }\\n        .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-file-chooser-container label {\\n          display: block;\\n          margin: unset; }\\n        .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-file-chooser-container label.igv-flw-label-color {\\n          color: #6c757c; }\\n        .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-file-chooser-container label.igv-flw-label-color-hover {\\n          cursor: pointer; }\\n        .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-file-chooser-container input.igv-flw-file-chooser-input {\\n          width: 0.1px;\\n          height: 0.1px;\\n          opacity: 0;\\n          overflow: hidden;\\n          position: absolute;\\n          z-index: -1; }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-file-chooser-container:hover {\\n        cursor: pointer;\\n        background-color: #6c757c; }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-drag-drop-target {\\n        cursor: default;\\n        margin-left: 8px;\\n        width: 120px;\\n        height: calc(36px - 8px);\\n        line-height: calc(36px - 8px);\\n        text-align: center;\\n        border-color: #7F7F7F;\\n        border-style: dashed;\\n        border-width: thin;\\n        border-radius: calc(2 * 2px); }\\n      .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row .igv-flw-local-file-name-container {\\n        max-width: 400px;\\n        height: 36px;\\n        color: #373737;\\n        line-height: 36px;\\n        text-align: left;\\n        font-weight: 400;\\n        margin-left: 8px;\\n        white-space: nowrap;\\n        overflow: hidden;\\n        text-overflow: ellipsis; }\\n    .igv-file-load-widget-container .igv-flw-input-container .igv-flw-input-row-hover-state {\\n      background-color: #efefef;\\n      border-color: #7F7F7F; }\\n  .igv-file-load-widget-container .igv-flw-error-message-container {\\n    margin-top: 8px;\\n    width: 95%;\\n    height: 24px;\\n    padding-left: 8px;\\n    color: white;\\n    font-size: 0.875rem;\\n    background-color: rgba(59, 92, 127, 0.5);\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-between;\\n    align-items: center; }\\n    .igv-file-load-widget-container .igv-flw-error-message-container div:first-child.igv-flw-error-message {\\n      height: 24px;\\n      width: 600px;\\n      font-style: italic;\\n      line-height: 24px;\\n      text-align: left; }\\n    .igv-file-load-widget-container .igv-flw-error-message-container div:last-child {\\n      height: 24px;\\n      width: 16px;\\n      margin-right: 6px;\\n      text-align: center;\\n      line-height: 24px;\\n      color: #373737; }\\n    .igv-file-load-widget-container .igv-flw-error-message-container div:hover {\\n      cursor: pointer; }\\n  .igv-file-load-widget-container .igv-file-load-widget-ok-cancel {\\n    width: 100%;\\n    height: 28px;\\n    margin-top: 32px;\\n    color: white;\\n    font-size: 0.875rem;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center; }\\n    .igv-file-load-widget-container .igv-file-load-widget-ok-cancel div {\\n      width: 75px;\\n      height: 28px;\\n      line-height: 28px;\\n      text-align: center;\\n      border-color: transparent;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 2px;\\n      margin-right: 16px; }\\n    .igv-file-load-widget-container .igv-file-load-widget-ok-cancel div:first-child {\\n      margin-right: 22px;\\n      background-color: #c4c4c4; }\\n    .igv-file-load-widget-container .igv-file-load-widget-ok-cancel div:first-child:hover {\\n      cursor: pointer;\\n      background-color: #7f7f7f; }\\n    .igv-file-load-widget-container .igv-file-load-widget-ok-cancel div:last-child {\\n      background-color: #5ea4e0; }\\n    .igv-file-load-widget-container .igv-file-load-widget-ok-cancel div:last-child:hover {\\n      cursor: pointer;\\n      background-color: #3b5c7f; }\\n\\n/*# sourceMappingURL=igv-widgets.css.map */\\n';\n\n    var style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.innerHTML = css;\n\n    document.head.insertBefore(style, document.head.childNodes[ document.head.childNodes.length - 1 ]);\n\n}\n\nif(typeof document !== 'undefined') {\n    if (!stylesheetExists(\"igv-widgets.css\")) {\n        //console.log('igv-widgets. will call embedCSS(igv-widgets.css) ...');\n        embedCSS();\n        //console.log('... done.');\n    }\n    function stylesheetExists(stylesheetName) {\n        for (let ss of document.styleSheets) {\n            ss = ss.href ? ss.href.replace(/^.*[\\\\\\/]/, '') : '';\n            if (ss === stylesheetName) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nexport { AlertSingleton$1 as AlertSingleton, EventBus, FileLoad, FileLoadManager, FileLoadWidget, GenomeFileLoad, MultipleTrackFileLoad, QRCode, SessionController, SessionFileLoad, utils as Utils, createGenericSelectModal, createSessionWidgets, createTrackURLModal, createTrackWidgetsWithTrackRegistry, createURLModal, dropboxButtonImageBase64, dropboxDropdownItem, googleDriveButtonImageBase64, googleDriveDropdownItem, updateTrackMenus };\n","const Globals = {};\n\nexport default Globals;","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport { igvxhr } from '../node_modules/igv-utils/src/index.js';\nimport {AlertSingleton, createURLModal,EventBus,FileLoadManager,FileLoadWidget,GenomeFileLoad,Utils} from '../node_modules/igv-widgets/dist/igv-widgets.js'\nimport Globals from \"./globals.js\";\n\nlet fileLoadWidget;\n\nfunction creatGenomeWidgets({$igvMain, urlModalId, genomeFileLoad}) {\n\n    const $urlModal = $(createURLModal(urlModalId, 'Genome URL'))\n    $igvMain.append($urlModal);\n\n    let config =\n        {\n            widgetParent: $urlModal.find('.modal-body').get(0),\n            dataTitle: 'Genome',\n            indexTitle: 'Index',\n            mode: 'url',\n            fileLoadManager: new FileLoadManager(),\n            dataOnly: false,\n            doURL: true\n        };\n\n    fileLoadWidget = new FileLoadWidget(config);\n\n    Utils.configureModal(fileLoadWidget, $urlModal.get(0), async fileLoadWidget => {\n        await genomeFileLoad.loadPaths(fileLoadWidget.retrievePaths());\n        return true;\n    });\n}\n\nasync function initializeGenomeWidgets(browser, genomes, $dropdown_menu) {\n    try {\n\n        const genomeMap = await getAppLaunchGenomes(genomes);\n\n        if (genomeMap) {\n            genomeDropdownLayout({ browser, genomeMap, $dropdown_menu });\n        }\n\n    } catch (e) {\n        AlertSingleton.present(e.message)\n    }\n}\n\nasync function getAppLaunchGenomes(genomes) {\n\n    if (undefined === genomes) {\n        return undefined;\n    }\n\n    if (Array.isArray(genomes)) {\n        return buildMap(genomes);\n    } else {\n\n        let response = undefined;\n        try {\n            response = await fetch(genomes);\n        } catch (e) {\n            AlertSingleton.present(e.message);\n        }\n\n        if (response) {\n            let json = await response.json();\n            return buildMap(json);\n        }\n\n    }\n}\n\nfunction buildMap(arrayOrJson) {\n\n    const map = new Map()\n\n    if (true === Array.isArray(arrayOrJson)) {\n\n        for (let json of arrayOrJson.reverse()) {\n            map.set(json.id, json)\n        }\n\n    } else {\n        map.set(arrayOrJson.id, arrayOrJson)\n    }\n\n    return map\n}\n\nfunction genomeDropdownLayout({browser, genomeMap, $dropdown_menu}) {\n\n    // discard all buttons preceeding the divider div\n    let $divider = $dropdown_menu.find('.dropdown-divider');\n    $divider.nextAll().remove();\n\n    for (let [ key, value ] of genomeMap) {\n\n        const $button = createButton(value.name);\n        $button.insertAfter($divider);\n\n        $button.data('id', key);\n\n        const str = `click.genome-dropdown.${ key }`;\n\n        $button.on(str, async () => {\n\n            const id = $button.data('id');\n\n            if (id !== browser.genome.id) {\n                await loadGenome( value );\n            }\n\n        });\n\n    } // for (...)\n\n    function createButton(title) {\n\n        let $button = $('<button>', {class: 'dropdown-item', type: 'button'});\n        $button.text(title);\n\n        return $button;\n    }\n\n}\n\nfunction genomeWidgetConfigurator(googleEnabled) {\n\n    const genomeFileLoadConfig =\n        {\n            localFileInput: document.getElementById('igv-app-dropdown-local-genome-file-input'),\n            dropboxButton: document.getElementById('igv-app-dropdown-dropbox-genome-file-button'),\n            googleEnabled,\n            googleDriveButton: document.getElementById('igv-app-dropdown-google-drive-genome-file-button'),\n            loadHandler: async configuration => {\n                await loadGenome(configuration);\n            },\n            igvxhr\n\n        };\n\n    const genomeFileLoad = new GenomeFileLoad(genomeFileLoadConfig);\n\n    return {$igvMain: $('#igv-main'), urlModalId: 'igv-app-genome-from-url-modal', genomeFileLoad}\n}\n\nasync function loadGenome(genome) {\n\n    let g = undefined;\n    try {\n        if(genome.tracks) {\n            genome.tracks.push({type: \"sequence\", order: Number.MIN_SAFE_INTEGER})\n        } else {\n            genome.tracks = [{type: \"sequence\", order: Number.MIN_SAFE_INTEGER}]\n        }\n        g = await Globals.browser.loadGenome(genome);\n        if(g.id) {\n            localStorage.setItem(\"genomeID\", g.id);\n        }\n\n    } catch (e) {\n        AlertSingleton.present(e.message);\n    }\n\n    if (g) {\n        EventBus.globalBus.post({type: \"DidChangeGenome\", data: g.id});\n    }\n}\n\nexport {creatGenomeWidgets, initializeGenomeWidgets, genomeWidgetConfigurator}\n\n","/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nimport {AlertSingleton} from '../node_modules/igv-widgets/dist/igv-widgets.js'\nimport {bitlyShortener, googleShortener, tinyURLShortener} from \"./urlShortener.js\";\nimport Globals from \"./globals.js\";\n\nlet urlShortener;\n\nexport function setURLShortener(obj) {\n\n    let fn;\n    if (typeof obj === \"function\") {\n        fn = obj;\n\n    } else if (obj.provider) {\n        if (\"tinyURL\" === obj.provider) {\n            fn = tinyURLShortener(obj);\n        } else if (\"bitly\" === obj.provider && obj.apiKey) {\n            fn = bitlyShortener(obj.apiKey);\n        } else if (\"google\" === obj.provider && obj.apiKey) {\n            fn = googleShortener(obj.apiKey);\n        } else {\n            AlertSingleton.present(new Error(`Unknown URL shortener provider: ${obj.provider}`));\n        }\n    } else {\n        AlertSingleton.present(new Error('URL shortener object must either be an object specifying a provider and apiKey, or a function'))\n    }\n\n    if (fn) {\n        urlShortener =\n            {\n                shortenURL: fn\n            }\n    }\n\n    return fn;\n\n}\n\nexport function sessionURL() {\n\n    let surl,\n        path,\n        idx;\n\n    path = window.location.href.slice();\n    idx = path.indexOf(\"?\");\n\n    surl = (idx > 0 ? path.substring(0, idx) : path) + \"?sessionURL=blob:\" + Globals.browser.compressedSession();\n\n    return surl;\n}\n\nexport function shortSessionURL(base, session) {\n\n    const url = base + \"?sessionURL=blob:\" + session;\n\n    return shortenURL(url)\n\n}\n\nfunction shortenURL(url) {\n    if (urlShortener) {\n        return urlShortener.shortenURL(url);\n    } else {\n        return Promise.resolve(url);\n    }\n}\n","/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nimport { igvxhr } from '../node_modules/igv-utils/src/index.js';\n\nfunction bitlyShortener(accessToken) {\n\n    if (!accessToken || accessToken === \"BITLY_TOKEN\") {\n        return undefined;\n    } else {\n        return async function (url) {\n            const api = \"https://api-ssl.bitly.com/v3/shorten\";\n            const devIP = \"192.168.1.11\";\n            if (url.startsWith(\"http://localhost\")) {\n                url = url.replace(\"localhost\", devIP);\n            }  // Dev hack\n            let endpoint = api + \"?access_token=\" + accessToken + \"&longUrl=\" + encodeURIComponent(url);\n            return igvxhr.loadJson(endpoint, {})\n                .then(function (json) {\n                    return json.data.url;\n                })\n        }\n    }\n\n}\n\nfunction googleShortener(apiKey) {\n    if (!apiKey || apiKey === \"API_KEY\") {\n        return undefined;\n    } else {\n        return async function (url) {\n            const api = \"https://www.googleapis.com/urlshortener/v1/url\";\n            const endpoint = api + \"?key=\" + apiKey;\n            return igvxhr\n                .loadJson(endpoint, {sendData: JSON.stringify({\"longUrl\": url}), contentType: \"application/json\"})\n                .then(function (json) {\n                    return json.id;\n                })\n        }\n    }\n}\n\nfunction tinyURLShortener({endpoint}) {\n    endpoint = endpoint || \"https://2et6uxfezb.execute-api.us-east-1.amazonaws.com/dev/tinyurl/\"\n    return async function (url) {\n        const enc = encodeURIComponent(url);\n        const response = await fetch(`${endpoint}${enc}`);\n        if (response.ok) {\n            return response.text();\n        } else {\n            throw new Error(response.statusText);\n        }\n    }\n}\n\nexport {bitlyShortener, googleShortener, tinyURLShortener}\n","/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nimport { GoogleAuth} from '../node_modules/igv-utils/src/index.js';\nimport { AlertSingleton, createSessionWidgets, createTrackWidgetsWithTrackRegistry, updateTrackMenus, dropboxButtonImageBase64, dropboxDropdownItem, EventBus, googleDriveButtonImageBase64, googleDriveDropdownItem } from '../node_modules/igv-widgets/dist/igv-widgets.js'\nimport Globals from \"./globals.js\"\nimport {creatGenomeWidgets, genomeWidgetConfigurator, initializeGenomeWidgets} from './genomeWidgets.js';\nimport {createShareWidgets, shareWidgetConfigurator} from './shareWidgets.js';\nimport {sessionURL} from './shareHelper.js';\nimport {createSVGWidget} from './svgWidget.js';\nimport GtexUtils from \"./gtexUtils.js\";\nimport version from \"./version.js\";\n\n$(document).ready(async () => main($('#igv-app-container'), igvwebConfig));\n\nlet googleEnabled = false;\nlet currentGenomeId\n\nasync function main($container, config) {\n\n    AlertSingleton.init($container.get(0))\n\n    $('#igv-app-version').text(`IGV-Web app version ${version()}`)\n    $('#igv-igvjs-version').text(`igv.js version ${igv.version()}`)\n\n    const enableGoogle = (config.clientId  || config.apiKey) &&\n        (window.location.protocol === \"https:\" || window.location.host === \"localhost\");\n\n    if (enableGoogle) {\n        try {\n            await GoogleAuth.init({\n                client_id: config.clientId,\n                apiKey: config.apiKey,\n                scope: 'https://www.googleapis.com/auth/userinfo.profile',\n            })\n            await GoogleAuth.signOut();   // The await is important !!!\n            googleEnabled = true;\n        } catch (e) {\n            console.error(e);\n            AlertSingleton.present(e.message)\n        }\n    }\n\n    // Load genomes for use by igv.js and webapp\n    if (config.genomes) {\n        let tmp = await getGenomesArray(config.genomes);\n        config.genomes = tmp;\n        config.igvConfig.genomes = tmp;\n    }\n\n    const igvConfig = config.igvConfig;\n\n    if(config.restoreLastGenome) {\n        const lastGenomeId = localStorage.getItem(\"genomeID\");\n        if (lastGenomeId && lastGenomeId !== igvConfig.genome) {\n            igvConfig.genome = lastGenomeId;\n            igvConfig.tracks = [];\n        }\n    }\n\n    const browser = await igv.createBrowser($container.get(0), igvConfig);\n\n    if (browser) {\n        Globals.browser = browser;\n        await initializationHelper(browser, $container, config);\n    }\n}\n\nasync function initializationHelper(browser, $container, options) {\n\n    ['track', 'genome'].forEach(str => {\n        let imgElement;\n\n        imgElement = document.querySelector(`img#igv-app-${str}-dropbox-button-image`);\n        imgElement.src = `data:image/svg+xml;base64,${dropboxButtonImageBase64()}`;\n\n        imgElement = document.querySelector(`img#igv-app-${str}-google-drive-button-image`);\n        imgElement.src = `data:image/svg+xml;base64,${googleDriveButtonImageBase64()}`;\n    })\n\n    // Session - Dropbox and Google Drive buttons\n    $('div#igv-session-dropdown-menu > :nth-child(1)').after(dropboxDropdownItem('igv-app-dropdown-dropbox-session-file-button'));\n    $('div#igv-session-dropdown-menu > :nth-child(2)').after(googleDriveDropdownItem('igv-app-dropdown-google-drive-session-file-button'));\n\n    creatGenomeWidgets(genomeWidgetConfigurator(googleEnabled))\n    await initializeGenomeWidgets(browser, options.genomes, $('#igv-app-genome-dropdown-menu'))\n\n    const $main = $('#igv-main')\n\n    const trackLoader = async configurations => {\n        try {\n            await browser.loadTrackList(configurations)\n        } catch (e) {\n            AlertSingleton.present(e.message)\n        }\n    }\n\n    createTrackWidgetsWithTrackRegistry($main,\n        $('#igv-app-track-dropdown-menu'),\n        $('#igv-app-dropdown-local-track-file-input'),\n        $('#igv-app-dropdown-dropbox-track-file-button'),\n        googleEnabled,\n        $('#igv-app-dropdown-google-drive-track-file-button'),\n        ['igv-app-encode-signal-modal', 'igv-app-encode-others-modal'],\n        'igv-app-track-from-url-modal',\n        'igv-app-track-select-modal',\n        GtexUtils,\n        options.trackRegistryFile,\n        trackLoader);\n\n    const sessionSaver = () => {\n        try {\n            return browser.toJSON();\n        } catch (e) {\n            AlertSingleton.present(e.message)\n            return undefined\n        }\n    }\n\n    const sessionLoader = async config => {\n        try {\n            await browser.loadSession(config)\n        } catch (e) {\n            AlertSingleton.present(e.message)\n        }\n    }\n\n    createSessionWidgets($main,\n        'igv-webapp',\n        'igv-app-dropdown-local-session-file-input',\n        'igv-app-dropdown-dropbox-session-file-button',\n        'igv-app-dropdown-google-drive-session-file-button',\n        'igv-app-session-url-modal',\n        'igv-app-session-save-modal',\n        googleEnabled,\n        sessionLoader,\n        sessionSaver);\n\n    createSVGWidget({browser, $saveModal: $('#igv-app-svg-save-modal')})\n\n    createShareWidgets(shareWidgetConfigurator(browser, $container, options));\n\n    createAppBookmarkHandler($('#igv-app-bookmark-button'));\n\n    const genomeChangeListener = event => {\n\n        const { data:genomeID } = event;\n\n        if (currentGenomeId !== genomeID) {\n\n            currentGenomeId = genomeID;\n\n            updateTrackMenus(genomeID, undefined, options.trackRegistryFile, $('#igv-app-track-dropdown-menu'))\n\n        }\n    }\n\n    EventBus.globalBus.subscribe(\"DidChangeGenome\", genomeChangeListener)\n\n    EventBus.globalBus.post({type: \"DidChangeGenome\", data: browser.genome.id});\n}\n\nfunction createAppBookmarkHandler($bookmark_button) {\n\n    $bookmark_button.on('click', (e) => {\n\n        let url = undefined\n        try {\n            url = sessionURL()\n        } catch (e) {\n            AlertSingleton.present(e.message)\n        }\n\n        if (url) {\n            window.history.pushState({}, \"IGV\", url);\n\n            const str = (/Mac/i.test(navigator.userAgent) ? 'Cmd' : 'Ctrl');\n            const blurb = 'A bookmark URL has been created. Press ' + str + '+D to save.';\n            alert(blurb);\n        }\n    })\n}\n\nasync function getGenomesArray(genomes) {\n\n    if (undefined === genomes) {\n        return undefined;\n    }\n    if (Array.isArray(genomes)) {\n        return genomes;\n    } else {\n\n        let response = undefined;\n        try {\n            response = await fetch(genomes);\n            return response.json();\n        } catch (e) {\n            AlertSingleton.present(e.message);\n        }\n    }\n}\n\nexport {main}\n","/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n\nfunction createSVGWidget ({ browser, $saveModal }) {\n\n    const input_default_value = 'igv-app.svg';\n\n    let $input = $saveModal.find('input');\n\n    $saveModal.on('show.bs.modal', (e) => {\n        $input.val(input_default_value);\n    });\n\n    $saveModal.on('hidden.bs.modal', (e) => {\n        $input.val(input_default_value);\n    });\n\n    let okHandler = () => {\n\n        let fn = $input.val();\n\n        const extensions = new Set(['svg']);\n\n        if (undefined === fn || '' === fn) {\n\n            fn = $input.attr('placeholder');\n        } else if (!fn.endsWith(\".svg\")) {\n            fn = fn + '.svg';\n        }\n\n        // dismiss modal\n        $saveModal.modal('hide');\n\n        browser.saveSVGtoFile({ filename: fn });\n    };\n\n    // ok - button\n    let $ok = $saveModal.find('.modal-footer button:nth-child(2)');\n\n    $ok.on('click', okHandler);\n\n    $input.on('keyup', (e) => {\n        if (13 === e.keyCode) {\n            okHandler();\n        }\n    });\n\n    // upper dismiss - x - button\n    let $dismiss = $saveModal.find('.modal-header button:nth-child(1)');\n    $dismiss.on('click', function () {\n        $saveModal.modal('hide');\n    });\n\n    // lower dismiss - close - button\n    $dismiss = $saveModal.find('.modal-footer button:nth-child(1)');\n    $dismiss.on('click', function () {\n        $saveModal.modal('hide');\n    });\n\n}\n\nexport { createSVGWidget }\n","/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nimport {AlertSingleton, QRCode} from '../node_modules/igv-widgets/dist/igv-widgets.js'\nimport {setURLShortener, shortSessionURL} from './shareHelper.js'\n\nfunction createShareWidgets({browser, $container, $modal, $share_input, $copy_link_button, $tweet_button_container, $email_button, $qrcode_button, $qrcode_image, $embed_container, $embed_button, embedTarget}) {\n\n    if (undefined === embedTarget) {\n        embedTarget = `https://igv.org/web/release/${igv.version()}/embed.html`;\n    }\n\n    $modal.on('shown.bs.modal', async function (e) {\n\n        let href = window.location.href.slice();\n        const idx = href.indexOf(\"?\");\n        if (idx > 0) {\n            href = href.substring(0, idx);\n        }\n\n        let session = undefined\n        try {\n            session = browser.compressedSession();\n        } catch (e) {\n            AlertSingleton.present(e.message)\n        }\n\n        if (session) {\n\n            if (embedTarget) {\n                const snippet = getEmbeddableSnippet($container, embedTarget, session);\n                $embed_container.find('textarea').val(snippet);\n                $embed_container.find('textarea').get(0).select();\n            }\n\n            const shortURL = await shortSessionURL(href, session);\n            $share_input.val(shortURL);\n            $share_input.get(0).select();\n            $email_button.attr('href', 'mailto:?body=' + shortURL);\n\n            // QR code generation\n            $qrcode_image.empty();\n            const obj =\n                {\n                    width: 128,\n                    height: 128,\n                    correctLevel: QRCode.CorrectLevel.H\n                };\n\n            const qrcode = new QRCode($qrcode_image.get(0), obj);\n            qrcode.makeCode(shortURL);\n\n            if ($tweet_button_container) {\n                $tweet_button_container.empty();\n                const obj = {text: ''};\n                window.twttr.widgets.createShareButton(shortURL, $tweet_button_container.get(0), obj);\n            }\n        } else {\n            $modal.modal('hide');\n        }\n\n    });\n\n    $modal.on('hidden.bs.modal', function (e) {\n        $embed_container.hide();\n        $qrcode_image.hide();\n    });\n\n    $copy_link_button.on('click', function (e) {\n        $share_input.get(0).select();\n        const success = document.execCommand('copy');\n        if (success) {\n            $modal.modal('hide');\n        } else {\n            console.log('fail!');\n        }\n    });\n\n\n    if (undefined === embedTarget) {\n        $embed_button.hide();\n    } else {\n        $embed_container.find('button').on('click', function (e) {\n            var success;\n\n            $embed_container.find('textarea').get(0).select();\n            success = document.execCommand('copy');\n\n            if (success) {\n                $modal.modal('hide');\n            } else {\n                console.log('fail!');\n            }\n        });\n\n        $embed_button.on('click', function (e) {\n            $qrcode_image.hide();\n            $embed_container.toggle();\n        });\n    }\n\n    $qrcode_button.on('click', function (e) {\n        $embed_container.hide();\n        $qrcode_image.toggle();\n    });\n\n}\n\nfunction getEmbeddableSnippet($container, embedTarget, session) {\n    const embedUrl = embedTarget + \"?sessionURL=blob:\" + session;\n    const height = $container.height() + 50;\n    return '<iframe src=\"' + embedUrl + '\" style=\"width:100%; height:' + height + 'px\"  allowfullscreen></iframe>';\n}\n\nfunction shareWidgetConfigurator(browser, $container, {urlShortener, embedTarget}) {\n\n    let urlShortenerFn;\n\n    if (urlShortener) {\n        urlShortenerFn = setURLShortener(urlShortener) !== undefined;\n    }\n\n    let $igv_app_tweet_button_container = $('#igv-app-tweet-button-container');\n    if (!urlShortenerFn) {\n        $igv_app_tweet_button_container.hide();\n    }\n\n    return {\n        browser,\n        $container,\n        $modal: $('#igv-app-share-modal'),\n        $share_input: $('#igv-app-share-input'),\n        $copy_link_button: $('#igv-app-copy-link-button'),\n        $tweet_button_container: urlShortenerFn ? $igv_app_tweet_button_container : undefined,\n        $email_button: $('#igv-app-email-button'),\n        $qrcode_button: $('#igv-app-qrcode-button'),\n        $qrcode_image: $('#igv-app-qrcode-image'),\n        $embed_container: $('#igv-app-embed-container'),\n        $embed_button: $('#igv-app-embed-button'),\n        embedTarget\n    };\n\n}\n\nexport {createShareWidgets, shareWidgetConfigurator}\n"],"names":["Zlib","Huffman","Util","CRC32","DEFLATE","RESERVED","opt_params","files","comment","password","Zip","CompressionMethod","STORE","OperatingSystem","MSDOS","UNIX","MACINTOSH","Flags","ENCRYPT","DESCRIPTOR","UTF8","FileHeaderSignature","LocalFileHeaderSignature","CentralDirectorySignature","prototype","addFile","input","compressed","size","length","crc32","Array","Uint8Array","calc","this","deflateWithOption","Error","push","buffer","option","encrypted","setPassword","compress","file","output","op1","op2","op3","endOfCentralDirectorySize","offset","flags","compressionMethod","date","plainSize","filenameLength","extraFieldLength","commentLength","filename","extraField","tmp","key","i","il","j","jl","localFileSize","centralDirectorySize","createEncryptionKey","set","encode","Math","random","needVersion","Date","getMinutes","getSeconds","getHours","getMonth","getDate","getFullYear","RawDeflate","getByte","n","updateKeys","single","Uint32Array","buildHuffmanTable","lengths","table","bitLength","code","skip","reversed","rtemp","value","listSize","maxCodeLength","minCodeLength","Number","POSITIVE_INFINITY","RawInflate","blocks","bufferSize","totalpos","ip","bitsbuf","bitsbuflen","op","bfinal","bufferType","BufferType","ADAPTIVE","resize","BLOCK","MaxBackwardLength","MaxCopyLength","decompress","parseBlock","concatBufferBlock","concatBufferDynamic","Order","Uint16Array","LengthCodeTable","LengthExtraTable","DistCodeTable","DistExtraTable","FixedLiteralLengthTable","FixedDistanceTable","hdr","readBits","parseUncompressedBlock","parseFixedHuffmanBlock","parseDynamicHuffmanBlock","octet","readCodeByTable","codeWithLength","codeLength","inputLength","codeTable","len","preCopy","olength","subarray","expandBufferBlock","expandBufferAdaptive","fixRatio","decodeHuffmanAdaptive","decodeHuffmanBlock","codeLengthsTable","litlenTable","distTable","lengthTable","prev","repeat","hlit","hdist","hclen","codeLengths","litlen","dist","currentLitlenTable","ti","codeDist","lengthCodeTable","lengthExtraTable","distCodeTable","distExtraTable","opt_param","backward","newSize","maxInflateSize","ratio","addRatio","block","pos","limit","isString","x","String","isGoogleURL","url","includes","isGoogleStorageURL","isGoogleDriveURL","startsWith","indexOf","translateGoogleCloudURL","gsUrl","bucket","object","substring","qIdx","bucketIdx","objIdx","queryIdx","idx1","idx2","idx3","parseBucketName","objectName","result","split","forEach","letter","encodings","has","get","driveDownloadURL","link","id","getGoogleDriveFileID","i1","i2","lastIndexOf","RawInflateStream","opt_buffersize","blockLength","sp","status","Status","INITIALIZED","ip_","bitsbuflen_","bitsbuf_","BlockType","UNCOMPRESSED","FIXED","DYNAMIC","BLOCK_HEADER_START","BLOCK_HEADER_END","BLOCK_BODY_START","BLOCK_BODY_END","DECODE_BLOCK_START","DECODE_BLOCK_END","newInput","stop","readBlockHeader","currentBlockType","readUncompressedBlockHeader","decodeHuffman","concatBuffer","save_","restore_","expandBuffer","bits","call","e","Inflate","cmf","flg","rawinflate","verify","method","Adler32","InflateStream","readHeader","Gunzip","member","decompressed","getMembers","slice","decodeMember","concatMember","isize","inflated","inflen","c","ci","str","mtime","GunzipMember","id1","id2","cm","xfl","os","Gzip","FlagsMask","FEXTRA","xlen","decodeSubField","FNAME","fromCharCode","name","join","FCOMMENT","FHCRC","crc16","data","toString","p","getName","getData","getMtime","deflateOptions","DefaultBufferSize","rawdeflate","now","UNKNOWN","charCodeAt","byteLength","FAT","AMIGA","VMS","VM_CMS","ATARI_TOS","HPFS","Z_SYSTEM","CP_M","TOPS_20","NTFS","QDOS","ACORN_RISCOS","FTEXT","Heap","getParent","index","getChild","current","parent","swap","heap","pop","compressionType","CompressionType","lazy","freqsLitLen","freqsDist","NONE","Lz77MinLength","Lz77MaxLength","WindowSize","MaxCodeLength","HUFMAX","FixedHuffmanTable","blockArray","position","makeNocompressBlock","makeFixedHuffmanBlock","makeDynamicHuffmanBlock","isFinalBlock","btype","nlen","stream","BitStream","writeBits","lz77","fixedHuffman","finish","litLenLengths","litLenCodes","distLengths","distCodes","treeSymbols","treeLengths","treeCodes","bitlen","hclenOrder","transLengths","getLengths_","getCodesFromLengths_","getTreeSymbols_","freqs","codes","dynamicHuffman","dataArray","litLen","literal","apply","Lz77Match","backwardDistance","getDistanceCode_","r","toLz77Array","codeArray","matchKey","matchList","longestMatch","prevMatch","windowSize","lz77buf","skipLength","writeMatch","match","lz77Array","shift","searchLongestMatch_","currentMatch","matchLength","l","matchMax","dl","permatch","litlenLengths","runLength","nResult","rpt","src","nodes","values","nSymbols","reversePackageMerge_","symbols","t","weight","next","minimumCost","flag","type","currentPosition","excess","half","takePackage","m","count","startCode","Unzip","eocdrOffset","numberOfThisDisk","startDisk","totalEntriesThisDisk","totalEntries","centralDirectoryOffset","fileHeaderList","filenameToIndex","FileHeader","version","compression","time","compressedSize","fileNameLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","relativeOffset","parse","LocalFileHeader","searchEndOfCentralDirectoryRecord","parseEndOfCentralDirectoryRecord","parseFileHeader","fileHeader","filelist","filetable","getFileData","localFileHeader","createDecryptionKey","decode","getFilenames","filenameList","stringToByteArray","array","update","adler","tlen","s1","s2","OptimizationParameter","bufferPosition","bitindex","DefaultBlockSize","oldbuf","number","reverse","ReverseTable","rev32_","s","crc","Table","num","Table_","Deflate","rawDeflate","prop","rawDeflateOption","cinfo","flevel","LOG2E","log","fdict","Map","async","init","config","isInitialized","console","warn","gapi","apiKey","configCopy","Object","assign","scope","client_id","clientId","library","Promise","resolve","reject","load","callback","onerror","auth2","then","getAuthInstance","inProgress","getAccessToken","intervalID","setInterval","clearInterval","token","currentUser","isSignedIn","hasGrantedScopes","grant","access_token","expires_at","getAuthResponse","reloadAuthResponse","options","SigninOptionsBuilder","setPrompt","setScope","signIn","getApiKey","process","window","global","atob","Buffer","from","strictMode","q","parser","strict","loose","hasSubarray","arrayCopy","srcOffset","dest","destOffset","arrayCopy_fast","BYTES_PER_ELEMENT","byteOffset","arrayCopy_slow","DEFAULT_HOST","oauth","oauthTokens","setToken","host","google","getToken","keys","wildcardToRegExp","test","removeToken","undefined","RegExp","map","regExpEscape","replace","googleThrottle","constructor","requestsPerSecond","lastStartTime","queued","add","asyncFunction","self","dequeue","addAll","promises","addedPromises","promise","bind","all","inc","elapsed","_execute","setTimeout","candidate","f","igvxhr","setApiKey","loadArrayBuffer","responseType","File","loadFileSlice","loadJson","sendData","contentType","loadString","JSON","path","localfile","blob","range","start","bgz","endsWith","blobToText","arrayBufferToString","blobToArrayBuffer","loadStringFromFile","fn","StringUtils","GoogleAuth","json","googleDriveURL","endPoint","response","fetch","error","headers","GoogleDrive","originalFileName","urlOrFile","substr","FileUtils","getFilename","loadStringFromUrl","urlType","dataURI","info","dataString","decodeURI","bytes","plain","URIUtils","GoogleUtils","loadURL","mapUrl","oauthToken","o","exec","uri","$0","$1","$2","googleToken","getCurrentGoogleAccessToken","getOauthToken","paramSeparator","addApiKey","addTeamDrive","acToken","addOauthHeaders","isChrome","navigator","userAgent","vendor","isAmazonV4Signed","xhr","XMLHttpRequest","body","mimeType","open","timeout","rangeEnd","setRequestHeader","overrideMimeType","withCredentials","onload","event","alert","retries","handleError","tryGoogleAuth","ontimeout","onabort","send","accessToken","fetchGoogleAccessToken","msg","fileReader","FileReader","readAsBinaryString","arrayBuffer","readAsArrayBuffer","text","readAsText","arraybuffer","lim","oBlockList","ptr","totalSize","ba","bsize","bytesLeft","cDataSize","a","inflate","unc","out","cursor","b","unbgzf","getGlobalObject","TextDecoder","octets","string","bytesNeeded","codePoint","k","fromCodePoint","decodeUTF8","NIL","left","right","subscribers","EventBus","subscribe","eventType","subscriberList","post","subscriber","receiveEvent","[object Object]","propogate","QR8bitByte","mode","QRMode","MODE_8BIT_BYTE","parsedData","byteArray","concat","unshift","QRCodeModel","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","globalBus","getLength","write","put","addData","newData","isDark","row","col","getModuleCount","make","makeImpl","getBestMaskPattern","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","beginFill","moveTo","lineTo","endFill","getPatternPosition","getBCHTypeNumber","mod","floor","getBCHTypeInfo","bitIndex","byteIndex","dark","getMask","PAD0","PAD1","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLengthInBits","totalDataCount","dataCount","putBit","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","modPoly","QRPolynomial","modIndex","totalCodeCount","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","multiply","QRMath","gexp","qrCode","sameCount","darkCount","abs","glog","LOG_TABLE","EXP_TABLE","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit","QRCodeLimitLength","Drawing","_getTypeNumber","sText","nCorrectLevel","nType","replacedText","encodeURI","_getUTF8Length","nLimit","document","documentElement","tagName","toLowerCase","el","htOption","_el","_htOption","draw","oQRCode","nCount","makeSVG","tag","attrs","createElementNS","hasOwnProperty","setAttribute","width","height","clear","svg","viewBox","fill","colorLight","setAttributeNS","appendChild","colorDark","child","hasChildNodes","removeChild","lastChild","_bIsPainted","_elCanvas","createElement","_oContext","getContext","_elImage","alt","style","display","_bSupportDataURI","nWidth","nHeight","nRoundedWidth","round","nRoundedHeight","bIsDark","nLeft","nTop","strokeStyle","lineWidth","fillStyle","fillRect","strokeRect","ceil","makeImage","toDataURL","isPainted","clearRect","nNumber","QRCode","vOption","correctLevel","getElementById","useSVG","svgDrawer","_oQRCode","_oDrawing","makeCode","div","create","elem","class","classList","applyStyle","hide","cssStyle","getComputedStyle","_initialDisplay","show","createIcon","color","icon","icons","iconMarkup","title","CorrectLevel","check","cog","exclamation","exclamation-circle","exclamation-triangle","minus","minus-circle","minus-square","plus","plus-circle","plus-square","question","save","search","share","spinner","square","square-full","times","times-circle","wrench","Zlib$1","buildHuffmanTable$1","isString$1","knownFileExtensions","Set","isGoogleURL$1","isGoogleStorageURL$1","isGoogleDriveURL$1","translateGoogleCloudURL$1","parseBucketName$1","encodings$1","encode$1","driveDownloadURL$1","getGoogleDriveFileID$1","isInitialized$1","inProgress$1","getAccessToken$1","signIn$1","getApiKey$1","getDriveFileInfo$1","Authorization","parseUri$1","options$1","getExtension","isFilePath","google_url","createDropdownButtonPicker","multipleFileSelection","filePickerHandler","picker","view","DocsView","ViewId","DOCS","setIncludeFolders","teamView","setEnableTeamDrives","PickerBuilder","enableFeature","Feature","MULTISELECT_ENABLED","setOAuthToken","addView","SUPPORT_TEAM_DRIVES","setCallback","Response","ACTION","Action","PICKED","DOCUMENTS","build","disableFeature","setVisible","hasSubarray$1","arrayCopy$1","arrayCopy_fast$1","arrayCopy_slow$1","dragData","makeDraggable","target","handle","addEventListener","dragStart","stopPropagation","preventDefault","getClientRects","top","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","dragFunction","drag","dragEndFunction","dragEnd","computedStyle","parseInt","screenX","screenY","dx","dy","removeEventListener","DEFAULT_HOST$1","oauth$1","wildcardToRegExp$1","regExpEscape$1","googleThrottle$1","igvxhr$1","load$1","loadFileSlice$1","blobToText$1","arrayBufferToString$1","blobToArrayBuffer$1","loadStringFromFile$1","getFilename$3","getFilename$2","loadStringFromUrl$1","decodeDataURI$1","loadURL$1","mapUrl$1","getCurrentGoogleAccessToken$1","getOauthToken$1","addApiKey$1","addTeamDrive$1","addOauthHeaders$1","isAmazonV4Signed$1","getScopeForURL$1","fetchGoogleAccessToken$1","getCurrentAccessToken$1","unbgzf$1","getGlobalObject$1","decodeUTF8$1","NIL$1","httpMessages","401","403","404","AlertDialog","container","header","errorHeadline","textContent","bodyContainer","ok_container","ok","okHandler","innerHTML","present","message","focus","AlertSingleton$1","root","alertDialog","FileLoadManager","dictionary","inputHandler","isIndexFile","ingestPath","trim","didDragDrop","dataTransfer","dragDropHandler","indexName","itemName","dataName","reset","item","FileLoadWidget","widgetParent","dataTitle","indexTitle","fileLoadManager","dataOnly","doURL","closeHandler","createInputContainer","error_message","dismissErrorMessage","retrievePaths","inputData","inputIndex","paths","querySelectorAll","querySelector","presentErrorMessage","dismiss","input_data_row","label","createURLContainer","createLocalFileContainer","input_index_row","file_chooser_container","pow","file_name","getIndexObjectWithDataName","extension","dataSuffix","lookup","indexObject","aa","isKnownFileExtension","any","isOptional","lut","fa","fasta","bam","cram","gz","indexLookup","bb","parts","configureModal","fileLoadWidget","modal","doDismiss","$","doOK","utils","freeze","__proto__","FileLoad","localFileInput","dropboxButton","googleEnabled","googleDriveButton","isValidLocalFileInput","loadPaths","success","dbFiles","dbFile","cancel","linkType","multiselect","folderselect","Dropbox","choose","parentElement","responses","indexValue","dataPathNames","indexPathCandidates","dataPathName","missing","filter","obj","reduce","accumulator","MultipleTrackFileLoad","$localFileInput","$dropboxButton","$googleDriveButton","fileLoadHandler","indexLUT","dataPaths","indexExtensions","createIndexLUTKey","indexURL","indexFilename","isGoogleDrivePath","configurations","dataPath","requireIndex","doIngestPaths","ingestPaths","singleSet","indexSet","GenomeFileLoad","loadHandler","super","isGZip","_0","_1","fastaURL","SessionFileLoad","createURLModal","fileLoadWidget$1","createSessionWidgets","$rootContainer","prefix","localFileInputId","dropboxButtonId","googleDriveButtonId","urlModalId","sessionSaveModalId","JSONProvider","$urlModal","append","fileLoadWidgetConfig","find","sessionFileLoadConfig","sessionFileLoad","$modal","$input","extensions","val","attr","jsonString","stringify","element","click","download","URL","createObjectURL","Blob","on","keyCode","configureSaveSessionModal","StringDataWrapper","nextLine","idx","nextLineNoTrim","charAt","ByteArrayDataWrapper","parseUri","getDriveFileInfo","getFilename$1","decodeDataURI","getScopeForURL","getCurrentAccessToken","delimiters","GenericDataSource","columns","columnDefs","rowHandler","delimiter","isJSON","sort","records","parseTabData","isArray","getDelimiter","line","keyValues","fromEntries","parseCSV","dataWrapper","record","tokens","getDelimiterForExtension","ModalTable","args","datasource","pageLength","selectionStyle","select","$m","$datatableContainer","$spinner","$okButton","buildTable","relatedTarget","removeClass","selected","getSelectedTableRowsData","$dataTable","setTitle","setDescription","description","children","last","html","remove","setDatasource","empty","$table","startSpinner","tableData","tableColumns","autoWidth","paging","scrollX","scrollY","api","DataTable","adjust","dataTable","stopSpinner","$rows","each","selectedRow","encodeTrackDatasourceConfigurator","genomeId","suffix","canonicalId","encodeSort","AssayType","OutputType","BioRep","TechRep","constructName","colorForTarget","supportsGenome","knownGenomes","aa1","aa2","cc1","cc2","tt1","tt2","multipleTrackFileLoad","customModalTable","$genericSelectModal","encodeModalTables","defaultCustomModalTableConfig","updateTrackMenus","genomeID","GtexUtilsOrUndefined","trackRegistryFile","$dropdownMenu","id_prefix","$divider","trackRegistry","getPathsWithTrackRegistryFile","jsons","buttonConfigurations","getTissueInfo","datasetId","tracks","tissueInfo","tissue","trackConfiguration","buttonConfiguration","createDropdownButton","configureSelectModal","buttonText","$button","insertAfter","$select","$accumulator","configuration","$option","dropboxButtonImageBase64","btoa","googleDriveButtonImageBase64","stylesheetName","ss","styleSheets","href","stylesheetExists","head","insertBefore","childNodes","Globals","urlShortener","initializeGenomeWidgets","browser","genomes","$dropdown_menu","genomeMap","buildMap","AlertSingleton","getAppLaunchGenomes","nextAll","createButton","genome","loadGenome","genomeDropdownLayout","arrayOrJson","g","order","MIN_SAFE_INTEGER","localStorage","setItem","setURLShortener","provider","endpoint","enc","encodeURIComponent","statusText","tinyURLShortener","shortenURL","shortSessionURL","base","session","ready","main","igvwebConfig","currentGenomeId","$container","igv","location","protocol","signOut","getGenomesArray","igvConfig","restoreLastGenome","lastGenomeId","getItem","createBrowser","imgElement","after","googleDriveDropdownItem","$igvMain","genomeFileLoad","Utils","creatGenomeWidgets","genomeFileLoadConfig","genomeWidgetConfigurator","$main","trackLoader","loadTrackList","encodeTrackModalIds","selectModalIdOrUndefined","trackLoadHandler","modalID","encodeModalTableConfig","select_id","createGenericSelectModal","$ok","removeAttr","createTrackWidgetsWithTrackRegistry","GtexUtils","loadSession","toJSON","$saveModal","input_default_value","saveSVGtoFile","$dismiss","createSVGWidget","$share_input","$copy_link_button","$tweet_button_container","$email_button","$qrcode_button","$qrcode_image","$embed_container","$embed_button","embedTarget","compressedSession","snippet","getEmbeddableSnippet","shortURL","twttr","widgets","createShareButton","execCommand","toggle","createShareWidgets","urlShortenerFn","$igv_app_tweet_button_container","shareWidgetConfigurator","$bookmark_button","surl","sessionURL","history","pushState","genomeChangeListener","initializationHelper"],"mappings":"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EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,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"}